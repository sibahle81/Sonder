//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.ScanCare.Database.Entities
{
    public partial class documents_Document : IAuditableEntity, ISoftDeleteEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public int DocTypeId { get; set; } // DocTypeId
        public string SystemName { get; set; } // SystemName (length: 50)
        public string DocumentUri { get; set; } // DocumentUri (length: 1024)
        public string VerifiedBy { get; set; } // verifiedBy (length: 50)
        public System.DateTime? VerifiedByDate { get; set; } // verifiedByDate
        public string FileHash { get; set; } // FileHash (length: 255)
        public string FileName { get; set; } // FileName (length: 255)
        public string FileExtension { get; set; } // FileExtension (length: 50)
        public DocumentStatusEnum? DocumentStatus { get; set; } // DocumentStatusId
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public string DocumentDescription { get; set; } // DocumentDescription (length: 150)
        public bool IsMemberVisible { get; set; } // IsMemberVisible

        // Reverse navigation

        /// <summary>
        /// Child documents_DocumentKeys where [DocumentKeys].[DocumentId] point to this entity (FK_DocumentKeys_Document)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<documents_DocumentKey> DocumentKeys { get; set; } // DocumentKeys.FK_DocumentKeys_Document

        // Foreign keys

        /// <summary>
        /// Parent documents_DocumentType pointed by [Document].([DocTypeId]) (FK_Document_DocumentType)
        /// </summary>
        public virtual documents_DocumentType DocumentType { get; set; } // FK_Document_DocumentType

        public documents_Document()
        {
            CreatedDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
            IsMemberVisible = false;
            DocumentKeys = new System.Collections.Generic.List<documents_DocumentKey>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
