//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.Billing.Database.Entities
{
    public partial class billing_Transaction : IAuditableEntity, ISoftDeleteEntity
    {
        public int TransactionId { get; set; } // TransactionId (Primary key)
        public int? InvoiceId { get; set; } // InvoiceId
        public int RolePlayerId { get; set; } // RolePlayerId
        public int? BankStatementEntryId { get; set; } // BankStatementEntryId
        public int TransactionTypeLinkId { get; set; } // TransactionTypeLinkId
        public decimal Amount { get; set; } // Amount
        public System.DateTime TransactionDate { get; set; } // TransactionDate
        public string BankReference { get; set; } // BankReference (length: 50)
        public TransactionTypeEnum TransactionType { get; set; } // TransactionTypeId
        public string Reason { get; set; } // Reason (length: 255)
        public string RmaReference { get; set; } // RmaReference (length: 100)
        public int? LinkedTransactionId { get; set; } // LinkedTransactionId
        public int? ClaimRecoveryInvoiceId { get; set; } // ClaimRecoveryInvoiceId
        public bool? IsLogged { get; set; } // IsLogged
        public int? AdhocPaymentInstructionId { get; set; } // AdhocPaymentInstructionId
        public bool? IsReAllocation { get; set; } // IsReAllocation
        public decimal? Balance { get; set; } // Balance
        public int? PremiumListingTransactionId { get; set; } // PremiumListingTransactionId
        public DeletedReasonEnum? DeletedReason { get; set; } // DeletedReasonId
        public bool IsDeleted { get; set; } // IsDeleted
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public TransactionReasonEnum? TransactionReason { get; set; } // TransactionReasonId
        public bool? IsBackDated { get; set; } // IsBackDated
        public System.DateTime? TransactionEffectiveDate { get; set; } // TransactionEffectiveDate
        public int? PeriodId { get; set; } // PeriodId

        // Reverse navigation

        /// <summary>
        /// Child billing_DebitTransactionAllocations where [DebitTransactionAllocation].[CreditTransactionId] point to this entity (FK_DebitTransactionAllocation_Transactions2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_DebitTransactionAllocation> DebitTransactionAllocations_CreditTransactionId { get; set; } // DebitTransactionAllocation.FK_DebitTransactionAllocation_Transactions2
        /// <summary>
        /// Child billing_DebitTransactionAllocations where [DebitTransactionAllocation].[DebitTransactionId] point to this entity (FK_DebitTransactionAllocation_Transactions1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_DebitTransactionAllocation> DebitTransactionAllocations_DebitTransactionId { get; set; } // DebitTransactionAllocation.FK_DebitTransactionAllocation_Transactions1
        /// <summary>
        /// Child billing_EmailedDocuments where [EmailedDocument].[TransactionId] point to this entity (FK_EmailedDocumentStatus_Transactions)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_EmailedDocument> EmailedDocuments { get; set; } // EmailedDocument.FK_EmailedDocumentStatus_Transactions
        /// <summary>
        /// Child billing_InterDebtorTransferDetails where [InterDebtorTransferDetail].[LinkedTransactionId] point to this entity (FK_InterDebtorTransferDetail_Transactions)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_InterDebtorTransferDetail> InterDebtorTransferDetails { get; set; } // InterDebtorTransferDetail.FK_InterDebtorTransferDetail_Transactions
        /// <summary>
        /// Child billing_InvoiceAllocations where [InvoiceAllocation].[LinkedTransactionId] point to this entity (FK_InvoiceAllocation_LinkedTransaction)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_InvoiceAllocation> InvoiceAllocations_LinkedTransactionId { get; set; } // InvoiceAllocation.FK_InvoiceAllocation_LinkedTransaction
        /// <summary>
        /// Child billing_InvoiceAllocations where [InvoiceAllocation].[TransactionId] point to this entity (FK_InvoiceAllocation_Transactions)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_InvoiceAllocation> InvoiceAllocations_TransactionId { get; set; } // InvoiceAllocation.FK_InvoiceAllocation_Transactions
        /// <summary>
        /// Child billing_PolicyPaymentAllocations where [PolicyPaymentAllocation].[TransactionId] point to this entity (FK__PolicyPay__Trans__19CEC385)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_PolicyPaymentAllocation> PolicyPaymentAllocations { get; set; } // PolicyPaymentAllocation.FK__PolicyPay__Trans__19CEC385
        /// <summary>
        /// Child billing_RefundHeaderDetails where [RefundHeaderDetail].[TransactionId] point to this entity (FK_RefundHeaderDetail_Transactions)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_RefundHeaderDetail> RefundHeaderDetails { get; set; } // RefundHeaderDetail.FK_RefundHeaderDetail_Transactions
        /// <summary>
        /// Child billing_Transactions where [Transactions].[LinkedTransactionId] point to this entity (FK_Transactions_Transactions)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<billing_Transaction> Transactions { get; set; } // Transactions.FK_Transactions_Transactions

        // Foreign keys

        /// <summary>
        /// Parent billing_AdhocPaymentInstruction pointed by [Transactions].([AdhocPaymentInstructionId]) (FK_Transactions_AdhocPaymentInstructions)
        /// </summary>
        public virtual billing_AdhocPaymentInstruction AdhocPaymentInstruction { get; set; } // FK_Transactions_AdhocPaymentInstructions

        /// <summary>
        /// Parent billing_ClaimRecoveryInvoice pointed by [Transactions].([ClaimRecoveryInvoiceId]) (FK_Transactions_ClaimRecovery)
        /// </summary>
        public virtual billing_ClaimRecoveryInvoice ClaimRecoveryInvoice { get; set; } // FK_Transactions_ClaimRecovery

        /// <summary>
        /// Parent billing_Invoice pointed by [Transactions].([InvoiceId]) (FK_Transactions_Invoice)
        /// </summary>
        public virtual billing_Invoice Invoice { get; set; } // FK_Transactions_Invoice

        /// <summary>
        /// Parent billing_Transaction pointed by [Transactions].([LinkedTransactionId]) (FK_Transactions_Transactions)
        /// </summary>
        public virtual billing_Transaction LinkedTransaction { get; set; } // FK_Transactions_Transactions

        /// <summary>
        /// Parent billing_TransactionTypeLink pointed by [Transactions].([TransactionTypeLinkId]) (FK_Transactions_TransactionType)
        /// </summary>
        public virtual billing_TransactionTypeLink TransactionTypeLink { get; set; } // FK_Transactions_TransactionType

        /// <summary>
        /// Parent client_FinPayee pointed by [Transactions].([RolePlayerId]) (FK_Transactions_FinPayee)
        /// </summary>
        public virtual client_FinPayee FinPayee { get; set; } // FK_Transactions_FinPayee

        /// <summary>
        /// Parent finance_BankStatementEntry pointed by [Transactions].([BankStatementEntryId]) (FK_Transaction_BankStatementEntry)
        /// </summary>
        public virtual finance_BankStatementEntry BankStatementEntry { get; set; } // FK_Transaction_BankStatementEntry

        public billing_Transaction()
        {
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
            IsBackDated = false;
            DebitTransactionAllocations_CreditTransactionId = new System.Collections.Generic.List<billing_DebitTransactionAllocation>();
            DebitTransactionAllocations_DebitTransactionId = new System.Collections.Generic.List<billing_DebitTransactionAllocation>();
            EmailedDocuments = new System.Collections.Generic.List<billing_EmailedDocument>();
            InterDebtorTransferDetails = new System.Collections.Generic.List<billing_InterDebtorTransferDetail>();
            InvoiceAllocations_LinkedTransactionId = new System.Collections.Generic.List<billing_InvoiceAllocation>();
            InvoiceAllocations_TransactionId = new System.Collections.Generic.List<billing_InvoiceAllocation>();
            PolicyPaymentAllocations = new System.Collections.Generic.List<billing_PolicyPaymentAllocation>();
            RefundHeaderDetails = new System.Collections.Generic.List<billing_RefundHeaderDetail>();
            Transactions = new System.Collections.Generic.List<billing_Transaction>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
