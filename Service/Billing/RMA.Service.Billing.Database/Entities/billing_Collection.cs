//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.Billing.Database.Entities
{
    public partial class billing_Collection : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int CollectionsId { get; set; } // CollectionsId (Primary key)
        public int? InvoiceId { get; set; } // InvoiceId
        public string BankReference { get; set; } // BankReference (length: 255)
        public CollectionTypeEnum CollectionType { get; set; } // CollectionTypeId
        public decimal Amount { get; set; } // Amount
        public CollectionStatusEnum CollectionStatus { get; set; } // CollectionStatusId
        public int? RolePlayerBankingId { get; set; } // RolePlayerBankingId
        public bool IsDeleted { get; set; } // IsDeleted
        public bool IsActive { get; set; } // IsActive
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ErrorCode { get; set; } // ErrorCode (length: 50)
        public int? MaxSubmissionCount { get; set; } // MaxSubmissionCount
        public int? SubmissionCount { get; set; } // SubmissionCount
        public string BatchReference { get; set; } // BatchReference (length: 250)
        public int? PolicyId { get; set; } // PolicyId
        public System.DateTime? SubmissionDate { get; set; } // SubmissionDate
        public System.DateTime? CollectionConfirmationDate { get; set; } // CollectionConfirmationDate
        public bool? CanResubmit { get; set; } // CanResubmit
        public CollectionRejectionTypeEnum? CollectionRejectionType { get; set; } // CollectionRejectionTypeId
        public System.DateTime? RejectionDate { get; set; } // RejectionDate
        public System.DateTime? ReconciliationDate { get; set; } // ReconciliationDate
        public string ErrorDescription { get; set; } // ErrorDescription (length: 150)
        public int? CollectionBatchId { get; set; } // CollectionBatchId
        public System.DateTime? ReversalDate { get; set; } // ReversalDate
        public int? AdhocPaymentInstructionId { get; set; } // AdhocPaymentInstructionId
        public int? TermArrangementScheduleId { get; set; } // TermArrangementScheduleId
        public CollectionsDebtorBankAccountSourceEnum? CollectionsDebtorBankAccountSource { get; set; } // CollectionsDebtorBankAccountSourceId
        public System.DateTime? EffectiveDate { get; set; } // EffectiveDate
        public string SubmittedClientAccount { get; set; } // SubmittedClientAccount (length: 100)

        // Reverse navigation

        /// <summary>
        /// Child payment_FacsTransactionResults where [FacsTransactionResults].[CollectionId] point to this entity (FK_FacsTransactionResults_Collections)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<payment_FacsTransactionResult> FacsTransactionResults { get; set; } // FacsTransactionResults.FK_FacsTransactionResults_Collections

        // Foreign keys

        /// <summary>
        /// Parent billing_AdhocPaymentInstruction pointed by [Collections].([AdhocPaymentInstructionId]) (FK_Collections_AdhocPaymentInstructions)
        /// </summary>
        public virtual billing_AdhocPaymentInstruction AdhocPaymentInstruction { get; set; } // FK_Collections_AdhocPaymentInstructions

        /// <summary>
        /// Parent billing_CollectionBatch pointed by [Collections].([CollectionBatchId]) (FK_Collections_CollectionBatch)
        /// </summary>
        public virtual billing_CollectionBatch CollectionBatch { get; set; } // FK_Collections_CollectionBatch

        /// <summary>
        /// Parent billing_Invoice pointed by [Collections].([InvoiceId]) (FK_Collections_Invoice)
        /// </summary>
        public virtual billing_Invoice Invoice { get; set; } // FK_Collections_Invoice

        /// <summary>
        /// Parent billing_TermArrangementSchedule pointed by [Collections].([TermArrangementScheduleId]) (FK_Collections_TermArrangementSchedule)
        /// </summary>
        public virtual billing_TermArrangementSchedule TermArrangementSchedule { get; set; } // FK_Collections_TermArrangementSchedule

        public billing_Collection()
        {
            FacsTransactionResults = new System.Collections.Generic.List<payment_FacsTransactionResult>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
