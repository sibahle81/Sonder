//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class client_RolePlayerRelationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<client_RolePlayerRelation>
    {
        public client_RolePlayerRelationConfiguration()
            : this("client")
        {
        }

        public client_RolePlayerRelationConfiguration(string schema)
        {
            ToTable("RolePlayerRelation", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FromRolePlayerId).HasColumnName(@"FromRolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.ToRolePlayerId).HasColumnName(@"ToRolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.RolePlayerTypeId).HasColumnName(@"RolePlayerTypeId").HasColumnType("int").IsRequired();
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.AllocationPercentage).HasColumnName(@"AllocationPercentage").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Policy).WithMany(b => b.RolePlayerRelations).HasForeignKey(c => c.PolicyId).WillCascadeOnDelete(false); // FK__RolePlaye__Polic__32C3C32A
            HasRequired(a => a.FromRolePlayer).WithMany(b => b.RolePlayerRelations_FromRolePlayerId).HasForeignKey(c => c.FromRolePlayerId).WillCascadeOnDelete(false); // FK_RolePlayerRelation_RolePlayer
            HasRequired(a => a.RolePlayerType).WithMany(b => b.RolePlayerRelations).HasForeignKey(c => c.RolePlayerTypeId).WillCascadeOnDelete(false); // FK_RolePlayerRelation_RolePlayerType
            HasRequired(a => a.ToRolePlayer).WithMany(b => b.RolePlayerRelations_ToRolePlayerId).HasForeignKey(c => c.ToRolePlayerId).WillCascadeOnDelete(false); // FK_RolePlayerRelation_RolePlayer1
        }
    }

}
