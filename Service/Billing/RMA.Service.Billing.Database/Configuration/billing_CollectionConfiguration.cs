//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_CollectionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_Collection>
    {
        public billing_CollectionConfiguration()
            : this("billing")
        {
        }

        public billing_CollectionConfiguration(string schema)
        {
            ToTable("Collections", schema);
            HasKey(x => x.CollectionsId);

            Property(x => x.CollectionsId).HasColumnName(@"CollectionsId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsOptional();
            Property(x => x.BankReference).HasColumnName(@"BankReference").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CollectionType).HasColumnName(@"CollectionTypeId").HasColumnType("int").IsRequired();
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.CollectionStatus).HasColumnName(@"CollectionStatusId").HasColumnType("int").IsRequired();
            Property(x => x.RolePlayerBankingId).HasColumnName(@"RolePlayerBankingId").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ErrorCode).HasColumnName(@"ErrorCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MaxSubmissionCount).HasColumnName(@"MaxSubmissionCount").HasColumnType("int").IsOptional();
            Property(x => x.SubmissionCount).HasColumnName(@"SubmissionCount").HasColumnType("int").IsOptional();
            Property(x => x.BatchReference).HasColumnName(@"BatchReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.SubmissionDate).HasColumnName(@"SubmissionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CollectionConfirmationDate).HasColumnName(@"CollectionConfirmationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CanResubmit).HasColumnName(@"CanResubmit").HasColumnType("bit").IsOptional();
            Property(x => x.CollectionRejectionType).HasColumnName(@"CollectionRejectionTypeId").HasColumnType("int").IsOptional();
            Property(x => x.RejectionDate).HasColumnName(@"RejectionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ReconciliationDate).HasColumnName(@"ReconciliationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ErrorDescription).HasColumnName(@"ErrorDescription").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.CollectionBatchId).HasColumnName(@"CollectionBatchId").HasColumnType("int").IsOptional();
            Property(x => x.ReversalDate).HasColumnName(@"ReversalDate").HasColumnType("datetime").IsOptional();
            Property(x => x.AdhocPaymentInstructionId).HasColumnName(@"AdhocPaymentInstructionId").HasColumnType("int").IsOptional();
            Property(x => x.TermArrangementScheduleId).HasColumnName(@"TermArrangementScheduleId").HasColumnType("int").IsOptional();
            Property(x => x.CollectionsDebtorBankAccountSource).HasColumnName(@"CollectionsDebtorBankAccountSourceId").HasColumnType("int").IsOptional();
            Property(x => x.EffectiveDate).HasColumnName(@"EffectiveDate").HasColumnType("datetime").IsOptional();
            Property(x => x.SubmittedClientAccount).HasColumnName(@"SubmittedClientAccount").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);

            // Foreign keys
            HasOptional(a => a.AdhocPaymentInstruction).WithMany(b => b.Collections).HasForeignKey(c => c.AdhocPaymentInstructionId).WillCascadeOnDelete(false); // FK_Collections_AdhocPaymentInstructions
            HasOptional(a => a.CollectionBatch).WithMany(b => b.Collections).HasForeignKey(c => c.CollectionBatchId).WillCascadeOnDelete(false); // FK_Collections_CollectionBatch
            HasOptional(a => a.Invoice).WithMany(b => b.Collections).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_Collections_Invoice
            HasOptional(a => a.TermArrangementSchedule).WithMany(b => b.Collections).HasForeignKey(c => c.TermArrangementScheduleId).WillCascadeOnDelete(false); // FK_Collections_TermArrangementSchedule
        }
    }

}
