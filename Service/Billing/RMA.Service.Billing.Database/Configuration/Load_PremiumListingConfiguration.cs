//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class Load_PremiumListingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Load_PremiumListing>
    {
        public Load_PremiumListingConfiguration()
            : this("Load")
        {
        }

        public Load_PremiumListingConfiguration(string schema)
        {
            ToTable("PremiumListing", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FileIdentifier).HasColumnName(@"FileIdentifier").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Company).HasColumnName(@"Company").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PolicyNumber).HasColumnName(@"PolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.ClientReference).HasColumnName(@"ClientReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.JoinDate).HasColumnName(@"JoinDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.ClientType).HasColumnName(@"ClientType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MainMemberId).HasColumnName(@"MainMemberID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PassportNumber).HasColumnName(@"PassportNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.BenefitName).HasColumnName(@"BenefitName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Address1).HasColumnName(@"Address1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Province).HasColumnName(@"Province").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCode).HasColumnName(@"PostalCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.PostalAddress1).HasColumnName(@"PostalAddress1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalAddress2).HasColumnName(@"PostalAddress2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCity).HasColumnName(@"PostalCity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalProvince).HasColumnName(@"PostalProvince").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCountry).HasColumnName(@"PostalCountry").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalPostCode).HasColumnName(@"PostalPostCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.Telephone).HasColumnName(@"Telephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(24);
            Property(x => x.Mobile).HasColumnName(@"Mobile").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(24);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PreferredCommunication).HasColumnName(@"PreferredCommunication").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(24);
            Property(x => x.PreviousInsurer).HasColumnName(@"PreviousInsurer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PreviousInsurerStartDate).HasColumnName(@"PreviousInsurerStartDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PreviousInsurerEndDate).HasColumnName(@"PreviousInsurerEndDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PreviousInsurerPolicyNumber).HasColumnName(@"PreviousInsurerPolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ExcelRowNumber).HasColumnName(@"ExcelRowNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RetirementAge).HasColumnName(@"RetirementAge").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
        }
    }

}
