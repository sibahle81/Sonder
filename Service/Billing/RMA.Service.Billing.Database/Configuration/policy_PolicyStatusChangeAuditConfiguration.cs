//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class policy_PolicyStatusChangeAuditConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<policy_PolicyStatusChangeAudit>
    {
        public policy_PolicyStatusChangeAuditConfiguration()
            : this("policy")
        {
        }

        public policy_PolicyStatusChangeAuditConfiguration(string schema)
        {
            ToTable("PolicyStatusChangeAudit", schema);
            HasKey(x => x.PolicyStatusChangeAuditId);

            Property(x => x.PolicyStatusChangeAuditId).HasColumnName(@"PolicyStatusChangeAuditId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsRequired();
            Property(x => x.PolicyStatus).HasColumnName(@"PolicyStatusId").HasColumnType("int").IsRequired();
            Property(x => x.Reason).HasColumnName(@"Reason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.EffectiveFrom).HasColumnName(@"EffectiveFrom").HasColumnType("date").IsRequired();
            Property(x => x.EffectiveTo).HasColumnName(@"EffectiveTo").HasColumnType("date").IsOptional();
            Property(x => x.RequestedBy).HasColumnName(@"RequestedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RequestedDate).HasColumnName(@"RequestedDate").HasColumnType("date").IsRequired();

            // Foreign keys
            HasRequired(a => a.Policy).WithMany(b => b.PolicyStatusChangeAudits).HasForeignKey(c => c.PolicyId).WillCascadeOnDelete(false); // FK_PolicyStatusChangeAudit_Policy
        }
    }

}
