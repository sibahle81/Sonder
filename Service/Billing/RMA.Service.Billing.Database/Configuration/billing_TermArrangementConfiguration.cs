//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_TermArrangementConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_TermArrangement>
    {
        public billing_TermArrangementConfiguration()
            : this("billing")
        {
        }

        public billing_TermArrangementConfiguration(string schema)
        {
            ToTable("TermArrangement", schema);
            HasKey(x => x.TermArrangementId);

            Property(x => x.TermArrangementId).HasColumnName(@"TermArrangementId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TotalAmount).HasColumnName(@"TotalAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.TermArrangementStatus).HasColumnName(@"TermArrangementStatusId").HasColumnType("int").IsRequired();
            Property(x => x.PaymentMethod).HasColumnName(@"PaymentMethodId").HasColumnType("int").IsRequired();
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("date").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.NotificationDate).HasColumnName(@"NotificationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.TermMonths).HasColumnName(@"TermMonths").HasColumnType("int").IsRequired();
            Property(x => x.Balance).HasColumnName(@"Balance").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.ApprovalDate).HasColumnName(@"ApprovalDate").HasColumnType("date").IsOptional();
            Property(x => x.RolePlayerId).HasColumnName(@"RolePlayerId").HasColumnType("int").IsOptional();
            Property(x => x.TermArrangementPaymentFrequency).HasColumnName(@"TermArrangementPaymentFrequencyId").HasColumnType("int").IsRequired();
            Property(x => x.TermApplicationDeclineReason).HasColumnName(@"TermApplicationDeclineReasonId").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.FinancialYearId).HasColumnName(@"FinancialYearId").HasColumnType("int").IsOptional();
            Property(x => x.InterestProcessed).HasColumnName(@"InterestProcessed").HasColumnType("bit").IsOptional();
            Property(x => x.ParentTermArrangementId).HasColumnName(@"ParentTermArrangementId").HasColumnType("int").IsOptional();
            Property(x => x.OverlapsBillingCycles).HasColumnName(@"OverlapsBillingCycles").HasColumnType("bit").IsOptional();
            Property(x => x.BalanceCarriedToNextCycle).HasColumnName(@"BalanceCarriedToNextCycle").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.BankAccountId).HasColumnName(@"BankAccountId").HasColumnType("int").IsOptional();
            Property(x => x.LinkedTermArrangementId).HasColumnName(@"LinkedTermArrangementId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.IndustryFinancialYear).WithMany(b => b.TermArrangements).HasForeignKey(c => c.FinancialYearId).WillCascadeOnDelete(false); // FK_TermArrangement_IndustryFinancialYear
        }
    }

}
