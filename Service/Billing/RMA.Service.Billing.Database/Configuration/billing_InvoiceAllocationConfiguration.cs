//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_InvoiceAllocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_InvoiceAllocation>
    {
        public billing_InvoiceAllocationConfiguration()
            : this("billing")
        {
        }

        public billing_InvoiceAllocationConfiguration(string schema)
        {
            ToTable("InvoiceAllocation", schema);
            HasKey(x => x.InvoiceAllocationId);

            Property(x => x.InvoiceAllocationId).HasColumnName(@"InvoiceAllocationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TransactionId).HasColumnName(@"TransactionId").HasColumnType("int").IsRequired();
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsOptional();
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.ClaimRecoveryId).HasColumnName(@"ClaimRecoveryId").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.DeletedReason).HasColumnName(@"DeletedReasonId").HasColumnType("int").IsOptional();
            Property(x => x.LinkedTransactionId).HasColumnName(@"LinkedTransactionId").HasColumnType("int").IsOptional();
            Property(x => x.BillingAllocationType).HasColumnName(@"BillingAllocationTypeId").HasColumnType("int").IsOptional();
            Property(x => x.TransactionTypeLinkId).HasColumnName(@"TransactionTypeLinkId").HasColumnType("int").IsOptional();
            Property(x => x.ProductCategoryType).HasColumnName(@"ProductCategoryTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClaimRecoveryInvoice).WithMany(b => b.InvoiceAllocations).HasForeignKey(c => c.ClaimRecoveryId).WillCascadeOnDelete(false); // FK_InvoiceAllocation_ClaimRecoveryInvoice
            HasOptional(a => a.Invoice).WithMany(b => b.InvoiceAllocations).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_InvoiceAllocation_Invoice
            HasOptional(a => a.LinkedTransaction).WithMany(b => b.InvoiceAllocations_LinkedTransactionId).HasForeignKey(c => c.LinkedTransactionId).WillCascadeOnDelete(false); // FK_InvoiceAllocation_LinkedTransaction
            HasOptional(a => a.TransactionTypeLink).WithMany(b => b.InvoiceAllocations).HasForeignKey(c => c.TransactionTypeLinkId).WillCascadeOnDelete(false); // FK_InvoiceAllocation_TransactionTypeLink
            HasRequired(a => a.Transaction).WithMany(b => b.InvoiceAllocations_TransactionId).HasForeignKey(c => c.TransactionId).WillCascadeOnDelete(false); // FK_InvoiceAllocation_Transactions
        }
    }

}
