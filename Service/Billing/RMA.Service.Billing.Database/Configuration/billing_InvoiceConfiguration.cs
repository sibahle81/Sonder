//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_InvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_Invoice>
    {
        public billing_InvoiceConfiguration()
            : this("billing")
        {
        }

        public billing_InvoiceConfiguration(string schema)
        {
            ToTable("Invoice", schema);
            HasKey(x => x.InvoiceId);

            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TenantId).HasColumnName(@"TenantId").HasColumnType("int").IsRequired();
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.CollectionDate).HasColumnName(@"CollectionDate").HasColumnType("date").IsRequired();
            Property(x => x.TotalInvoiceAmount).HasColumnName(@"TotalInvoiceAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.InvoiceStatus).HasColumnName(@"InvoiceStatusId").HasColumnType("int").IsRequired();
            Property(x => x.InvoiceNumber).HasColumnName(@"InvoiceNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InvoiceDate).HasColumnName(@"InvoiceDate").HasColumnType("date").IsRequired();
            Property(x => x.NotificationDate).HasColumnName(@"NotificationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.SourceModule).HasColumnName(@"SourceModuleId").HasColumnType("int").IsOptional();
            Property(x => x.SourceProcess).HasColumnName(@"SourceProcessId").HasColumnType("int").IsOptional();
            Property(x => x.PendingThirtyDaysLog).HasColumnName(@"PendingThirtyDaysLog").HasColumnType("bit").IsOptional();
            Property(x => x.Reason).HasColumnName(@"Reason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.LinkedInvoiceId).HasColumnName(@"LinkedInvoiceId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.LinkedInvoice).WithMany(b => b.Invoices).HasForeignKey(c => c.LinkedInvoiceId).WillCascadeOnDelete(false); // FK_Invoice_Invoice
            HasOptional(a => a.Policy).WithMany(b => b.Invoices).HasForeignKey(c => c.PolicyId).WillCascadeOnDelete(false); // FK_Invoice_Policy
        }
    }

}
