//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_InvoiceLineItemConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_InvoiceLineItem>
    {
        public billing_InvoiceLineItemConfiguration()
            : this("billing")
        {
        }

        public billing_InvoiceLineItemConfiguration(string schema)
        {
            ToTable("InvoiceLineItems", schema);
            HasKey(x => x.InvoiceLineItemsId);

            Property(x => x.InvoiceLineItemsId).HasColumnName(@"InvoiceLineItemsId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsRequired();
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.PolicyStatus).HasColumnName(@"PolicyStatusId").HasColumnType("int").IsOptional();
            Property(x => x.IsExcludedDueToStatus).HasColumnName(@"IsExcludedDueToStatus").HasColumnType("bit").IsOptional();
            Property(x => x.InsurableItem).HasColumnName(@"InsurableItem").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.NoOfEmployees).HasColumnName(@"NoOfEmployees").HasColumnType("int").IsOptional();
            Property(x => x.Earnings).HasColumnName(@"Earnings").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Rate).HasColumnName(@"Rate").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PremiumPayable).HasColumnName(@"PremiumPayable").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Percentage).HasColumnName(@"Percentage").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PaymentAmount).HasColumnName(@"PaymentAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.ActualPremium).HasColumnName(@"ActualPremium").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.CoverStartDate).HasColumnName(@"CoverStartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CoverEndDate).HasColumnName(@"CoverEndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.PremiumListingTransactionId).HasColumnName(@"PremiumListingTransactionId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitPayrollId).HasColumnName(@"BenefitPayrollId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitRateId).HasColumnName(@"BenefitRateId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.PremiumListingTransaction).WithMany(b => b.InvoiceLineItems).HasForeignKey(c => c.PremiumListingTransactionId).WillCascadeOnDelete(false); // FK_InvoiceLineItems_PremiumListingTransaction
            HasRequired(a => a.Invoice).WithMany(b => b.InvoiceLineItems).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_InvoiceLineItems_Invoice
        }
    }

}
