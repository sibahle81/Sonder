//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class payment_FacsTransactionResultConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<payment_FacsTransactionResult>
    {
        public payment_FacsTransactionResultConfiguration()
            : this("payment")
        {
        }

        public payment_FacsTransactionResultConfiguration(string schema)
        {
            ToTable("FacsTransactionResults", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CanEdit).HasColumnName(@"CanEdit").HasColumnType("bit").IsRequired();
            Property(x => x.PaymentId).HasColumnName(@"PaymentId").HasColumnType("int").IsOptional();
            Property(x => x.TransactionType).HasColumnName(@"TransactionType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5);
            Property(x => x.DocumentType).HasColumnName(@"DocumentType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Reference1).HasColumnName(@"Reference1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Reference2).HasColumnName(@"Reference2").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(11);
            Property(x => x.ActionDate).HasColumnName(@"ActionDate").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.RequisitionNumber).HasColumnName(@"RequisitionNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.DocumentNumber).HasColumnName(@"DocumentNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.AgencyPrefix).HasColumnName(@"AgencyPrefix").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.AgencyNumber).HasColumnName(@"AgencyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.DepositType).HasColumnName(@"DepositType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.ChequeClearanceCode).HasColumnName(@"ChequeClearanceCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ChequeNumber).HasColumnName(@"ChequeNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.BankAccountNumber).HasColumnName(@"BankAccountNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(17);
            Property(x => x.UniqueUserCode).HasColumnName(@"UniqueUserCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.CollectionId).HasColumnName(@"CollectionId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Collection).WithMany(b => b.FacsTransactionResults).HasForeignKey(c => c.CollectionId).WillCascadeOnDelete(false); // FK_FacsTransactionResults_Collections
            HasOptional(a => a.Payment).WithMany(b => b.FacsTransactionResults).HasForeignKey(c => c.PaymentId).WillCascadeOnDelete(false); // FK_Payment_PaymentId
        }
    }

}
