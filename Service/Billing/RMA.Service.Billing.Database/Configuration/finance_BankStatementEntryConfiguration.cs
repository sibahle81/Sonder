//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class finance_BankStatementEntryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<finance_BankStatementEntry>
    {
        public finance_BankStatementEntryConfiguration()
            : this("finance")
        {
        }

        public finance_BankStatementEntryConfiguration(string schema)
        {
            ToTable("BankStatementEntry", schema);
            HasKey(x => x.BankStatementEntryId);

            Property(x => x.BankStatementEntryId).HasColumnName(@"BankStatementEntryId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BankStatementEntryType).HasColumnName(@"BankStatementEntryTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CanEdit).HasColumnName(@"CanEdit").HasColumnType("bit").IsRequired();
            Property(x => x.TransactionType).HasColumnName(@"TransactionType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5);
            Property(x => x.DocumentType).HasColumnName(@"DocumentType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.UserReference1).HasColumnName(@"UserReference1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.UserReference2).HasColumnName(@"UserReference2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.RequisitionNumber).HasColumnName(@"RequisitionNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(9);
            Property(x => x.ChequeDepositNumber).HasColumnName(@"ChequeDepositNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.BankAccountNumber).HasColumnName(@"BankAccountNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(17);
            Property(x => x.UniqueUserCode).HasColumnName(@"UniqueUserCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            Property(x => x.BankBranch).HasColumnName(@"BankBranch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SubType).HasColumnName(@"SubType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.TransactionDate).HasColumnName(@"TransactionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.StatementDate).HasColumnName(@"StatementDate").HasColumnType("datetime").IsOptional();
            Property(x => x.EStatementNumber).HasColumnName(@"EStatementNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.StatementNumber).HasColumnName(@"StatementNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.BankName).HasColumnName(@"BankName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RecordId).HasColumnName(@"RecordID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.HyphenDateProcessed).HasColumnName(@"HyphenDateProcessed").HasColumnType("datetime").IsOptional();
            Property(x => x.BankAndStatementDate).HasColumnName(@"BankAndStatementDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ReReceiveCode).HasColumnName(@"ReReceiveCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.StatementTransactionCount).HasColumnName(@"StatementTransactionCount").HasColumnType("int").IsOptional();
            Property(x => x.NettAmount).HasColumnName(@"NettAmount").HasColumnType("bigint").IsOptional();
            Property(x => x.HyphenDateReceived).HasColumnName(@"HyphenDateReceived").HasColumnType("datetime").IsOptional();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsOptional();
            Property(x => x.StatementAndLineNumber).HasColumnName(@"StatementAndLineNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.BatchNumber).HasColumnName(@"BatchNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.DebitCredit).HasColumnName(@"DebitCredit").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.StatementLineNumber).HasColumnName(@"StatementLineNumber").HasColumnType("int").IsOptional();
            Property(x => x.ErrorCode).HasColumnName(@"ErrorCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Proccessed).HasColumnName(@"Proccessed").HasColumnType("bit").IsRequired();
            Property(x => x.User).HasColumnName(@"User").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Code1).HasColumnName(@"Code1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Code2).HasColumnName(@"Code2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.UserReference).HasColumnName(@"UserReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ClaimCheckReference).HasColumnName(@"ClaimCheckReference").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.Premium).HasColumnName(@"Premium").HasColumnType("int").IsOptional();
            Property(x => x.Commission).HasColumnName(@"Commission").HasColumnType("int").IsOptional();
        }
    }

}
