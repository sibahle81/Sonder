//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class policy_PersonInsuredCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<policy_PersonInsuredCategory>
    {
        public policy_PersonInsuredCategoryConfiguration()
            : this("policy")
        {
        }

        public policy_PersonInsuredCategoryConfiguration(string schema)
        {
            ToTable("PersonInsuredCategory", schema);
            HasKey(x => x.PersonInsuredCategoryId);

            Property(x => x.PersonInsuredCategoryId).HasColumnName(@"PersonInsuredCategoryId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersonId).HasColumnName(@"PersonId").HasColumnType("int").IsRequired();
            Property(x => x.PersonEmploymentId).HasColumnName(@"PersonEmploymentId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitCategoryId).HasColumnName(@"BenefitCategoryId").HasColumnType("int").IsRequired();
            Property(x => x.EffectiveDate).HasColumnName(@"EffectiveDate").HasColumnType("date").IsRequired();
            Property(x => x.PersonInsuredCategoryStatus).HasColumnName(@"PersonInsuredCategoryStatusId").HasColumnType("int").IsOptional();
            Property(x => x.DateJoinedPolicy).HasColumnName(@"DateJoinedPolicy").HasColumnType("date").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.BenefitDetailId).HasColumnName(@"BenefitDetailId").HasColumnType("int").IsRequired();
            Property(x => x.RolePlayerTypeId).HasColumnName(@"RolePlayerTypeId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasOptional(a => a.PersonEmployment).WithMany(b => b.PersonInsuredCategories).HasForeignKey(c => c.PersonEmploymentId).WillCascadeOnDelete(false); // FK_CategoryInsured_PersonEmployment
            HasRequired(a => a.Person).WithMany(b => b.PersonInsuredCategories).HasForeignKey(c => c.PersonId).WillCascadeOnDelete(false); // FK_CategoryInsured_Person
            HasRequired(a => a.PolicyBenefitCategory).WithMany(b => b.PersonInsuredCategories).HasForeignKey(c => c.BenefitCategoryId).WillCascadeOnDelete(false); // FK_CategoryInsured_PolicyBenefitCategory
            HasRequired(a => a.RolePlayerType).WithMany(b => b.PersonInsuredCategories).HasForeignKey(c => c.RolePlayerTypeId).WillCascadeOnDelete(false); // FK_PersonInsuredCategory_RolePlayerType
        }
    }

}
