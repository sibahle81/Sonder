//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_InterestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_Interest>
    {
        public billing_InterestConfiguration()
            : this("billing")
        {
        }

        public billing_InterestConfiguration(string schema)
        {
            ToTable("Interest", schema);
            HasKey(x => x.InterestId);

            Property(x => x.InterestId).HasColumnName(@"InterestId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IndustryClass).HasColumnName(@"IndustryClassId").HasColumnType("int").IsRequired();
            Property(x => x.PeriodId).HasColumnName(@"PeriodId").HasColumnType("int").IsRequired();
            Property(x => x.RolePlayerId).HasColumnName(@"RolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsRequired();
            Property(x => x.ProductCategoryId).HasColumnName(@"ProductCategoryId").HasColumnType("int").IsOptional();
            Property(x => x.Balance).HasColumnName(@"Balance").HasColumnType("decimal").IsRequired().HasPrecision(18,5);
            Property(x => x.CalculatedInterestAmount).HasColumnName(@"CalculatedInterestAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,5);
            Property(x => x.AdjustedInterestAmount).HasColumnName(@"AdjustedInterestAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,5);
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.InterestStatus).HasColumnName(@"InterestStatusId").HasColumnType("int").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.FormulaApplied).HasColumnName(@"FormulaApplied").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.IsBackDated).HasColumnName(@"IsBackDated").HasColumnType("bit").IsOptional();
            Property(x => x.TransactionEffectiveDate).HasColumnName(@"TransactionEffectiveDate").HasColumnType("datetime").IsOptional();
            Property(x => x.LinkedTransactionId).HasColumnName(@"LinkedTransactionId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.FinPayee).WithMany(b => b.Interests).HasForeignKey(c => c.RolePlayerId).WillCascadeOnDelete(false); // FK_Interest_FinPayee
            HasRequired(a => a.Invoice).WithMany(b => b.Interests).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_Interest_Invoice
            HasRequired(a => a.Period).WithMany(b => b.Interests).HasForeignKey(c => c.PeriodId).WillCascadeOnDelete(false); // FK_Interest_Period
        }
    }

}
