//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class billing_InvoiceDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_InvoiceDetail>
    {
        public billing_InvoiceDetailConfiguration()
            : this("billing")
        {
        }

        public billing_InvoiceDetailConfiguration(string schema)
        {
            ToTable("InvoiceDetail", schema);
            HasKey(x => x.InvoiceDetailId);

            Property(x => x.InvoiceDetailId).HasColumnName(@"InvoiceDetailId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsRequired();
            Property(x => x.Percentage).HasColumnName(@"Percentage").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PremiumPayable).HasColumnName(@"PremiumPayable").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PaymentAmount).HasColumnName(@"PaymentAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.ActualPremium).HasColumnName(@"ActualPremium").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PreviousBillingAmount).HasColumnName(@"PreviousBillingAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.CoverStartDate).HasColumnName(@"CoverStartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CoverEndDate).HasColumnName(@"CoverEndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.PendingThirtyDaysLog).HasColumnName(@"PendingThirtyDaysLog").HasColumnType("bit").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Invoice).WithMany(b => b.InvoiceDetails).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_InvoiceDetail_Invoice
        }
    }

}
