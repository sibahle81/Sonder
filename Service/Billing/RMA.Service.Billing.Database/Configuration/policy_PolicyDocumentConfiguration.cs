//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Billing.Database.Entities;

namespace RMA.Service.Billing.Database.Configuration
{
    public class policy_PolicyDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<policy_PolicyDocument>
    {
        public policy_PolicyDocumentConfiguration()
            : this("policy")
        {
        }

        public policy_PolicyDocumentConfiguration(string schema)
        {
            ToTable("PolicyDocument", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.PolicyNumber).HasColumnName(@"PolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.InceptionDate).HasColumnName(@"InceptionDate").HasColumnType("date").IsOptional();
            Property(x => x.PolicyStatus).HasColumnName(@"PolicyStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.MemberName).HasColumnName(@"MemberName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DocumentType).HasColumnName(@"DocumentTypeId").HasColumnType("int").IsOptional();
            Property(x => x.DocumentTypeName).HasColumnName(@"DocumentTypeName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.DocumentStatus).HasColumnName(@"DocumentStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.FileName).HasColumnName(@"FileName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.FileDate).HasColumnName(@"FileDate").HasColumnType("date").IsOptional();
            Property(x => x.DateRecordLoaded).HasColumnName(@"DateRecordLoaded").HasColumnType("datetime").IsOptional();
        }
    }

}
