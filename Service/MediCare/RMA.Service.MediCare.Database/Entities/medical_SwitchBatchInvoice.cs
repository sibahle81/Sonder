//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.MediCare.Database.Entities
{
    public partial class medical_SwitchBatchInvoice : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int SwitchBatchInvoiceId { get; set; } // SwitchBatchInvoiceId (Primary key)
        public int SwitchBatchId { get; set; } // SwitchBatchId
        public int? InvoiceId { get; set; } // InvoiceId
        public int? BatchSequenceNumber { get; set; } // BatchSequenceNumber
        public string SwitchBatchNumber { get; set; } // SwitchBatchNumber (length: 255)
        public string SwitchTransactionNumber { get; set; } // SwitchTransactionNumber (length: 255)
        public string PracticeNumber { get; set; } // PracticeNumber (length: 255)
        public string HealthCareProviderName { get; set; } // HealthCareProviderName (length: 255)
        public System.DateTime? InvoiceDate { get; set; } // InvoiceDate
        public System.DateTime? DateSubmitted { get; set; } // DateSubmitted
        public System.DateTime? DateReceived { get; set; } // DateReceived
        public string SpInvoiceNumber { get; set; } // SPInvoiceNumber (length: 255)
        public string SpAccountNumber { get; set; } // SPAccountNumber (length: 255)
        public decimal? TotalInvoiceAmount { get; set; } // TotalInvoiceAmount
        public decimal? TotalInvoiceVat { get; set; } // TotalInvoiceVAT
        public decimal? TotalInvoiceAmountInclusive { get; set; } // TotalInvoiceAmountInclusive
        public System.DateTime? DateAdmitted { get; set; } // DateAdmitted
        public System.DateTime? DateDischarged { get; set; } // DateDischarged
        public string ClaimReferenceNumber { get; set; } // ClaimReferenceNumber (length: 50)
        public System.DateTime? EventDate { get; set; } // EventDate
        public string Surname { get; set; } // Surname (length: 255)
        public string FirstName { get; set; } // FirstName (length: 255)
        public string Initials { get; set; } // Initials (length: 255)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public string IdNumber { get; set; } // IdNumber (length: 20)
        public string CompanyNumber { get; set; } // CompanyNumber (length: 255)
        public string PreAuthNumber { get; set; } // PreAuthNumber (length: 255)
        public int? PossiblePersonEventId { get; set; } // PossiblePersonEventId
        public int? PossibleEventId { get; set; } // PossibleEventId
        public int? HealthCareProviderId { get; set; } // HealthCareProviderId
        public int? PreAuthId { get; set; } // PreAuthId
        public bool? IsProcessed { get; set; } // IsProcessed
        public string TreatingDocBhf { get; set; } // TreatingDocBHF (length: 255)
        public string EmployerName { get; set; } // EmployerName (length: 255)
        public string ReferringDocBhf { get; set; } // ReferringDocBHF (length: 255)
        public string ReferredTo { get; set; } // ReferredTo (length: 255)
        public string HospitalIndicator { get; set; } // HospitalIndicator (length: 255)
        public string SurgeonBhfNumber { get; set; } // SurgeonBHFNumber (length: 255)
        public string AnaesthetistBhfNumber { get; set; } // AnaesthetistBHFNumber (length: 255)
        public string AssistantBhfNumber { get; set; } // AssistantBHFNumber (length: 255)
        public string LengthOfStay { get; set; } // LengthOfStay (length: 255)
        public string FreeTextDiagnosis { get; set; } // FreeTextDiagnosis (length: 1024)
        public string IodReference { get; set; } // IODReference (length: 255)
        public string PatientGender { get; set; } // PatientGender (length: 255)
        public string DiagnosticCodeType { get; set; } // DiagnosticCodeType (length: 255)
        public string DisciplineCode { get; set; } // DisciplineCode (length: 255)
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public SwitchInvoiceStatusEnum? SwitchInvoiceStatus { get; set; } // SwitchInvoiceStatusId
        public int? ClaimId { get; set; } // ClaimId
        public string ClaimReferenceNumberMatch { get; set; } // ClaimReferenceNumberMatch (length: 50)
        public string ReinstateReason { get; set; } // ReinstateReason (length: 2500)
        public SwitchBatchTypeEnum? SwitchBatchType { get; set; } // SwitchBatchTypeId

        // Reverse navigation

        /// <summary>
        /// Child medical_SwitchBatchInvoiceLines where [SwitchBatchInvoiceLine].[SwitchBatchInvoiceId] point to this entity (FK_SwitchBatchInvoiceLine_SwitchBatchInvoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_SwitchBatchInvoiceLine> SwitchBatchInvoiceLines { get; set; } // SwitchBatchInvoiceLine.FK_SwitchBatchInvoiceLine_SwitchBatchInvoice
        /// <summary>
        /// Child medical_SwitchBatchInvoiceUnderAssessReasons where [SwitchBatchInvoiceUnderAssessReason].[SwitchBatchInvoiceId] point to this entity (FK_SwitchBatchInvoice_SwitchBatchInvoiceUnderAssessReason_SwitchBatchInvoiceId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_SwitchBatchInvoiceUnderAssessReason> SwitchBatchInvoiceUnderAssessReasons { get; set; } // SwitchBatchInvoiceUnderAssessReason.FK_SwitchBatchInvoice_SwitchBatchInvoiceUnderAssessReason_SwitchBatchInvoiceId

        // Foreign keys

        /// <summary>
        /// Parent medical_HealthCareProvider pointed by [SwitchBatchInvoice].([HealthCareProviderId]) (FK_SwitchBatchInvoice_HealthCareProvider)
        /// </summary>
        public virtual medical_HealthCareProvider HealthCareProvider { get; set; } // FK_SwitchBatchInvoice_HealthCareProvider

        /// <summary>
        /// Parent medical_Invoice pointed by [SwitchBatchInvoice].([InvoiceId]) (FK_SwitchBatchInvoice_Invoice)
        /// </summary>
        public virtual medical_Invoice Invoice { get; set; } // FK_SwitchBatchInvoice_Invoice

        /// <summary>
        /// Parent medical_PreAuthorisation pointed by [SwitchBatchInvoice].([PreAuthId]) (FK_SwitchBatchInvoice_PreAuthorisation)
        /// </summary>
        public virtual medical_PreAuthorisation PreAuthorisation { get; set; } // FK_SwitchBatchInvoice_PreAuthorisation

        /// <summary>
        /// Parent medical_SwitchBatch pointed by [SwitchBatchInvoice].([SwitchBatchId]) (FK_SwitchBatchInvoice_SwitchBatch)
        /// </summary>
        public virtual medical_SwitchBatch SwitchBatch { get; set; } // FK_SwitchBatchInvoice_SwitchBatch

        public medical_SwitchBatchInvoice()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            SwitchBatchInvoiceLines = new System.Collections.Generic.List<medical_SwitchBatchInvoiceLine>();
            SwitchBatchInvoiceUnderAssessReasons = new System.Collections.Generic.List<medical_SwitchBatchInvoiceUnderAssessReason>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
