//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.MediCare.Database.Entities
{
    public partial class medical_ChronicMedicationFormRenewal : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int ChronicMedicationFormRenewalId { get; set; } // ChronicMedicationFormRenewalId (Primary key)
        public int ClaimId { get; set; } // ClaimId
        public int MedicalServiceProviderId { get; set; } // MedicalServiceProviderId
        public string Description { get; set; } // Description (length: 2048)
        public bool? IsNeurogenicPain { get; set; } // IsNeurogenicPain
        public bool? IsMechanicalPain { get; set; } // IsMechanicalPain
        public bool? IsDegenerativePain { get; set; } // IsDegenerativePain
        public bool? IsPsychogenicPain { get; set; } // IsPsychogenicPain
        public bool? IsMuslcespasmPain { get; set; } // IsMuslcespasmPain
        public bool? IsFibromialgiaPain { get; set; } // IsFibromialgiaPain
        public byte PainEvaluation { get; set; } // PainEvaluation
        public byte ContinuousDuration { get; set; } // ContinuousDuration
        public bool? IsLifeStyleChanges { get; set; } // IsLifeStyleChanges
        public bool? IsPhysiotherapy { get; set; } // IsPhysiotherapy
        public bool? IsNerveBlock { get; set; } // IsNerveBlock
        public bool? IsArthroplasty { get; set; } // IsArthroplasty
        public bool? IsPsychotherapy { get; set; } // IsPsychotherapy
        public bool? IsAccupuncture { get; set; } // IsAccupuncture
        public System.DateTime? DateSubmitted { get; set; } // DateSubmitted
        public System.DateTime? DateConsulted { get; set; } // DateConsulted
        public bool IsActive { get; set; } // IsActive
        public string Hobbies { get; set; } // Hobbies (length: 50)
        public byte? DeliveryMethod { get; set; } // DeliveryMethod
        public int? PreAuthId { get; set; } // PreAuthId
        public string DeliveryAddress { get; set; } // DeliveryAddress (length: 1000)
        public bool? IsSignedByHcp { get; set; } // IsSignedByHCP
        public System.DateTime? DateSignedByHcp { get; set; } // DateSignedByHCP
        public int? AuthorisedChronicAuthorisationId { get; set; } // AuthorisedChronicAuthorisationId
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child medical_ChronicScriptMedicineRenewals where [ChronicScriptMedicineRenewal].[ChronicMedicationFormRenewalId] point to this entity (FK_Medical_ChronicScriptMedicineRenewal_ChronicMedicationFormRenewal)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_ChronicScriptMedicineRenewal> ChronicScriptMedicineRenewals { get; set; } // ChronicScriptMedicineRenewal.FK_Medical_ChronicScriptMedicineRenewal_ChronicMedicationFormRenewal

        // Foreign keys

        /// <summary>
        /// Parent medical_PreAuthorisation pointed by [ChronicMedicationFormRenewal].([PreAuthId]) (FK_Medical_ChronicMedicationFormRenewal_PreAuthId)
        /// </summary>
        public virtual medical_PreAuthorisation PreAuthorisation { get; set; } // FK_Medical_ChronicMedicationFormRenewal_PreAuthId

        public medical_ChronicMedicationFormRenewal()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            ChronicScriptMedicineRenewals = new System.Collections.Generic.List<medical_ChronicScriptMedicineRenewal>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
