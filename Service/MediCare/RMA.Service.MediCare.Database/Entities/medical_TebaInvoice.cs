//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.MediCare.Database.Entities
{
    public partial class medical_TebaInvoice : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int TebaInvoiceId { get; set; } // TebaInvoiceId (Primary key)
        public int ClaimId { get; set; } // ClaimId
        public int? PersonEventId { get; set; } // PersonEventId
        public int InvoicerId { get; set; } // InvoicerId
        public int InvoicerTypeId { get; set; } // InvoicerTypeId
        public string HcpInvoiceNumber { get; set; } // HCPInvoiceNumber (length: 50)
        public string HcpAccountNumber { get; set; } // HCPAccountNumber (length: 50)
        public string InvoiceNumber { get; set; } // InvoiceNumber (length: 50)
        public System.DateTime InvoiceDate { get; set; } // InvoiceDate
        public System.DateTime DateSubmitted { get; set; } // DateSubmitted
        public System.DateTime? DateReceived { get; set; } // DateReceived
        public System.DateTime? DateCompleted { get; set; } // DateCompleted
        public System.DateTime? DateTravelledFrom { get; set; } // DateTravelledFrom
        public System.DateTime? DateTravelledTo { get; set; } // DateTravelledTo
        public int? PreAuthId { get; set; } // PreAuthId
        public InvoiceStatusEnum InvoiceStatus { get; set; } // InvoiceStatusId
        public decimal InvoiceAmount { get; set; } // InvoiceAmount
        public decimal InvoiceVat { get; set; } // InvoiceVAT
        public decimal? InvoiceTotalInclusive { get; private set; } // InvoiceTotalInclusive
        public decimal AuthorisedAmount { get; set; } // AuthorisedAmount
        public decimal AuthorisedVat { get; set; } // AuthorisedVAT
        public decimal? AuthorisedTotalInclusive { get; private set; } // AuthorisedTotalInclusive
        public int PayeeId { get; set; } // PayeeId
        public int PayeeTypeId { get; set; } // PayeeTypeId
        public string HoldingKey { get; set; } // HoldingKey (length: 50)
        public bool IsPaymentDelay { get; set; } // IsPaymentDelay
        public bool IsPreauthorised { get; set; } // IsPreauthorised
        public string Description { get; set; } // Description (length: 200)
        public string CalcOperands { get; set; } // CalcOperands (length: 200)
        public decimal Kilometers { get; set; } // Kilometers
        public decimal KilometerRate { get; set; } // KilometerRate
        public string TebaTariffCode { get; set; } // TebaTariffCode (length: 10)
        public VatCodeEnum VatCode { get; set; } // VatCodeId
        public decimal? VatPercentage { get; set; } // VATPercentage
        public int SwitchBatchId { get; set; } // SwitchBatchId
        public string SwitchTransactionNo { get; set; } // SwitchTransactionNo (length: 50)
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child medical_InvoicePreAuthMaps where [InvoicePreAuthMap].[TebaInvoiceId] point to this entity (FK_InvoicePreAuthMap_TebaInvoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoicePreAuthMap> InvoicePreAuthMaps { get; set; } // InvoicePreAuthMap.FK_InvoicePreAuthMap_TebaInvoice
        /// <summary>
        /// Child medical_InvoiceUnderAssessReasons where [InvoiceUnderAssessReason].[TebaInvoiceId] point to this entity (FK_Invoice_InvoiceUnderAssessReason_TebaInvoiceId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoiceUnderAssessReason> InvoiceUnderAssessReasons { get; set; } // InvoiceUnderAssessReason.FK_Invoice_InvoiceUnderAssessReason_TebaInvoiceId
        /// <summary>
        /// Child medical_TebaInvoiceLines where [TebaInvoiceLine].[TebaInvoiceId] point to this entity (FK_TebaInvoiceLine_TebaInvoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_TebaInvoiceLine> TebaInvoiceLines { get; set; } // TebaInvoiceLine.FK_TebaInvoiceLine_TebaInvoice

        public medical_TebaInvoice()
        {
            SwitchBatchId = 0;
            InvoicePreAuthMaps = new System.Collections.Generic.List<medical_InvoicePreAuthMap>();
            InvoiceUnderAssessReasons = new System.Collections.Generic.List<medical_InvoiceUnderAssessReason>();
            TebaInvoiceLines = new System.Collections.Generic.List<medical_TebaInvoiceLine>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
