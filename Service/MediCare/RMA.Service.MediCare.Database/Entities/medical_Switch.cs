//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.MediCare.Database.Entities
{
    public partial class medical_Switch : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int SwitchId { get; set; } // SwitchId (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public string Description { get; set; } // Description (length: 2048)
        public string DownloadUrl { get; set; } // DownloadUrl (length: 255)
        public string CardHolderUrl { get; set; } // CardHolderUrl (length: 255)
        public string ResponseFileUrl { get; set; } // ResponseFileUrl (length: 255)
        public string DownloadDirectory { get; set; } // DownloadDirectory (length: 255)
        public string FtpUser { get; set; } // FTPUser (length: 50)
        public string FtpPassword { get; set; } // FTPPassword (length: 50)
        public string LastFileNumber { get; set; } // LastFileNumber (length: 50)
        public string FileNumberRegex { get; set; } // FileNumberRegex (length: 150)
        public string FileFormat { get; set; } // FileFormat (length: 50)
        public bool? DownloadActive { get; set; } // DownloadActive
        public bool? CardHolderActive { get; set; } // CardHolderActive
        public bool? ResponseFileActive { get; set; } // ResponseFileActive
        public string CardHolderFilePrefix { get; set; } // CardHolderFilePrefix (length: 10)
        public string DownloadFilePrefix { get; set; } // DownloadFilePrefix (length: 10)
        public System.DateTime? LastDownloadDate { get; set; } // LastDownloadDate
        public int? AssignToRole { get; set; } // AssignToRole
        public string DownloadNamingType { get; set; } // DownloadNamingType (length: 50)
        public string Protocol { get; set; } // Protocol (length: 50)
        public string FtpSecure { get; set; } // FTPSecure (length: 50)
        public string SsHostKeyFingerprint { get; set; } // SsHostKeyFingerprint (length: 100)
        public int? PortNumber { get; set; } // PortNumber
        public System.DateTime? LastRemittanceDate { get; set; } // LastRemittanceDate
        public string SshPrivateKeyPath { get; set; } // SshPrivateKeyPath (length: 50)
        public string ContactPerson { get; set; } // ContactPerson (length: 200)
        public string EmailAddress { get; set; } // EmailAddress (length: 300)
        public string HostName { get; set; } // HostName (length: 200)
        public int? UseSecondRegexGroup { get; set; } // UseSecondRegexGroup
        public int? ResponseFileNumber { get; set; } // ResponseFileNumber
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child medical_SwitchBatches where [SwitchBatch].[SwitchId] point to this entity (FK_SwitchBatch_Switch_Id)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_SwitchBatch> SwitchBatches { get; set; } // SwitchBatch.FK_SwitchBatch_Switch_Id

        public medical_Switch()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            SwitchBatches = new System.Collections.Generic.List<medical_SwitchBatch>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
