//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.MediCare.Database.Entities
{
    public partial class medical_Invoice : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int InvoiceId { get; set; } // InvoiceId (Primary key)
        public int? ClaimId { get; set; } // ClaimId
        public int? PersonEventId { get; set; } // PersonEventId
        public int HealthCareProviderId { get; set; } // HealthCareProviderId
        public string HcpInvoiceNumber { get; set; } // HCPInvoiceNumber (length: 50)
        public string HcpAccountNumber { get; set; } // HCPAccountNumber (length: 50)
        public string InvoiceNumber { get; set; } // InvoiceNumber (length: 50)
        public System.DateTime InvoiceDate { get; set; } // InvoiceDate
        public System.DateTime? DateSubmitted { get; set; } // DateSubmitted
        public System.DateTime? DateReceived { get; set; } // DateReceived
        public System.DateTime? DateAdmitted { get; set; } // DateAdmitted
        public System.DateTime? DateDischarged { get; set; } // DateDischarged
        public int? PreAuthId { get; set; } // PreAuthId
        public InvoiceStatusEnum InvoiceStatus { get; set; } // InvoiceStatusId
        public decimal InvoiceAmount { get; set; } // InvoiceAmount
        public decimal InvoiceVat { get; set; } // InvoiceVAT
        public decimal? InvoiceTotalInclusive { get; private set; } // InvoiceTotalInclusive
        public decimal AuthorisedAmount { get; set; } // AuthorisedAmount
        public decimal AuthorisedVat { get; set; } // AuthorisedVAT
        public decimal? AuthorisedTotalInclusive { get; private set; } // AuthorisedTotalInclusive
        public int PayeeId { get; set; } // PayeeID
        public int PayeeTypeId { get; set; } // PayeeTypeID
        public string UnderAssessedComments { get; set; } // UnderAssessedComments (length: 2048)
        public string HoldingKey { get; set; } // HoldingKey (length: 50)
        public bool IsPaymentDelay { get; set; } // IsPaymentDelay
        public bool IsPreauthorised { get; set; } // IsPreauthorised
        public string PreAuthXml { get; set; } // PreAuthXML
        public string Comments { get; set; } // Comments (length: 2000)
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Reverse navigation

        /// <summary>
        /// Child medical_InvoiceLines where [InvoiceLine].[InvoiceId] point to this entity (FK_Invoice_InvoiceLine_InvoiceId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoiceLine> InvoiceLines { get; set; } // InvoiceLine.FK_Invoice_InvoiceLine_InvoiceId
        /// <summary>
        /// Child medical_InvoicePreAuthMaps where [InvoicePreAuthMap].[InvoiceId] point to this entity (FK_InvoicePreAuthMap_Invoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoicePreAuthMap> InvoicePreAuthMaps { get; set; } // InvoicePreAuthMap.FK_InvoicePreAuthMap_Invoice
        /// <summary>
        /// Child medical_InvoiceReportMaps where [InvoiceReportMap].[InvoiceId] point to this entity (FK_InvoiceReportMap_Invoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoiceReportMap> InvoiceReportMaps { get; set; } // InvoiceReportMap.FK_InvoiceReportMap_Invoice
        /// <summary>
        /// Child medical_InvoiceUnderAssessReasons where [InvoiceUnderAssessReason].[InvoiceId] point to this entity (FK_Invoice_InvoiceUnderAssessReason_InvoiceId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_InvoiceUnderAssessReason> InvoiceUnderAssessReasons { get; set; } // InvoiceUnderAssessReason.FK_Invoice_InvoiceUnderAssessReason_InvoiceId
        /// <summary>
        /// Child medical_SwitchBatchInvoices where [SwitchBatchInvoice].[InvoiceId] point to this entity (FK_SwitchBatchInvoice_Invoice)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<medical_SwitchBatchInvoice> SwitchBatchInvoices { get; set; } // SwitchBatchInvoice.FK_SwitchBatchInvoice_Invoice

        public medical_Invoice()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            InvoiceLines = new System.Collections.Generic.List<medical_InvoiceLine>();
            InvoicePreAuthMaps = new System.Collections.Generic.List<medical_InvoicePreAuthMap>();
            InvoiceReportMaps = new System.Collections.Generic.List<medical_InvoiceReportMap>();
            InvoiceUnderAssessReasons = new System.Collections.Generic.List<medical_InvoiceUnderAssessReason>();
            SwitchBatchInvoices = new System.Collections.Generic.List<medical_SwitchBatchInvoice>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
