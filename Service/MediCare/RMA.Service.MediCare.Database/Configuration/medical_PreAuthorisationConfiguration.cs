//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_PreAuthorisationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_PreAuthorisation>
    {
        public medical_PreAuthorisationConfiguration()
            : this("medical")
        {
        }

        public medical_PreAuthorisationConfiguration(string schema)
        {
            ToTable("PreAuthorisation", schema);
            HasKey(x => x.PreAuthId);

            Property(x => x.PreAuthId).HasColumnName(@"PreAuthId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.HealthCareProviderId).HasColumnName(@"HealthCareProviderId").HasColumnType("int").IsRequired();
            Property(x => x.RequestingHealthCareProviderId).HasColumnName(@"RequestingHealthCareProviderId").HasColumnType("int").IsRequired();
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.PreAuthNumber).HasColumnName(@"PreAuthNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PreAuthType).HasColumnName(@"PreAuthTypeId").HasColumnType("int").IsRequired();
            Property(x => x.PreAuthStatus).HasColumnName(@"PreAuthStatusId").HasColumnType("int").IsRequired();
            Property(x => x.DateAuthorisedFrom).HasColumnName(@"DateAuthorisedFrom").HasColumnType("datetime").IsRequired();
            Property(x => x.DateAuthorisedTo).HasColumnName(@"DateAuthorisedTo").HasColumnType("datetime").IsRequired();
            Property(x => x.DateAuthorised).HasColumnName(@"DateAuthorised").HasColumnType("datetime").IsOptional();
            Property(x => x.RequestedAmount).HasColumnName(@"RequestedAmount").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.AuthorisedAmount).HasColumnName(@"AuthorisedAmount").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.RequestComments).HasColumnName(@"RequestComments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.ReviewComments).HasColumnName(@"ReviewComments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.HospitalAuthId).HasColumnName(@"HospitalAuthId").HasColumnType("int").IsOptional();
            Property(x => x.IsHighCost).HasColumnName(@"IsHighCost").HasColumnType("bit").IsRequired();
            Property(x => x.IsRequestFromHcp).HasColumnName(@"IsRequestFromHCP").HasColumnType("bit").IsOptional();
            Property(x => x.RejectPendReasonId).HasColumnName(@"RejectPendReasonId").HasColumnType("int").IsOptional();
            Property(x => x.TemporaryReferenceNo).HasColumnName(@"TemporaryReferenceNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(25);
            Property(x => x.InjuryDate).HasColumnName(@"InjuryDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsClaimLinked).HasColumnName(@"IsClaimLinked").HasColumnType("bit").IsOptional();
            Property(x => x.IsPatientVerified).HasColumnName(@"IsPatientVerified").HasColumnType("bit").IsOptional();
            Property(x => x.PreAuthContactNumber).HasColumnName(@"PreAuthContactNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsRehabilitationRequest).HasColumnName(@"IsRehabilitationRequest").HasColumnType("bit").IsOptional();
            Property(x => x.IsWoundCareTreatment).HasColumnName(@"IsWoundCareTreatment").HasColumnType("bit").IsOptional();
            Property(x => x.IsMedicationRequired).HasColumnName(@"IsMedicationRequired").HasColumnType("bit").IsOptional();
            Property(x => x.IsClaimReopeningRequest).HasColumnName(@"IsClaimReopeningRequest").HasColumnType("bit").IsOptional();
            Property(x => x.IsPreRequest).HasColumnName(@"IsPreRequest").HasColumnType("bit").IsOptional();
            Property(x => x.IsInHospital).HasColumnName(@"IsInHospital").HasColumnType("bit").IsOptional();
            Property(x => x.PreAuthChronicRequestTypeId).HasColumnName(@"PreAuthChronicRequestTypeID").HasColumnType("tinyint").IsOptional();
            Property(x => x.ProstheticQuotationType).HasColumnName(@"QuotationTypeID").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.HospitalAuth).WithMany(b => b.PreAuthorisations).HasForeignKey(c => c.HospitalAuthId).WillCascadeOnDelete(false); // PreAuthorisation_Parent
        }
    }

}
