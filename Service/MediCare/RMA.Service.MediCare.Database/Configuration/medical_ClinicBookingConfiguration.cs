//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_ClinicBookingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_ClinicBooking>
    {
        public medical_ClinicBookingConfiguration()
            : this("medical")
        {
        }

        public medical_ClinicBookingConfiguration(string schema)
        {
            ToTable("ClinicBooking", schema);
            HasKey(x => x.ClinicBookingId);

            Property(x => x.ClinicBookingId).HasColumnName(@"ClinicBookingId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClinicScheduleId).HasColumnName(@"ClinicScheduleId").HasColumnType("int").IsOptional();
            Property(x => x.PersonId).HasColumnName(@"PersonId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.Confirmed).HasColumnName(@"Confirmed").HasColumnType("bit").IsRequired();
            Property(x => x.FileSent).HasColumnName(@"FileSent").HasColumnType("bit").IsRequired();
            Property(x => x.HasAttended).HasColumnName(@"HasAttended").HasColumnType("bit").IsRequired();
            Property(x => x.FileReturned).HasColumnName(@"FileReturned").HasColumnType("bit").IsRequired();
            Property(x => x.BookingReason).HasColumnName(@"BookingReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.BookingForStatus).HasColumnName(@"BookingForStatus").HasColumnType("tinyint").IsOptional();
            Property(x => x.BookingStatus).HasColumnName(@"BookingStatus").HasColumnType("tinyint").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsApproved).HasColumnName(@"IsApproved").HasColumnType("bit").IsOptional();
            Property(x => x.ApprovedBy).HasColumnName(@"ApprovedBy").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.IsRejected).HasColumnName(@"IsRejected").HasColumnType("bit").IsOptional();
            Property(x => x.RejectedBy).HasColumnName(@"RejectedBy").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.RejectedReason).HasColumnName(@"RejectedReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.IsAuthorised).HasColumnName(@"IsAuthorised").HasColumnType("bit").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.ClinicSchedule).WithMany(b => b.ClinicBookings).HasForeignKey(c => c.ClinicScheduleId).WillCascadeOnDelete(false); // FK_Medical_ClinicBooking_Temp_ClinicScheduleId
        }
    }

}
