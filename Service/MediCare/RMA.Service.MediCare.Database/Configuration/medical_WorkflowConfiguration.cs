//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_WorkflowConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_Workflow>
    {
        public medical_WorkflowConfiguration()
            : this("medical")
        {
        }

        public medical_WorkflowConfiguration(string schema)
        {
            ToTable("Workflow", schema);
            HasKey(x => x.WorkflowId);

            Property(x => x.WorkflowId).HasColumnName(@"WorkflowId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.WizardId).HasColumnName(@"WizardId").HasColumnType("int").IsOptional();
            Property(x => x.ReferenceId).HasColumnName(@"ReferenceId").HasColumnType("int").IsOptional();
            Property(x => x.ReferenceType).HasColumnName(@"ReferenceType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.WorkPool).HasColumnName(@"WorkpoolId").HasColumnType("int").IsOptional();
            Property(x => x.AssignedToRoleId).HasColumnName(@"AssignedToRoleId").HasColumnType("int").IsOptional();
            Property(x => x.AssignedToUserId).HasColumnName(@"AssignedToUserId").HasColumnType("int").IsOptional();
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.WizardURL).HasColumnName(@"WizardURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(200);
            Property(x => x.LockedToUserId).HasColumnName(@"LockedToUserId").HasColumnType("int").IsOptional();
        }
    }

}
