//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_PractitionerTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_PractitionerType>
    {
        public medical_PractitionerTypeConfiguration()
            : this("medical")
        {
        }

        public medical_PractitionerTypeConfiguration(string schema)
        {
            ToTable("PractitionerType", schema);
            HasKey(x => x.PractitionerTypeId);

            Property(x => x.PractitionerTypeId).HasColumnName(@"PractitionerTypeID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.PracticeTypeCode).HasColumnName(@"PracticeTypeCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.MaximumTreatmentDays).HasColumnName(@"MaximumTreatmentDays").HasColumnType("int").IsRequired();
            Property(x => x.Groupings).HasColumnName(@"Groupings").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(3);
            Property(x => x.NrplPracticeType).HasColumnName(@"NRPLPracticeType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(12);
            Property(x => x.IsGp).HasColumnName(@"IsGP").HasColumnType("bit").IsRequired();
            Property(x => x.IsHospital).HasColumnName(@"IsHospital").HasColumnType("bit").IsRequired();
            Property(x => x.IsDentist).HasColumnName(@"IsDentist").HasColumnType("bit").IsRequired();
            Property(x => x.IsAmbulance).HasColumnName(@"IsAmbulance").HasColumnType("bit").IsRequired();
            Property(x => x.IsSpecialist).HasColumnName(@"IsSpecialist").HasColumnType("bit").IsRequired();
            Property(x => x.IsAnaesthetist).HasColumnName(@"IsAnaesthetist").HasColumnType("bit").IsRequired();
            Property(x => x.IsRequireMedicalReport).HasColumnName(@"IsRequireMedicalReport").HasColumnType("bit").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
        }
    }

}
