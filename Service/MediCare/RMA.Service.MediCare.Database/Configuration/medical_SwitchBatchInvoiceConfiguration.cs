//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_SwitchBatchInvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_SwitchBatchInvoice>
    {
        public medical_SwitchBatchInvoiceConfiguration()
            : this("medical")
        {
        }

        public medical_SwitchBatchInvoiceConfiguration(string schema)
        {
            ToTable("SwitchBatchInvoice", schema);
            HasKey(x => x.SwitchBatchInvoiceId);

            Property(x => x.SwitchBatchInvoiceId).HasColumnName(@"SwitchBatchInvoiceId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SwitchBatchId).HasColumnName(@"SwitchBatchId").HasColumnType("int").IsRequired();
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsOptional();
            Property(x => x.BatchSequenceNumber).HasColumnName(@"BatchSequenceNumber").HasColumnType("int").IsOptional();
            Property(x => x.SwitchBatchNumber).HasColumnName(@"SwitchBatchNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SwitchTransactionNumber).HasColumnName(@"SwitchTransactionNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PracticeNumber).HasColumnName(@"PracticeNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.HealthCareProviderName).HasColumnName(@"HealthCareProviderName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.InvoiceDate).HasColumnName(@"InvoiceDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DateSubmitted).HasColumnName(@"DateSubmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateReceived).HasColumnName(@"DateReceived").HasColumnType("datetime").IsOptional();
            Property(x => x.SpInvoiceNumber).HasColumnName(@"SPInvoiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SpAccountNumber).HasColumnName(@"SPAccountNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.TotalInvoiceAmount).HasColumnName(@"TotalInvoiceAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalInvoiceVat).HasColumnName(@"TotalInvoiceVAT").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalInvoiceAmountInclusive).HasColumnName(@"TotalInvoiceAmountInclusive").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.DateAdmitted).HasColumnName(@"DateAdmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateDischarged).HasColumnName(@"DateDischarged").HasColumnType("datetime").IsOptional();
            Property(x => x.ClaimReferenceNumber).HasColumnName(@"ClaimReferenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EventDate).HasColumnName(@"EventDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Initials).HasColumnName(@"Initials").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("datetime").IsOptional();
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.CompanyNumber).HasColumnName(@"CompanyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PreAuthNumber).HasColumnName(@"PreAuthNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PossiblePersonEventId).HasColumnName(@"PossiblePersonEventId").HasColumnType("int").IsOptional();
            Property(x => x.PossibleEventId).HasColumnName(@"PossibleEventId").HasColumnType("int").IsOptional();
            Property(x => x.HealthCareProviderId).HasColumnName(@"HealthCareProviderId").HasColumnType("int").IsOptional();
            Property(x => x.PreAuthId).HasColumnName(@"PreAuthId").HasColumnType("int").IsOptional();
            Property(x => x.IsProcessed).HasColumnName(@"IsProcessed").HasColumnType("bit").IsOptional();
            Property(x => x.TreatingDocBhf).HasColumnName(@"TreatingDocBHF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.EmployerName).HasColumnName(@"EmployerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReferringDocBhf).HasColumnName(@"ReferringDocBHF").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReferredTo).HasColumnName(@"ReferredTo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.HospitalIndicator).HasColumnName(@"HospitalIndicator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SurgeonBhfNumber).HasColumnName(@"SurgeonBHFNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.AnaesthetistBhfNumber).HasColumnName(@"AnaesthetistBHFNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.AssistantBhfNumber).HasColumnName(@"AssistantBHFNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.LengthOfStay).HasColumnName(@"LengthOfStay").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.FreeTextDiagnosis).HasColumnName(@"FreeTextDiagnosis").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IodReference).HasColumnName(@"IODReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PatientGender).HasColumnName(@"PatientGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DiagnosticCodeType).HasColumnName(@"DiagnosticCodeType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DisciplineCode).HasColumnName(@"DisciplineCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.SwitchInvoiceStatus).HasColumnName(@"SwitchInvoiceStatusId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimReferenceNumberMatch).HasColumnName(@"ClaimReferenceNumberMatch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ReinstateReason).HasColumnName(@"ReinstateReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2500);
            Property(x => x.SwitchBatchType).HasColumnName(@"SwitchBatchTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.HealthCareProvider).WithMany(b => b.SwitchBatchInvoices).HasForeignKey(c => c.HealthCareProviderId).WillCascadeOnDelete(false); // FK_SwitchBatchInvoice_HealthCareProvider
            HasOptional(a => a.Invoice).WithMany(b => b.SwitchBatchInvoices).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_SwitchBatchInvoice_Invoice
            HasOptional(a => a.PreAuthorisation).WithMany(b => b.SwitchBatchInvoices).HasForeignKey(c => c.PreAuthId).WillCascadeOnDelete(false); // FK_SwitchBatchInvoice_PreAuthorisation
            HasRequired(a => a.SwitchBatch).WithMany(b => b.SwitchBatchInvoices).HasForeignKey(c => c.SwitchBatchId); // FK_SwitchBatchInvoice_SwitchBatch
        }
    }

}
