//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_InvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_Invoice>
    {
        public medical_InvoiceConfiguration()
            : this("medical")
        {
        }

        public medical_InvoiceConfiguration(string schema)
        {
            ToTable("Invoice", schema);
            HasKey(x => x.InvoiceId);

            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsOptional();
            Property(x => x.HealthCareProviderId).HasColumnName(@"HealthCareProviderId").HasColumnType("int").IsRequired();
            Property(x => x.HcpInvoiceNumber).HasColumnName(@"HCPInvoiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.HcpAccountNumber).HasColumnName(@"HCPAccountNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InvoiceNumber).HasColumnName(@"InvoiceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InvoiceDate).HasColumnName(@"InvoiceDate").HasColumnType("datetime").IsRequired();
            Property(x => x.DateSubmitted).HasColumnName(@"DateSubmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateReceived).HasColumnName(@"DateReceived").HasColumnType("datetime").IsOptional();
            Property(x => x.DateAdmitted).HasColumnName(@"DateAdmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateDischarged).HasColumnName(@"DateDischarged").HasColumnType("datetime").IsOptional();
            Property(x => x.PreAuthId).HasColumnName(@"PreAuthId").HasColumnType("int").IsOptional();
            Property(x => x.InvoiceStatus).HasColumnName(@"InvoiceStatusId").HasColumnType("int").IsRequired();
            Property(x => x.InvoiceAmount).HasColumnName(@"InvoiceAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.InvoiceVat).HasColumnName(@"InvoiceVAT").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.InvoiceTotalInclusive).HasColumnName(@"InvoiceTotalInclusive").HasColumnType("decimal").IsOptional().HasPrecision(19,2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.AuthorisedAmount).HasColumnName(@"AuthorisedAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.AuthorisedVat).HasColumnName(@"AuthorisedVAT").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.AuthorisedTotalInclusive).HasColumnName(@"AuthorisedTotalInclusive").HasColumnType("decimal").IsOptional().HasPrecision(19,2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.PayeeId).HasColumnName(@"PayeeID").HasColumnType("int").IsRequired();
            Property(x => x.PayeeTypeId).HasColumnName(@"PayeeTypeID").HasColumnType("int").IsRequired();
            Property(x => x.UnderAssessedComments).HasColumnName(@"UnderAssessedComments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.HoldingKey).HasColumnName(@"HoldingKey").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IsPaymentDelay).HasColumnName(@"IsPaymentDelay").HasColumnType("bit").IsRequired();
            Property(x => x.IsPreauthorised).HasColumnName(@"IsPreauthorised").HasColumnType("bit").IsRequired();
            Property(x => x.PreAuthXml).HasColumnName(@"PreAuthXML").HasColumnType("xml").IsOptional();
            Property(x => x.Comments).HasColumnName(@"Comments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
        }
    }

}
