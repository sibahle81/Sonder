//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_ChronicMedicationFormRenewalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_ChronicMedicationFormRenewal>
    {
        public medical_ChronicMedicationFormRenewalConfiguration()
            : this("medical")
        {
        }

        public medical_ChronicMedicationFormRenewalConfiguration(string schema)
        {
            ToTable("ChronicMedicationFormRenewal", schema);
            HasKey(x => x.ChronicMedicationFormRenewalId);

            Property(x => x.ChronicMedicationFormRenewalId).HasColumnName(@"ChronicMedicationFormRenewalId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired();
            Property(x => x.MedicalServiceProviderId).HasColumnName(@"MedicalServiceProviderId").HasColumnType("int").IsRequired();
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.IsNeurogenicPain).HasColumnName(@"IsNeurogenicPain").HasColumnType("bit").IsOptional();
            Property(x => x.IsMechanicalPain).HasColumnName(@"IsMechanicalPain").HasColumnType("bit").IsOptional();
            Property(x => x.IsDegenerativePain).HasColumnName(@"IsDegenerativePain").HasColumnType("bit").IsOptional();
            Property(x => x.IsPsychogenicPain).HasColumnName(@"IsPsychogenicPain").HasColumnType("bit").IsOptional();
            Property(x => x.IsMuslcespasmPain).HasColumnName(@"IsMuslcespasmPain").HasColumnType("bit").IsOptional();
            Property(x => x.IsFibromialgiaPain).HasColumnName(@"IsFibromialgiaPain").HasColumnType("bit").IsOptional();
            Property(x => x.PainEvaluation).HasColumnName(@"PainEvaluation").HasColumnType("tinyint").IsRequired();
            Property(x => x.ContinuousDuration).HasColumnName(@"ContinuousDuration").HasColumnType("tinyint").IsRequired();
            Property(x => x.IsLifeStyleChanges).HasColumnName(@"IsLifeStyleChanges").HasColumnType("bit").IsOptional();
            Property(x => x.IsPhysiotherapy).HasColumnName(@"IsPhysiotherapy").HasColumnType("bit").IsOptional();
            Property(x => x.IsNerveBlock).HasColumnName(@"IsNerveBlock").HasColumnType("bit").IsOptional();
            Property(x => x.IsArthroplasty).HasColumnName(@"IsArthroplasty").HasColumnType("bit").IsOptional();
            Property(x => x.IsPsychotherapy).HasColumnName(@"IsPsychotherapy").HasColumnType("bit").IsOptional();
            Property(x => x.IsAccupuncture).HasColumnName(@"IsAccupuncture").HasColumnType("bit").IsOptional();
            Property(x => x.DateSubmitted).HasColumnName(@"DateSubmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateConsulted).HasColumnName(@"DateConsulted").HasColumnType("datetime").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.Hobbies).HasColumnName(@"Hobbies").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DeliveryMethod).HasColumnName(@"DeliveryMethod").HasColumnType("tinyint").IsOptional();
            Property(x => x.PreAuthId).HasColumnName(@"PreAuthId").HasColumnType("int").IsOptional();
            Property(x => x.DeliveryAddress).HasColumnName(@"DeliveryAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.IsSignedByHcp).HasColumnName(@"IsSignedByHCP").HasColumnType("bit").IsOptional();
            Property(x => x.DateSignedByHcp).HasColumnName(@"DateSignedByHCP").HasColumnType("datetime").IsOptional();
            Property(x => x.AuthorisedChronicAuthorisationId).HasColumnName(@"AuthorisedChronicAuthorisationId").HasColumnType("int").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.PreAuthorisation).WithMany(b => b.ChronicMedicationFormRenewals).HasForeignKey(c => c.PreAuthId).WillCascadeOnDelete(false); // FK_Medical_ChronicMedicationFormRenewal_PreAuthId
        }
    }

}
