//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_SwitchBatchConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_SwitchBatch>
    {
        public medical_SwitchBatchConfiguration()
            : this("medical")
        {
        }

        public medical_SwitchBatchConfiguration(string schema)
        {
            ToTable("SwitchBatch", schema);
            HasKey(x => x.SwitchBatchId);

            Property(x => x.SwitchBatchId).HasColumnName(@"SwitchBatchId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SwitchId).HasColumnName(@"SwitchId").HasColumnType("int").IsRequired();
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.SwitchBatchNumber).HasColumnName(@"SwitchBatchNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SwitchFileName).HasColumnName(@"SwitchFileName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(127);
            Property(x => x.DateSubmitted).HasColumnName(@"DateSubmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateSwitched).HasColumnName(@"DateSwitched").HasColumnType("datetime").IsOptional();
            Property(x => x.DateReceived).HasColumnName(@"DateReceived").HasColumnType("datetime").IsOptional();
            Property(x => x.DateCompleted).HasColumnName(@"DateCompleted").HasColumnType("datetime").IsOptional();
            Property(x => x.InvoicesStated).HasColumnName(@"InvoicesStated").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.InvoicesCounted).HasColumnName(@"InvoicesCounted").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.AmountStatedInclusive).HasColumnName(@"AmountStatedInclusive").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.AmountCountedInclusive).HasColumnName(@"AmountCountedInclusive").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.AssignedUserId).HasColumnName(@"AssignedUserId").HasColumnType("int").IsOptional();
            Property(x => x.DateCaptured).HasColumnName(@"DateCaptured").HasColumnType("datetime").IsOptional();
            Property(x => x.LinesStated).HasColumnName(@"LinesStated").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.LinesCounted).HasColumnName(@"LinesCounted").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.AssignedToRoleId).HasColumnName(@"AssignedToRoleId").HasColumnType("int").IsOptional();
            Property(x => x.IsProcessed).HasColumnName(@"IsProcessed").HasColumnType("bit").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.InvoicesProcessed).HasColumnName(@"InvoicesProcessed").HasColumnType("int").IsRequired();
            Property(x => x.AmountProcessed).HasColumnName(@"AmountProcessed").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.SwitchBatchType).HasColumnName(@"SwitchBatchTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.Switch).WithMany(b => b.SwitchBatches).HasForeignKey(c => c.SwitchId).WillCascadeOnDelete(false); // FK_SwitchBatch_Switch_Id
        }
    }

}
