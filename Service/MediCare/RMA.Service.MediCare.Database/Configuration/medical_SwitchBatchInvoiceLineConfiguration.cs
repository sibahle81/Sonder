//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_SwitchBatchInvoiceLineConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_SwitchBatchInvoiceLine>
    {
        public medical_SwitchBatchInvoiceLineConfiguration()
            : this("medical")
        {
        }

        public medical_SwitchBatchInvoiceLineConfiguration(string schema)
        {
            ToTable("SwitchBatchInvoiceLine", schema);
            HasKey(x => x.SwitchBatchInvoiceLineId);

            Property(x => x.SwitchBatchInvoiceLineId).HasColumnName(@"SwitchBatchInvoiceLineId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SwitchBatchInvoiceId).HasColumnName(@"SwitchBatchInvoiceId").HasColumnType("int").IsRequired();
            Property(x => x.BatchSequenceNumber).HasColumnName(@"BatchSequenceNumber").HasColumnType("int").IsOptional();
            Property(x => x.Quantity).HasColumnName(@"Quantity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.TotalInvoiceLineCost).HasColumnName(@"TotalInvoiceLineCost").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalInvoiceLineVat).HasColumnName(@"TotalInvoiceLineVAT").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.TotalInvoiceLineCostInclusive).HasColumnName(@"TotalInvoiceLineCostInclusive").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.ServiceDate).HasColumnName(@"ServiceDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CreditAmount).HasColumnName(@"CreditAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.VatCode).HasColumnName(@"VATCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.TariffCode).HasColumnName(@"TariffCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OtherCode).HasColumnName(@"OtherCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Icd10Code).HasColumnName(@"ICD10Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SwitchTransactionNumber).HasColumnName(@"SwitchTransactionNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SwitchInternalNumber).HasColumnName(@"SwitchInternalNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.FileSequenceNumber).HasColumnName(@"FileSequenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Modifier1).HasColumnName(@"Modifier1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Modifier2).HasColumnName(@"Modifier2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Modifier3).HasColumnName(@"Modifier3").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Modifier4).HasColumnName(@"Modifier4").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.DosageDuration).HasColumnName(@"DosageDuration").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ServiceProviderTransactionNumber).HasColumnName(@"ServiceProviderTransactionNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CptCode).HasColumnName(@"CPTCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.TreatmentCodeId).HasColumnName(@"TreatmentCodeId").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ServiceTimeStart).HasColumnName(@"ServiceTimeStart").HasColumnType("time").IsOptional();
            Property(x => x.ServiceTimeEnd).HasColumnName(@"ServiceTimeEnd").HasColumnType("time").IsOptional();

            // Foreign keys
            HasRequired(a => a.SwitchBatchInvoice).WithMany(b => b.SwitchBatchInvoiceLines).HasForeignKey(c => c.SwitchBatchInvoiceId); // FK_SwitchBatchInvoiceLine_SwitchBatchInvoice
        }
    }

}
