//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_PreAuthorisationBreakdownConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_PreAuthorisationBreakdown>
    {
        public medical_PreAuthorisationBreakdownConfiguration()
            : this("medical")
        {
        }

        public medical_PreAuthorisationBreakdownConfiguration(string schema)
        {
            ToTable("PreAuthorisationBreakdown", schema);
            HasKey(x => x.PreAuthBreakdownId);

            Property(x => x.PreAuthBreakdownId).HasColumnName(@"PreAuthBreakdownId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PreAuthId).HasColumnName(@"PreAuthId").HasColumnType("int").IsRequired();
            Property(x => x.MedicalItemId).HasColumnName(@"MedicalItemId").HasColumnType("int").IsOptional();
            Property(x => x.TariffId).HasColumnName(@"TariffId").HasColumnType("int").IsOptional();
            Property(x => x.TreatmentCodeId).HasColumnName(@"TreatmentCodeId").HasColumnType("int").IsOptional();
            Property(x => x.DateAuthorisedFrom).HasColumnName(@"DateAuthorisedFrom").HasColumnType("datetime").IsRequired();
            Property(x => x.DateAuthorisedTo).HasColumnName(@"DateAuthorisedTo").HasColumnType("datetime").IsRequired();
            Property(x => x.RequestedTreatments).HasColumnName(@"RequestedTreatments").HasColumnType("decimal").IsRequired().HasPrecision(7,2);
            Property(x => x.AuthorisedTreatments).HasColumnName(@"AuthorisedTreatments").HasColumnType("decimal").IsOptional().HasPrecision(7,2);
            Property(x => x.RequestedAmount).HasColumnName(@"RequestedAmount").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.AuthorisedAmount).HasColumnName(@"AuthorisedAmount").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.IsAuthorised).HasColumnName(@"IsAuthorised").HasColumnType("bit").IsOptional();
            Property(x => x.AuthorisedReason).HasColumnName(@"AuthorisedReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.IsRejected).HasColumnName(@"IsRejected").HasColumnType("bit").IsOptional();
            Property(x => x.RejectedReason).HasColumnName(@"RejectedReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.ReviewComments).HasColumnName(@"ReviewComments").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.SolId).HasColumnName(@"SOLId").HasColumnType("int").IsOptional();
            Property(x => x.TariffAmount).HasColumnName(@"TariffAmount").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.IsClinicalUpdate).HasColumnName(@"IsClinicalUpdate").HasColumnType("bit").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdateSequenceNo).HasColumnName(@"UpdateSequenceNo").HasColumnType("smallint").IsOptional();
            Property(x => x.ClinicalUpdateId).HasColumnName(@"ClinicalUpdateId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClinicalUpdate).WithMany(b => b.PreAuthorisationBreakdowns).HasForeignKey(c => c.ClinicalUpdateId).WillCascadeOnDelete(false); // FK_PreAuthorisationBreakdown_ClinicalUpdate
            HasRequired(a => a.PreAuthorisation).WithMany(b => b.PreAuthorisationBreakdowns).HasForeignKey(c => c.PreAuthId).WillCascadeOnDelete(false); // FK_PreAuthorisationBreakdown_PreAuthorisation
        }
    }

}
