//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.MediCare.Database.Entities;

namespace RMA.Service.MediCare.Database.Configuration
{
    public class medical_ClinicScheduleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<medical_ClinicSchedule>
    {
        public medical_ClinicScheduleConfiguration()
            : this("medical")
        {
        }

        public medical_ClinicScheduleConfiguration(string schema)
        {
            ToTable("ClinicSchedule", schema);
            HasKey(x => x.ClinicScheduleId);

            Property(x => x.ClinicScheduleId).HasColumnName(@"ClinicScheduleId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClinicVenueId).HasColumnName(@"ClinicVenueId").HasColumnType("int").IsRequired();
            Property(x => x.ScheduledDate).HasColumnName(@"ScheduledDate").HasColumnType("datetime").IsRequired();
            Property(x => x.PersonCapacity).HasColumnName(@"PersonCapacity").HasColumnType("decimal").IsRequired().HasPrecision(7,2);
            Property(x => x.BookingStatus).HasColumnName(@"BookingStatus").HasColumnType("tinyint").IsOptional();
            Property(x => x.ClinicBookingTypeId).HasColumnName(@"ClinicBookingTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IsMobileClinic).HasColumnName(@"IsMobileClinic").HasColumnType("bit").IsRequired();
            Property(x => x.IsAssessmentClinic).HasColumnName(@"IsAssessmentClinic").HasColumnType("bit").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ClinicVenue).WithMany(b => b.ClinicSchedules).HasForeignKey(c => c.ClinicVenueId).WillCascadeOnDelete(false); // FK_Medical_ClinicSchedule_Temp_ClinicVenueId
        }
    }

}
