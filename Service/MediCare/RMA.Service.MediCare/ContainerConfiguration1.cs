
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Autofac;
using RMA.Common.Constants;
using RMA.Common.Service.Extensions;

namespace RMA.Service.MediCare
{
    public partial class ContainerConfiguration
    {
        private static void HostOurServicesPartial(ContainerBuilder builder)
        {
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IAuditLogService, RMA.Service.MediCare.Services.Medical.AuditLogFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICommonProcessorService, RMA.Service.MediCare.Services.Medical.CommonProcessorFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICompCareIntegrationService, RMA.Service.MediCare.Services.Medical.CompCareIntegrationFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthBridgeProcessorService, RMA.Service.MediCare.Services.Medical.HealthBridgeProcessorFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthCareProviderService, RMA.Service.MediCare.Services.Medical.HealthCareProviderFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IICD10CodeService, RMA.Service.MediCare.Services.Medical.ICD10CodeFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCommonService, RMA.Service.MediCare.Services.Medical.InvoiceCommonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCompCareMapService, RMA.Service.MediCare.Services.Medical.InvoiceCompCareMapFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceHelperService, RMA.Service.MediCare.Services.Medical.InvoiceHelperFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceLineUnderAssessReasonService, RMA.Service.MediCare.Services.Medical.InvoiceLineUnderAssessReasonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceMedicalSwitchService, RMA.Service.MediCare.Services.Medical.InvoiceMedicalSwitchFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceService, RMA.Service.MediCare.Services.Medical.InvoiceFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceUnderAssessReasonService, RMA.Service.MediCare.Services.Medical.InvoiceUnderAssessReasonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostServiceBusListener<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMedicalPaymentResponseQueueListener, RMA.Service.MediCare.Services.Medical.MedicalPaymentResponseQueueListener>(AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMedicareCommunicationService, RMA.Service.MediCare.Services.Medical.MedicareCommunicationFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediCareService, RMA.Service.MediCare.Services.Medical.MediCareFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediSwitchProcessorService, RMA.Service.MediCare.Services.Medical.MediSwitchProcessorFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPensionMedicalPlanService, RMA.Service.MediCare.Services.Medical.PensionMedicalPlanFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthBreakdownUnderAssessReasonService, RMA.Service.MediCare.Services.Medical.PreAuthBreakdownUnderAssessReasonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthHelperService, RMA.Service.MediCare.Services.Medical.PreAuthHelperFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthInvoiceService, RMA.Service.MediCare.Services.Medical.PreAuthInvoiceFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthorisationService, RMA.Service.MediCare.Services.Medical.PreAuthorisationFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceLineUnderAssessReasonService, RMA.Service.MediCare.Services.Medical.SwitchBatchInvoiceLineUnderAssessReasonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostServiceBusListener<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceQueueListener, RMA.Service.MediCare.Services.Medical.SwitchBatchInvoiceQueueListener>(AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceUnderAssessReasonService, RMA.Service.MediCare.Services.Medical.SwitchBatchInvoiceUnderAssessReasonFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchProcessorService, RMA.Service.MediCare.Services.Medical.SwitchBatchProcessorFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostServiceBusListener<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchReferenceListener, RMA.Service.MediCare.Services.Medical.SwitchBatchReferenceListener>(AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchService, RMA.Service.MediCare.Services.Medical.SwitchBatchFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchInvoiceHelperService, RMA.Service.MediCare.Services.Medical.SwitchInvoiceHelperFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITariffBaseUnitCostTypeService, RMA.Service.MediCare.Services.Medical.TariffBaseUnitCostTypeFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITebaProcessorService, RMA.Service.MediCare.Services.Medical.TebaProcessorFacade>(AppNames.MediCare, AppPrefix.Medical);
            builder.HostStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITravelAuthorisationService, RMA.Service.MediCare.Services.Medical.TravelAuthorisationFacade>(AppNames.MediCare, AppPrefix.Medical);
            // DO NOT EDIT THIS FILE MANUALLY, IT IS GENERATED FROM A TEMPLATE!
			
            //START OF API References
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IAuditLogService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICommonProcessorService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICompCareIntegrationService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthBridgeProcessorService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthCareProviderService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IICD10CodeService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCommonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCompCareMapService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceHelperService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceLineUnderAssessReasonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceMedicalSwitchService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceUnderAssessReasonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMedicareCommunicationService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediCareService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediSwitchProcessorService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPensionMedicalPlanService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthBreakdownUnderAssessReasonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthHelperService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthInvoiceService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthorisationService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceLineUnderAssessReasonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceUnderAssessReasonService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchProcessorService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchInvoiceHelperService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITariffBaseUnitCostTypeService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITebaProcessorService>(AppNames.MediCare, AppPrefix.Medical);
			//builder.UseStatelessService<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITravelAuthorisationService>(AppNames.MediCare, AppPrefix.Medical);
            //START OF UNIT TEST REFERENCES
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.AuditLogFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IAuditLogService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.CommonProcessorFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICommonProcessorService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.CompCareIntegrationFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ICompCareIntegrationService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.HealthBridgeProcessorFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthBridgeProcessorService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.HealthCareProviderFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IHealthCareProviderService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.ICD10CodeFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IICD10CodeService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceCommonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCommonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceCompCareMapFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceCompCareMapService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceHelperFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceHelperService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceLineUnderAssessReasonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceLineUnderAssessReasonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceMedicalSwitchFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceMedicalSwitchService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.InvoiceUnderAssessReasonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IInvoiceUnderAssessReasonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.MedicareCommunicationFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMedicareCommunicationService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.MediCareFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediCareService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.MediSwitchProcessorFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IMediSwitchProcessorService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.PensionMedicalPlanFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPensionMedicalPlanService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.PreAuthBreakdownUnderAssessReasonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthBreakdownUnderAssessReasonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.PreAuthHelperFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthHelperService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.PreAuthInvoiceFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthInvoiceService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.PreAuthorisationFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.IPreAuthorisationService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.SwitchBatchInvoiceLineUnderAssessReasonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceLineUnderAssessReasonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.SwitchBatchInvoiceUnderAssessReasonFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchInvoiceUnderAssessReasonService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.SwitchBatchProcessorFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchProcessorService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.SwitchBatchFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchBatchService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.SwitchInvoiceHelperFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ISwitchInvoiceHelperService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.TariffBaseUnitCostTypeFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITariffBaseUnitCostTypeService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.TebaProcessorFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITebaProcessorService>();
			//builder.RegisterType<RMA.Service.MediCare.Services.Medical.TravelAuthorisationFacade>().AsSelf().As<RMA.Service.MediCare.Contracts.Interfaces.Medical.ITravelAuthorisationService>();
        }
    }
}
