<#@ include file="T4Templates/ModuleConfig.ttinclude" #>
<#@ include file="../../../Common/RMA.Common.Database/T4Templates/EF.Reverse.POCO.Core.ttinclude" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<#		
	Settings.Namespace = DefaultNamespace; // Override the default namespace here
	Settings.ElementsToGenerate = Elements.Poco; //Elements.Poco | Elements.Context | Elements.UnitOfWork | Elements.PocoConfiguration;
    Config.Init();

    // Read schema
    var factory = GetDbProviderFactory();
	var tables = LoadTables(factory);
#>
using Autofac;
using RMA.Common.Database.Repository;
using RMA.Common.Database.Contracts.Repository;
using <#=Settings.PocoNamespace#>;
using <#=Settings.ContextNamespace#>;

namespace <#=Settings.Namespace#>
{
	public class <#=Settings.DbContextName#>ServiceRegistry : Module
	{
		protected override void Load(ContainerBuilder builder)
		{ 
			builder.RegisterType<EfDbContext>();
			<#
			if (tables.Count > 0)
			{
			    PushIndent("			");
				foreach(Table tbl in from t in tables.Where(t => !t.IsMapping).OrderBy(x => x.NameHumanCase) select t) 
				{	
					if (tbl.Columns.Any(cl=>cl.Name == "IsDeleted") && !tbl.Columns.Any(cl=>cl.Name == "FileIdentifier")) 
					{ 
#>
builder.RegisterType<EfRepositorySoftDeleteEntities<<#=tbl.NameHumanCase + ", " + Settings.DbContextName#>>>().As<IRepository<<#=tbl.NameHumanCase#>>>();
<#
					} 
					else 
					{ 
#>
builder.RegisterType<EfRepository<<#=tbl.NameHumanCase + ", " + Settings.DbContextName#>>>().As<IRepository<<#=tbl.NameHumanCase#>>>();
<# 
					}
				}
				PopIndent();
			}
			else 
			{
				#> //No Tables Loaded <#
			}
			#>  
		}
	}
}
