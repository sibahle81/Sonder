//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.FinCare.Contracts.Enums;
using RMA.Service.FinCare.Database.Entities;

namespace RMA.Service.FinCare.Database.Configuration
{
    public class payment_PaymentErrorAuditConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<payment_PaymentErrorAudit>
    {
        public payment_PaymentErrorAuditConfiguration()
            : this("payment")
        {
        }

        public payment_PaymentErrorAuditConfiguration(string schema)
        {
            ToTable("PaymentErrorAudit", schema);
            HasKey(x => x.PaymentErrorAuditId);

            Property(x => x.PaymentErrorAuditId).HasColumnName(@"PaymentErrorAuditId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.PaymentId).HasColumnName(@"PaymentId").HasColumnType("int").IsOptional();
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.PaymentInstructionId).HasColumnName(@"PaymentInstructionId").HasColumnType("int").IsOptional();
            Property(x => x.RefundHeaderId).HasColumnName(@"RefundHeaderId").HasColumnType("int").IsOptional();
            Property(x => x.CanEdit).HasColumnName(@"CanEdit").HasColumnType("bit").IsRequired();
            Property(x => x.PaymentStatus).HasColumnName(@"PaymentStatusId").HasColumnType("int").IsOptional();
            Property(x => x.PaymentType).HasColumnName(@"PaymentTypeId").HasColumnType("int").IsOptional();
            Property(x => x.Payee).HasColumnName(@"Payee").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(80);
            Property(x => x.Bank).HasColumnName(@"Bank").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BankBranch).HasColumnName(@"BankBranch").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.AccountNo).HasColumnName(@"AccountNo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(17);
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.RetainedCommission).HasColumnName(@"RetainedCommission").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.Product).HasColumnName(@"Product").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Company).HasColumnName(@"Company").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Branch).HasColumnName(@"Branch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SenderAccountNo).HasColumnName(@"SenderAccountNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(17);
            Property(x => x.BrokerCode).HasColumnName(@"BrokerCode").HasColumnType("int").IsOptional();
            Property(x => x.BrokerName).HasColumnName(@"BrokerName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(80);
            Property(x => x.FsbAccredited).HasColumnName(@"FSBAccredited").HasColumnType("bit").IsOptional();
            Property(x => x.ErrorCode).HasColumnName(@"ErrorCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MaxSubmissionCount).HasColumnName(@"MaxSubmissionCount").HasColumnType("int").IsOptional();
            Property(x => x.SubmissionCount).HasColumnName(@"SubmissionCount").HasColumnType("int").IsOptional();
            Property(x => x.BankAccountType).HasColumnName(@"BankAccountTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(13);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ClaimType).HasColumnName(@"ClaimTypeId").HasColumnType("int").IsOptional();
            Property(x => x.ErrorDescription).HasColumnName(@"ErrorDescription").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.SubmissionDate).HasColumnName(@"SubmissionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.PaymentConfirmationDate).HasColumnName(@"PaymentConfirmationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ClientNotificationDate).HasColumnName(@"ClientNotificationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CanResubmit).HasColumnName(@"CanResubmit").HasColumnType("bit").IsOptional();
            Property(x => x.PaymentRejectionType).HasColumnName(@"PaymentRejectionTypeId").HasColumnType("int").IsOptional();
            Property(x => x.ClientType).HasColumnName(@"ClientTypeId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimReference).HasColumnName(@"ClaimReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.PolicyReference).HasColumnName(@"PolicyReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Reference).HasColumnName(@"Reference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.BatchReference).HasColumnName(@"BatchReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.PaymentSubmissonBatchid).HasColumnName(@"PaymentSubmissonBatchid").HasColumnType("int").IsOptional();
            Property(x => x.ReconciliationDate).HasColumnName(@"ReconciliationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.RejectionDate).HasColumnName(@"RejectionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.TransactionType).HasColumnName(@"TransactionType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsImmediatePayment).HasColumnName(@"IsImmediatePayment").HasColumnType("bit").IsOptional();
            Property(x => x.RecalledDate).HasColumnName(@"RecalledDate").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Payment).WithMany(b => b.PaymentErrorAudits).HasForeignKey(c => c.PaymentId).WillCascadeOnDelete(false); // FK_Payment_Payment
        }
    }

}
