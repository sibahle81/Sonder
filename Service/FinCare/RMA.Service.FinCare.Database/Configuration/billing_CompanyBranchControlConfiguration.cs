//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.FinCare.Contracts.Enums;
using RMA.Service.FinCare.Database.Entities;

namespace RMA.Service.FinCare.Database.Configuration
{
    public class billing_CompanyBranchControlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<billing_CompanyBranchControl>
    {
        public billing_CompanyBranchControlConfiguration()
            : this("billing")
        {
        }

        public billing_CompanyBranchControlConfiguration(string schema)
        {
            ToTable("CompanyBranchControl", schema);
            HasKey(x => x.CompanyBranchControlId);

            Property(x => x.CompanyBranchControlId).HasColumnName(@"CompanyBranchControlId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CompanyNumber).HasColumnName(@"CompanyNumber").HasColumnType("int").IsOptional();
            Property(x => x.BranchNumber).HasColumnName(@"BranchNumber").HasColumnType("int").IsOptional();
            Property(x => x.IndustryClass).HasColumnName(@"IndustryClassId").HasColumnType("int").IsOptional();
            Property(x => x.IndustryClassName).HasColumnName(@"IndustryClassName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BranchName).HasColumnName(@"BranchName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ControlNumber).HasColumnName(@"ControlNumber").HasColumnType("int").IsOptional();
            Property(x => x.ControlName).HasColumnName(@"ControlName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.L1).HasColumnName(@"L1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.L2).HasColumnName(@"L2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProductName).HasColumnName(@"ProductName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsOptional();
            Property(x => x.BsChart).HasColumnName(@"BSChart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BsChartName).HasColumnName(@"BsChartName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.IsChart).HasColumnName(@"ISChart").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.TransType).HasColumnName(@"TransType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsOptional();
        }
    }

}
