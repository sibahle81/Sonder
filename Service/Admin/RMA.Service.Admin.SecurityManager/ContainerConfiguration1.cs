
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Autofac;
using RMA.Common.Constants;
using RMA.Common.Service.Extensions;

namespace RMA.Service.Admin.SecurityManager
{
    public partial class ContainerConfiguration
    {
        private static void HostOurServicesPartial(ContainerBuilder builder)
        {
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IAuditLogService, RMA.Service.Admin.SecurityManager.Services.AuditLogFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IAuthenticationService, RMA.Service.Admin.SecurityManager.Services.AuthenticationFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.ILastViewedService, RMA.Service.Admin.SecurityManager.Services.LastViewedFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.INoteService, RMA.Service.Admin.SecurityManager.Services.NoteFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IPasswordResetAuthorizationService, RMA.Service.Admin.SecurityManager.Services.PasswordResetAuthorizationFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IPermissionGroupService, RMA.Service.Admin.SecurityManager.Services.PermissionGroupFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IPermissionService, RMA.Service.Admin.SecurityManager.Services.PermissionFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IRoleService, RMA.Service.Admin.SecurityManager.Services.RoleFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.ITenantPreferenceService, RMA.Service.Admin.SecurityManager.Services.TenantPreferenceFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.ITenantService, RMA.Service.Admin.SecurityManager.Services.TenantFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IUniqueFieldValidatorService, RMA.Service.Admin.SecurityManager.Services.UniqueFieldValidatorFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IUserPreferenceService, RMA.Service.Admin.SecurityManager.Services.UserPreferenceFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IUserRegistrationService, RMA.Service.Admin.SecurityManager.Services.UserRegistrationFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IUserService, RMA.Service.Admin.SecurityManager.Services.UserFacade>(AppNames.Admin, AppPrefix.SecurityManager);
            builder.HostStatelessService<RMA.Service.Admin.SecurityManager.Contracts.Interfaces.IWorkPoolService, RMA.Service.Admin.SecurityManager.Services.WorkPoolFacade>(AppNames.Admin, AppPrefix.SecurityManager);
        }
    }
}
