


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// The following connection settings were used to generate this file:
//     Connection String:      "data source=azt-mcc-sql-01.rma.msft;initial catalog=AZD-MCC;user id=RMAAdmin;password=**zapped**;;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.3471.2

using Autofac;
using RMA.Common.Database.Repository;
using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.SecurityManager.Database.Entities;
using RMA.Service.Admin.SecurityManager.Database.Context;

namespace RMA.Service.Admin.SecurityManager.Database
{
	public class EfDbContextServiceRegistry : Module
	{
		protected override void Load(ContainerBuilder builder)
		{ 
			builder.RegisterType<EfDbContext>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Announcement, EfDbContext>>().As<IRepository<common_Announcement>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementRole, EfDbContext>>().As<IRepository<common_AnnouncementRole>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementUserAcceptance, EfDbContext>>().As<IRepository<common_AnnouncementUserAcceptance>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_FeatureFlagSetting, EfDbContext>>().As<IRepository<common_FeatureFlagSetting>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OneTimePin, EfDbContext>>().As<IRepository<common_OneTimePin>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Period, EfDbContext>>().As<IRepository<common_Period>>();
			builder.RegisterType<EfRepository<security_Application, EfDbContext>>().As<IRepository<security_Application>>();
			builder.RegisterType<EfRepository<security_AuditLog, EfDbContext>>().As<IRepository<security_AuditLog>>();
			builder.RegisterType<EfRepository<security_LastViewed, EfDbContext>>().As<IRepository<security_LastViewed>>();
			builder.RegisterType<EfRepository<security_LoginHistory, EfDbContext>>().As<IRepository<security_LoginHistory>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_Note, EfDbContext>>().As<IRepository<security_Note>>();
			builder.RegisterType<EfRepository<security_PasswordResetAuthorisation, EfDbContext>>().As<IRepository<security_PasswordResetAuthorisation>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_Permission, EfDbContext>>().As<IRepository<security_Permission>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_PermissionGroup, EfDbContext>>().As<IRepository<security_PermissionGroup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_Role, EfDbContext>>().As<IRepository<security_Role>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_RoleAmountLimit, EfDbContext>>().As<IRepository<security_RoleAmountLimit>>();
			builder.RegisterType<EfRepository<security_RolePermissionFfl, EfDbContext>>().As<IRepository<security_RolePermissionFfl>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_Tenant, EfDbContext>>().As<IRepository<security_Tenant>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_TenantPreference, EfDbContext>>().As<IRepository<security_TenantPreference>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_User, EfDbContext>>().As<IRepository<security_User>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserActivation, EfDbContext>>().As<IRepository<security_UserActivation>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserAddress, EfDbContext>>().As<IRepository<security_UserAddress>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserAmountLimit, EfDbContext>>().As<IRepository<security_UserAmountLimit>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserBranch, EfDbContext>>().As<IRepository<security_UserBranch>>();
			builder.RegisterType<EfRepository<security_UserBrokerageMap, EfDbContext>>().As<IRepository<security_UserBrokerageMap>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserCompanyMap, EfDbContext>>().As<IRepository<security_UserCompanyMap>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserContact, EfDbContext>>().As<IRepository<security_UserContact>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserDetail, EfDbContext>>().As<IRepository<security_UserDetail>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserHealthCareProviderMap, EfDbContext>>().As<IRepository<security_UserHealthCareProviderMap>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserPassword, EfDbContext>>().As<IRepository<security_UserPassword>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserPermission2, EfDbContext>>().As<IRepository<security_UserPermission2>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserPmpRegion, EfDbContext>>().As<IRepository<security_UserPmpRegion>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_UserPreference, EfDbContext>>().As<IRepository<security_UserPreference>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<security_WorkPoolUser, EfDbContext>>().As<IRepository<security_WorkPoolUser>>();
  
		}
	}
}
