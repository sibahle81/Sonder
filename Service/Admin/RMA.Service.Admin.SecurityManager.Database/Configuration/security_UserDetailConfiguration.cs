//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Database.Entities;

namespace RMA.Service.Admin.SecurityManager.Database.Configuration
{
    public class security_UserDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<security_UserDetail>
    {
        public security_UserDetailConfiguration()
            : this("security")
        {
        }

        public security_UserDetailConfiguration(string schema)
        {
            ToTable("UserDetails", schema);
            HasKey(x => x.UserDetailsId);

            Property(x => x.UserDetailsId).HasColumnName(@"UserDetailsId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired();
            Property(x => x.SaId).HasColumnName(@"SAId").HasColumnType("nvarchar").IsOptional().HasMaxLength(13);
            Property(x => x.PassportNo).HasColumnName(@"PassportNo").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.PassportExpiryDate).HasColumnName(@"PassportExpiryDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateofBirth).HasColumnName(@"DateofBirth").HasColumnType("datetime").IsOptional();
            Property(x => x.UserAddressId).HasColumnName(@"UserAddressId").HasColumnType("int").IsRequired();
            Property(x => x.UserContactId).HasColumnName(@"UserContactId").HasColumnType("int").IsRequired();
            Property(x => x.UserProfileType).HasColumnName(@"UserProfileTypeId").HasColumnType("int").IsRequired();
            Property(x => x.UserActivationId).HasColumnName(@"UserActivationId").HasColumnType("int").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.User).WithMany(b => b.UserDetails).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_UserDetails_User
            HasRequired(a => a.UserActivation).WithMany(b => b.UserDetails).HasForeignKey(c => c.UserActivationId).WillCascadeOnDelete(false); // FK_UserDetails_UserActivation            
        }
    }

}
