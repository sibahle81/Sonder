//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Database.Entities;

namespace RMA.Service.Admin.SecurityManager.Database.Configuration
{
    public class security_PermissionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<security_Permission>
    {
        public security_PermissionConfiguration()
            : this("security")
        {
        }

        public security_PermissionConfiguration(string schema)
        {
            ToTable("Permission", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.PermissionGroupId).HasColumnName(@"PermissionGroupId").HasColumnType("int").IsOptional();
            Property(x => x.SecurityRank).HasColumnName(@"SecurityRank").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.PermissionGroup).WithMany(b => b.Permissions).HasForeignKey(c => c.PermissionGroupId).WillCascadeOnDelete(false); // FK_Permission_PermissionGroup
            HasMany(t => t.Roles).WithMany(t => t.Permissions).Map(m =>
            {
                m.ToTable("RolePermission", "security");
                m.MapLeftKey("PermissionId");
                m.MapRightKey("RoleId");
            });
            HasMany(t => t.Users).WithMany(t => t.Permissions).Map(m =>
            {
                m.ToTable("UserPermission", "security");
                m.MapLeftKey("PermissionId");
                m.MapRightKey("UserId");
            });
        }
    }

}
