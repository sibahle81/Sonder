//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Contracts.Enums;

namespace RMA.Service.Admin.SecurityManager.Database.Entities
{
    public partial class security_UserCompanyMap : IAuditableEntity, ISoftDeleteEntity
    {
        public int UserCompanyMapId { get; set; } // UserCompanyMapId (Primary key)
        public int? UserId { get; set; } // UserId
        public int CompanyId { get; set; } // CompanyId
        public int RoleId { get; set; } // RoleId
        public UserCompanyMapStatusEnum UserCompanyMapStatus { get; set; } // UserCompanyMapStatusId
        public int? UserActivationId { get; set; } // UserActivationId
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent security_Role pointed by [UserCompanyMap].([RoleId]) (FK_UserCompanyMap_Role)
        /// </summary>
        public virtual security_Role Role { get; set; } // FK_UserCompanyMap_Role

        /// <summary>
        /// Parent security_User pointed by [UserCompanyMap].([UserId]) (FK_UserCompanyMap_User)
        /// </summary>
        public virtual security_User User { get; set; } // FK_UserCompanyMap_User

        public security_UserCompanyMap()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
