//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Contracts.Enums;

namespace RMA.Service.Admin.SecurityManager.Database.Entities
{
    public partial class security_Permission : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public int? PermissionGroupId { get; set; } // PermissionGroupId
        public int? SecurityRank { get; set; } // SecurityRank

        // Reverse navigation

        /// <summary>
        /// Child security_Roles (Many-to-Many) mapped by table [RolePermission]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_Role> Roles { get; set; } // Many to many mapping
        /// <summary>
        /// Child security_Users (Many-to-Many) mapped by table [UserPermission]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_User> Users { get; set; } // Many to many mapping
        /// <summary>
        /// Child security_UserPermission2 where [UserPermission2].[PermissionId] point to this entity (FK_UserPermission2_Permission)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_UserPermission2> UserPermission2 { get; set; } // UserPermission2.FK_UserPermission2_Permission

        // Foreign keys

        /// <summary>
        /// Parent security_PermissionGroup pointed by [Permission].([PermissionGroupId]) (FK_Permission_PermissionGroup)
        /// </summary>
        public virtual security_PermissionGroup PermissionGroup { get; set; } // FK_Permission_PermissionGroup

        public security_Permission()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
            UserPermission2 = new System.Collections.Generic.List<security_UserPermission2>();
            Roles = new System.Collections.Generic.List<security_Role>();
            Users = new System.Collections.Generic.List<security_User>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
