//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.SecurityManager.Contracts.Enums;

namespace RMA.Service.Admin.SecurityManager.Database.Entities
{
    public partial class security_Role : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 50)
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public int? SecurityRank { get; set; } // SecurityRank

        // Reverse navigation

        /// <summary>
        /// Child common_AnnouncementRoles where [AnnouncementRole].[RoleId] point to this entity (FK_AnnouncementRole_Role)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<common_AnnouncementRole> AnnouncementRoles { get; set; } // AnnouncementRole.FK_AnnouncementRole_Role
        /// <summary>
        /// Child security_Permissions (Many-to-Many) mapped by table [RolePermission]
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_Permission> Permissions { get; set; } // Many to many mapping
        /// <summary>
        /// Child security_RoleAmountLimits where [RoleAmountLimit].[RoleId] point to this entity (FK_RoleAmountLimit_Role)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_RoleAmountLimit> RoleAmountLimits { get; set; } // RoleAmountLimit.FK_RoleAmountLimit_Role
        /// <summary>
        /// Child security_Users where [User].[RoleId] point to this entity (FK_User_Role)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_User> Users { get; set; } // User.FK_User_Role
        /// <summary>
        /// Child security_UserCompanyMaps where [UserCompanyMap].[RoleId] point to this entity (FK_UserCompanyMap_Role)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<security_UserCompanyMap> UserCompanyMaps { get; set; } // UserCompanyMap.FK_UserCompanyMap_Role

        public security_Role()
        {
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
            AnnouncementRoles = new System.Collections.Generic.List<common_AnnouncementRole>();
            RoleAmountLimits = new System.Collections.Generic.List<security_RoleAmountLimit>();
            Users = new System.Collections.Generic.List<security_User>();
            UserCompanyMaps = new System.Collections.Generic.List<security_UserCompanyMap>();
            Permissions = new System.Collections.Generic.List<security_Permission>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
