//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.Admin.BusinessProcessManager.Database.Entities
{
    public partial class bpm_Wizard : IAuditableEntity, ISoftDeleteEntity, ITenantEntity, IEntityStatus
    {
        public int Id { get; set; } // Id (Primary key)
        public int TenantId { get; set; } // TenantId
        public int WizardConfigurationId { get; set; } // WizardConfigurationId
        public WizardStatusEnum WizardStatus { get; set; } // WizardStatusId
        public int? LinkedItemId { get; set; } // LinkedItemId
        public string Name { get; set; } // Name (length: 200)
        public string Data { get; set; } // Data
        public int CurrentStepIndex { get; set; } // CurrentStepIndex
        public string LockedToUser { get; set; } // LockedToUser (length: 50)
        public string CustomStatus { get; set; } // CustomStatus (length: 100)
        public int? CustomRoutingRoleId { get; set; } // CustomRoutingRoleId
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public System.DateTime? StartDateAndTime { get; set; } // StartDateAndTime
        public System.DateTime? EndDateAndTime { get; set; } // EndDateAndTime

        // Reverse navigation

        /// <summary>
        /// Child bpm_WizardApprovalStages where [WizardApprovalStage].[WizardId] point to this entity (FK_WizardApprovalStage_Wizard)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<bpm_WizardApprovalStage> WizardApprovalStages { get; set; } // WizardApprovalStage.FK_WizardApprovalStage_Wizard
        /// <summary>
        /// Child bpm_WizardPermissionOverrides where [WizardPermissionOverride].[WizardId] point to this entity (FK_WizardPermissionOverride_Wizard)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<bpm_WizardPermissionOverride> WizardPermissionOverrides { get; set; } // WizardPermissionOverride.FK_WizardPermissionOverride_Wizard

        // Foreign keys

        /// <summary>
        /// Parent bpm_WizardConfiguration pointed by [Wizard].([WizardConfigurationId]) (FK_Wizard_WizardConfiguration)
        /// </summary>
        public virtual bpm_WizardConfiguration WizardConfiguration { get; set; } // FK_Wizard_WizardConfiguration

        public bpm_Wizard()
        {
            TenantId = 1;
            IsActive = true;
            IsDeleted = false;
            CreatedDate = System.DateTime.Now;
            ModifiedDate = System.DateTime.Now;
            WizardApprovalStages = new System.Collections.Generic.List<bpm_WizardApprovalStage>();
            WizardPermissionOverrides = new System.Collections.Generic.List<bpm_WizardPermissionOverride>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
