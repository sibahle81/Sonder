//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.MasterDataManager.Database.Configuration;
using RMA.Service.Admin.MasterDataManager.Database.Context;
using RMA.Service.Admin.MasterDataManager.Database.Entities;

namespace RMA.Service.Admin.MasterDataManager.Database.Context
{

    public partial class EfDbContext : RMA.Common.Database.Repository.RmaDbContext
    {
        static EfDbContext()
        {
            System.Data.Entity.Database.SetInitializer<EfDbContext>(null);
        }

        public EfDbContext()
            : base()
        {
            InitializePartial();
        }

        public EfDbContext(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            DisposePartial(disposing);
            base.Dispose(disposing);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new common_AccidentTypeConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementRoleConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementUserAcceptanceConfiguration());
            modelBuilder.Configurations.Add(new common_AuthorityLimitConfigurationConfiguration());
            modelBuilder.Configurations.Add(new common_AuthorityLimitConfigurationUserAuditConfiguration());
            modelBuilder.Configurations.Add(new common_BankConfiguration());
            modelBuilder.Configurations.Add(new common_BankAccountConfiguration());
            modelBuilder.Configurations.Add(new common_BankBranchConfiguration());
            modelBuilder.Configurations.Add(new common_BranchConfiguration());
            modelBuilder.Configurations.Add(new common_CauseOfDeathTypeConfiguration());
            modelBuilder.Configurations.Add(new common_CellPhonePrefixConfiguration());
            modelBuilder.Configurations.Add(new common_CityConfiguration());
            modelBuilder.Configurations.Add(new common_CityRetrievalConfiguration());
            modelBuilder.Configurations.Add(new common_ClaimTypeMappingConfiguration());
            modelBuilder.Configurations.Add(new common_CommissionBandConfiguration());
            modelBuilder.Configurations.Add(new common_CountryConfiguration());
            modelBuilder.Configurations.Add(new common_DepartmentLookupConfiguration());
            modelBuilder.Configurations.Add(new common_DesignationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_DocumentGeneratorAuditConfiguration());
            modelBuilder.Configurations.Add(new common_DocumentNumberConfiguration());
            modelBuilder.Configurations.Add(new common_DocumentTemplateConfiguration());
            modelBuilder.Configurations.Add(new common_EmailDomainConfiguration());
            modelBuilder.Configurations.Add(new common_ErrorTypeConfiguration());
            modelBuilder.Configurations.Add(new common_EuropAssistPremiumMatrixConfiguration());
            modelBuilder.Configurations.Add(new common_EventActionConfiguration());
            modelBuilder.Configurations.Add(new common_EventActivityConfiguration());
            modelBuilder.Configurations.Add(new common_EventAgentConfiguration());
            modelBuilder.Configurations.Add(new common_FeatureFlagSettingConfiguration());
            modelBuilder.Configurations.Add(new common_FollowUpConfiguration());
            modelBuilder.Configurations.Add(new common_FuneralInsuredTypeConfiguration());
            modelBuilder.Configurations.Add(new common_GroupCompanyBckConfiguration());
            modelBuilder.Configurations.Add(new common_ImportCityConfiguration());
            modelBuilder.Configurations.Add(new common_IndustryConfiguration());
            modelBuilder.Configurations.Add(new common_LookupValueConfiguration());
            modelBuilder.Configurations.Add(new common_MedicalAidMovementTypeConfiguration());
            modelBuilder.Configurations.Add(new common_MenuConfiguration());
            modelBuilder.Configurations.Add(new common_ModuleConfiguration());
            modelBuilder.Configurations.Add(new common_MonthlyScheduledWorkPoolUserConfiguration());
            modelBuilder.Configurations.Add(new common_MunicipalityConfiguration());
            modelBuilder.Configurations.Add(new common_NatureOfBusinessConfiguration());
            modelBuilder.Configurations.Add(new common_NoteConfiguration());
            modelBuilder.Configurations.Add(new common_NoteModuleConfiguration());
            modelBuilder.Configurations.Add(new common_OccupationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_OneTimePinConfiguration());
            modelBuilder.Configurations.Add(new common_OptionItemConfiguration());
            modelBuilder.Configurations.Add(new common_OptionItemValueConfiguration());
            modelBuilder.Configurations.Add(new common_OptionTypeConfiguration());
            modelBuilder.Configurations.Add(new common_OwnerUploadConfiguration());
            modelBuilder.Configurations.Add(new common_PayeeTypeConfiguration());
            modelBuilder.Configurations.Add(new common_PensCareSettingConfiguration());
            modelBuilder.Configurations.Add(new common_PensionGazetteConfiguration());
            modelBuilder.Configurations.Add(new common_PeriodConfiguration());
            modelBuilder.Configurations.Add(new common_PmpRegionConfiguration());
            modelBuilder.Configurations.Add(new common_PoolWorkFlowConfiguration());
            modelBuilder.Configurations.Add(new common_PostalCodeConfiguration());
            modelBuilder.Configurations.Add(new common_PostalCodeRangeConfiguration());
            modelBuilder.Configurations.Add(new common_PremiumComponentConfiguration());
            modelBuilder.Configurations.Add(new common_PreviousInsurerConfiguration());
            modelBuilder.Configurations.Add(new common_PrimeRateConfiguration());
            modelBuilder.Configurations.Add(new common_PriorityConfiguration());
            modelBuilder.Configurations.Add(new common_PublicHolidayConfiguration());
            modelBuilder.Configurations.Add(new common_RateIndustryConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralFeedbackConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralNatureOfQueryConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralPerformanceRatingConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new common_RegionCodeConfiguration());
            modelBuilder.Configurations.Add(new common_ReportViewedAuditConfiguration());
            modelBuilder.Configurations.Add(new common_RequiredDocumentConfiguration());
            modelBuilder.Configurations.Add(new common_ResolutionTypeConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryItemConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryItemTypeCategoryConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryItemTypeRoleConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryItemTypeWizardConfiguration());
            modelBuilder.Configurations.Add(new common_RolePlayerItemQueryResponseConfiguration());
            modelBuilder.Configurations.Add(new common_ServiceBusMessageConfiguration());
            modelBuilder.Configurations.Add(new common_SettingConfiguration());
            modelBuilder.Configurations.Add(new common_SftpRequestConfiguration());
            modelBuilder.Configurations.Add(new common_SftpRequestItemConfiguration());
            modelBuilder.Configurations.Add(new common_SftpRequestTypeConnectionConfiguration());
            modelBuilder.Configurations.Add(new common_SftpResponseConfiguration());
            modelBuilder.Configurations.Add(new common_SkillCategoryConfiguration());
            modelBuilder.Configurations.Add(new common_SlaItemTypeConfigurationConfiguration());
            modelBuilder.Configurations.Add(new common_SlaMovementAuditConfiguration());
            modelBuilder.Configurations.Add(new common_SlaStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new common_StateProvinceConfiguration());
            modelBuilder.Configurations.Add(new common_TmpDebtorsDetailConfiguration());
            modelBuilder.Configurations.Add(new common_UnderAssessReasonConfiguration());
            modelBuilder.Configurations.Add(new common_UnderwriterConfiguration());
            modelBuilder.Configurations.Add(new common_UpfrontCommClawbackratioConfiguration());
            modelBuilder.Configurations.Add(new common_UploadConfiguration());
            modelBuilder.Configurations.Add(new common_UserReminderConfiguration());
            modelBuilder.Configurations.Add(new common_ValidityCheckCategoryConfiguration());
            modelBuilder.Configurations.Add(new common_ValidityCheckSetConfiguration());
            modelBuilder.Configurations.Add(new common_VatConfiguration());
            modelBuilder.Configurations.Add(new common_WorkItemTypeConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void InitializePartial();
        partial void DisposePartial(bool disposing);
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
