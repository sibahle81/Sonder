


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// The following connection settings were used to generate this file:
//     Connection String:      "data source=azt-mcc-sql-01.rma.msft;initial catalog=AZD-MCC;user id=RMAAdmin;password=**zapped**;;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.3471.2

using Autofac;
using RMA.Common.Database.Repository;
using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Database.Entities;
using RMA.Service.Admin.MasterDataManager.Database.Context;

namespace RMA.Service.Admin.MasterDataManager.Database
{
	public class EfDbContextServiceRegistry : Module
	{
		protected override void Load(ContainerBuilder builder)
		{ 
			builder.RegisterType<EfDbContext>();
			builder.RegisterType<EfRepository<common_AccidentType, EfDbContext>>().As<IRepository<common_AccidentType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Announcement, EfDbContext>>().As<IRepository<common_Announcement>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementRole, EfDbContext>>().As<IRepository<common_AnnouncementRole>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementUserAcceptance, EfDbContext>>().As<IRepository<common_AnnouncementUserAcceptance>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AuthorityLimitConfiguration, EfDbContext>>().As<IRepository<common_AuthorityLimitConfiguration>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_AuthorityLimitConfigurationUserAudit, EfDbContext>>().As<IRepository<common_AuthorityLimitConfigurationUserAudit>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Bank, EfDbContext>>().As<IRepository<common_Bank>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_BankAccount, EfDbContext>>().As<IRepository<common_BankAccount>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_BankBranch, EfDbContext>>().As<IRepository<common_BankBranch>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Branch, EfDbContext>>().As<IRepository<common_Branch>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_CauseOfDeathType, EfDbContext>>().As<IRepository<common_CauseOfDeathType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_CellPhonePrefix, EfDbContext>>().As<IRepository<common_CellPhonePrefix>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_City, EfDbContext>>().As<IRepository<common_City>>();
			builder.RegisterType<EfRepository<common_CityRetrieval, EfDbContext>>().As<IRepository<common_CityRetrieval>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ClaimTypeMapping, EfDbContext>>().As<IRepository<common_ClaimTypeMapping>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_CommissionBand, EfDbContext>>().As<IRepository<common_CommissionBand>>();
			builder.RegisterType<EfRepository<common_Country, EfDbContext>>().As<IRepository<common_Country>>();
			builder.RegisterType<EfRepository<common_DepartmentLookup, EfDbContext>>().As<IRepository<common_DepartmentLookup>>();
			builder.RegisterType<EfRepository<common_DesignationType, EfDbContext>>().As<IRepository<common_DesignationType>>();
			builder.RegisterType<EfRepository<common_DocumentGeneratorAudit, EfDbContext>>().As<IRepository<common_DocumentGeneratorAudit>>();
			builder.RegisterType<EfRepository<common_DocumentNumber, EfDbContext>>().As<IRepository<common_DocumentNumber>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_DocumentTemplate, EfDbContext>>().As<IRepository<common_DocumentTemplate>>();
			builder.RegisterType<EfRepository<common_EmailDomain, EfDbContext>>().As<IRepository<common_EmailDomain>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ErrorType, EfDbContext>>().As<IRepository<common_ErrorType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_EuropAssistPremiumMatrix, EfDbContext>>().As<IRepository<common_EuropAssistPremiumMatrix>>();
			builder.RegisterType<EfRepository<common_EventAction, EfDbContext>>().As<IRepository<common_EventAction>>();
			builder.RegisterType<EfRepository<common_EventActivity, EfDbContext>>().As<IRepository<common_EventActivity>>();
			builder.RegisterType<EfRepository<common_EventAgent, EfDbContext>>().As<IRepository<common_EventAgent>>();
			builder.RegisterType<EfRepository<common_ExcelToDatabaseMap, EfDbContext>>().As<IRepository<common_ExcelToDatabaseMap>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_FeatureFlagSetting, EfDbContext>>().As<IRepository<common_FeatureFlagSetting>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_FollowUp, EfDbContext>>().As<IRepository<common_FollowUp>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_FuneralInsuredType, EfDbContext>>().As<IRepository<common_FuneralInsuredType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_GroupCompanyBck, EfDbContext>>().As<IRepository<common_GroupCompanyBck>>();
			builder.RegisterType<EfRepository<common_ImportCity, EfDbContext>>().As<IRepository<common_ImportCity>>();
			builder.RegisterType<EfRepository<common_Industry, EfDbContext>>().As<IRepository<common_Industry>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_LookupValue, EfDbContext>>().As<IRepository<common_LookupValue>>();
			builder.RegisterType<EfRepository<common_MedicalAidMovementType, EfDbContext>>().As<IRepository<common_MedicalAidMovementType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Menu, EfDbContext>>().As<IRepository<common_Menu>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Module, EfDbContext>>().As<IRepository<common_Module>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_MonthlyScheduledWorkPoolUser, EfDbContext>>().As<IRepository<common_MonthlyScheduledWorkPoolUser>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Municipality, EfDbContext>>().As<IRepository<common_Municipality>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_NatureOfBusiness, EfDbContext>>().As<IRepository<common_NatureOfBusiness>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Note, EfDbContext>>().As<IRepository<common_Note>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_NoteModule, EfDbContext>>().As<IRepository<common_NoteModule>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OccupationType, EfDbContext>>().As<IRepository<common_OccupationType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OneTimePin, EfDbContext>>().As<IRepository<common_OneTimePin>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OptionItem, EfDbContext>>().As<IRepository<common_OptionItem>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OptionItemValue, EfDbContext>>().As<IRepository<common_OptionItemValue>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OptionType, EfDbContext>>().As<IRepository<common_OptionType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_OwnerUpload, EfDbContext>>().As<IRepository<common_OwnerUpload>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PayeeType, EfDbContext>>().As<IRepository<common_PayeeType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PensCareSetting, EfDbContext>>().As<IRepository<common_PensCareSetting>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PensionGazette, EfDbContext>>().As<IRepository<common_PensionGazette>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Period, EfDbContext>>().As<IRepository<common_Period>>();
			builder.RegisterType<EfRepository<common_PmpRegion, EfDbContext>>().As<IRepository<common_PmpRegion>>();
			builder.RegisterType<EfRepository<common_PoolWorkFlow, EfDbContext>>().As<IRepository<common_PoolWorkFlow>>();
			builder.RegisterType<EfRepository<common_PostalCode, EfDbContext>>().As<IRepository<common_PostalCode>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PostalCodeRange, EfDbContext>>().As<IRepository<common_PostalCodeRange>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PremiumComponent, EfDbContext>>().As<IRepository<common_PremiumComponent>>();
			builder.RegisterType<EfRepository<common_PreviousInsurer, EfDbContext>>().As<IRepository<common_PreviousInsurer>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PrimeRate, EfDbContext>>().As<IRepository<common_PrimeRate>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Priority, EfDbContext>>().As<IRepository<common_Priority>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_PublicHoliday, EfDbContext>>().As<IRepository<common_PublicHoliday>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RateIndustry, EfDbContext>>().As<IRepository<common_RateIndustry>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Referral, EfDbContext>>().As<IRepository<common_Referral>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ReferralFeedback, EfDbContext>>().As<IRepository<common_ReferralFeedback>>();
			builder.RegisterType<EfRepository<common_ReferralNatureOfQuery, EfDbContext>>().As<IRepository<common_ReferralNatureOfQuery>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ReferralPerformanceRating, EfDbContext>>().As<IRepository<common_ReferralPerformanceRating>>();
			builder.RegisterType<EfRepository<common_ReferralStatusChangeAudit, EfDbContext>>().As<IRepository<common_ReferralStatusChangeAudit>>();
			builder.RegisterType<EfRepository<common_RegionCode, EfDbContext>>().As<IRepository<common_RegionCode>>();
			builder.RegisterType<EfRepository<common_ReportViewedAudit, EfDbContext>>().As<IRepository<common_ReportViewedAudit>>();
			builder.RegisterType<EfRepository<common_RequiredDocument, EfDbContext>>().As<IRepository<common_RequiredDocument>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ResolutionType, EfDbContext>>().As<IRepository<common_ResolutionType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQuery, EfDbContext>>().As<IRepository<common_RolePlayerItemQuery>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQueryItem, EfDbContext>>().As<IRepository<common_RolePlayerItemQueryItem>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQueryItemTypeCategory, EfDbContext>>().As<IRepository<common_RolePlayerItemQueryItemTypeCategory>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQueryItemTypeRole, EfDbContext>>().As<IRepository<common_RolePlayerItemQueryItemTypeRole>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQueryItemTypeWizard, EfDbContext>>().As<IRepository<common_RolePlayerItemQueryItemTypeWizard>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_RolePlayerItemQueryResponse, EfDbContext>>().As<IRepository<common_RolePlayerItemQueryResponse>>();
			builder.RegisterType<EfRepository<common_ServiceBusMessage, EfDbContext>>().As<IRepository<common_ServiceBusMessage>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Setting, EfDbContext>>().As<IRepository<common_Setting>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_SftpRequest, EfDbContext>>().As<IRepository<common_SftpRequest>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_SftpRequestItem, EfDbContext>>().As<IRepository<common_SftpRequestItem>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_SftpRequestTypeConnection, EfDbContext>>().As<IRepository<common_SftpRequestTypeConnection>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_SftpResponse, EfDbContext>>().As<IRepository<common_SftpResponse>>();
			builder.RegisterType<EfRepository<common_SkillCategory, EfDbContext>>().As<IRepository<common_SkillCategory>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_SlaItemTypeConfiguration, EfDbContext>>().As<IRepository<common_SlaItemTypeConfiguration>>();
			builder.RegisterType<EfRepository<common_SlaMovementAudit, EfDbContext>>().As<IRepository<common_SlaMovementAudit>>();
			builder.RegisterType<EfRepository<common_SlaStatusChangeAudit, EfDbContext>>().As<IRepository<common_SlaStatusChangeAudit>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_StateProvince, EfDbContext>>().As<IRepository<common_StateProvince>>();
			builder.RegisterType<EfRepository<common_TmpDebtorsDetail, EfDbContext>>().As<IRepository<common_TmpDebtorsDetail>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_UnderAssessReason, EfDbContext>>().As<IRepository<common_UnderAssessReason>>();
			builder.RegisterType<EfRepository<common_Underwriter, EfDbContext>>().As<IRepository<common_Underwriter>>();
			builder.RegisterType<EfRepository<common_UpfrontCommClawbackratio, EfDbContext>>().As<IRepository<common_UpfrontCommClawbackratio>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Upload, EfDbContext>>().As<IRepository<common_Upload>>();
			builder.RegisterType<EfRepository<common_UserReminder, EfDbContext>>().As<IRepository<common_UserReminder>>();
			builder.RegisterType<EfRepository<common_ValidityCheckCategory, EfDbContext>>().As<IRepository<common_ValidityCheckCategory>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_ValidityCheckSet, EfDbContext>>().As<IRepository<common_ValidityCheckSet>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_Vat, EfDbContext>>().As<IRepository<common_Vat>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<common_WorkItemType, EfDbContext>>().As<IRepository<common_WorkItemType>>();
  
		}
	}
}
