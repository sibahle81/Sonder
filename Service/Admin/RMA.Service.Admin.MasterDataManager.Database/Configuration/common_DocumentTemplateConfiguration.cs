//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.Admin.MasterDataManager.Database.Entities;

namespace RMA.Service.Admin.MasterDataManager.Database.Configuration
{
    public class common_DocumentTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<common_DocumentTemplate>
    {
        public common_DocumentTemplateConfiguration()
            : this("common")
        {
        }

        public common_DocumentTemplateConfiguration(string schema)
        {
            ToTable("DocumentTemplate", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Location).HasColumnName(@"Location").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.SchemaValidator).HasColumnName(@"SchemaValidator").HasColumnType("xml").IsOptional();
            Property(x => x.DocumentHtml).HasColumnName(@"DocumentHtml").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DocumentBinary).HasColumnName(@"DocumentBinary").HasColumnType("varbinary(max)").IsOptional();
            Property(x => x.DocumentName).HasColumnName(@"DocumentName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(250);
            Property(x => x.DocumentExtension).HasColumnName(@"DocumentExtension").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DocumentMimeType).HasColumnName(@"DocumentMimeType").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.DocumentType).HasColumnName(@"DocumentTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
        }
    }

}
