//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Configuration;
using RMA.Service.ClientCare.Database.Context;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Context
{

    public partial class EfDbContext : RMA.Common.Database.Repository.RmaDbContext
    {
        static EfDbContext()
        {
            System.Data.Entity.Database.SetInitializer<EfDbContext>(null);
        }

        public EfDbContext()
            : base()
        {
            InitializePartial();
        }

        public EfDbContext(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            DisposePartial(disposing);
            base.Dispose(disposing);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new broker_BrokerageConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageAddressConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageBankAccountConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageBranchConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageBrokerConsultantConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageCheckConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageContactConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageFscaLicenseCategoryConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageImportRequestConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageNoteConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageProductOptionConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerageRepresentativeConfiguration());
            modelBuilder.Configurations.Add(new broker_BrokerPartnershipConfiguration());
            modelBuilder.Configurations.Add(new broker_FscaLicenseCategoryConfiguration());
            modelBuilder.Configurations.Add(new broker_RepQualificationConfiguration());
            modelBuilder.Configurations.Add(new broker_RepresentativeConfiguration());
            modelBuilder.Configurations.Add(new broker_RepresentativeBankAccountConfiguration());
            modelBuilder.Configurations.Add(new broker_RepresentativeCheckConfiguration());
            modelBuilder.Configurations.Add(new broker_RepresentativeFscaLicenseCategoryConfiguration());
            modelBuilder.Configurations.Add(new broker_RepresentativeNoteConfiguration());
            modelBuilder.Configurations.Add(new client_AuditLogConfiguration());
            modelBuilder.Configurations.Add(new client_BankingPurposeConfiguration());
            modelBuilder.Configurations.Add(new client_BodyCollectorConfiguration());
            modelBuilder.Configurations.Add(new client_CompanyConfiguration());
            modelBuilder.Configurations.Add(new client_CompanyPremisConfiguration());
            modelBuilder.Configurations.Add(new client_DeclarationConfiguration());
            modelBuilder.Configurations.Add(new client_DeclarationAllowanceConfiguration());
            modelBuilder.Configurations.Add(new client_DeclarationBillingIntegrationConfiguration());
            modelBuilder.Configurations.Add(new client_DeclarationPenaltyPercentageConfiguration());
            modelBuilder.Configurations.Add(new client_DoctorConfiguration());
            modelBuilder.Configurations.Add(new client_EmploymentConfiguration());
            modelBuilder.Configurations.Add(new client_FinPayeeConfiguration());
            modelBuilder.Configurations.Add(new client_FuneralParlorConfiguration());
            modelBuilder.Configurations.Add(new client_IndustryClassDeclarationConfigurationConfiguration());
            modelBuilder.Configurations.Add(new client_IndustryClassRenewalConfiguration());
            modelBuilder.Configurations.Add(new client_InflationPercentageConfiguration());
            modelBuilder.Configurations.Add(new client_LastViewedConfiguration());
            modelBuilder.Configurations.Add(new client_LetterOfGoodStandingConfiguration());
            modelBuilder.Configurations.Add(new client_LiveInAllowanceConfiguration());
            modelBuilder.Configurations.Add(new client_MaxAverageEarningConfiguration());
            modelBuilder.Configurations.Add(new client_MinimumAllowablePremiumConfiguration());
            modelBuilder.Configurations.Add(new client_OrganisationOptionItemValueConfiguration());
            modelBuilder.Configurations.Add(new client_PersalCutOffDateConfiguration());
            modelBuilder.Configurations.Add(new client_PersonConfiguration());
            modelBuilder.Configurations.Add(new client_PersonEmploymentConfiguration());
            modelBuilder.Configurations.Add(new client_PolicyContactOverrideConfiguration());
            modelBuilder.Configurations.Add(new client_PreviousInsurerRolePlayerConfiguration());
            modelBuilder.Configurations.Add(new client_QlinkReservationTransactionConfiguration());
            modelBuilder.Configurations.Add(new client_QlinkTransactionConfiguration());
            modelBuilder.Configurations.Add(new client_RateConfiguration());
            modelBuilder.Configurations.Add(new client_ReinsurerConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerAddressConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerBankingDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerContactConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerContactInformationConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerMedicalAidDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerNoteConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPersalDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyDeclarationConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyDeclarationDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyOnlineSubmissionConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyOnlineSubmissionDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyTransactionConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerPolicyTransactionDetailConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerRelationConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerRelationLifeConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerRetirementConfiguration());
            modelBuilder.Configurations.Add(new client_RolePlayerTypeConfiguration());
            modelBuilder.Configurations.Add(new client_SchemeClassificationConfiguration());
            modelBuilder.Configurations.Add(new client_StillBornConfiguration());
            modelBuilder.Configurations.Add(new client_UndertakerConfiguration());
            modelBuilder.Configurations.Add(new client_UserVopdResponseConfiguration());
            modelBuilder.Configurations.Add(new client_VopdResponseConfiguration());
            modelBuilder.Configurations.Add(new common_AccidentTypeConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementRoleConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementUserAcceptanceConfiguration());
            modelBuilder.Configurations.Add(new common_ClaimTypeMappingConfiguration());
            modelBuilder.Configurations.Add(new common_CommissionBandConfiguration());
            modelBuilder.Configurations.Add(new common_DepartmentLookupConfiguration());
            modelBuilder.Configurations.Add(new common_DesignationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_EuropAssistPremiumMatrixConfiguration());
            modelBuilder.Configurations.Add(new common_EventActionConfiguration());
            modelBuilder.Configurations.Add(new common_EventActivityConfiguration());
            modelBuilder.Configurations.Add(new common_EventAgentConfiguration());
            modelBuilder.Configurations.Add(new common_FeatureFlagSettingConfiguration());
            modelBuilder.Configurations.Add(new common_FuneralCoverTypeConfiguration());
            modelBuilder.Configurations.Add(new common_FuneralInsuredTypeConfiguration());
            modelBuilder.Configurations.Add(new common_GroupCompanyBckConfiguration());
            modelBuilder.Configurations.Add(new common_LookupValueConfiguration());
            modelBuilder.Configurations.Add(new common_MonthlyScheduledWorkPoolUserConfiguration());
            modelBuilder.Configurations.Add(new common_MunicipalityConfiguration());
            modelBuilder.Configurations.Add(new common_NoteConfiguration());
            modelBuilder.Configurations.Add(new common_NoteModuleConfiguration());
            modelBuilder.Configurations.Add(new common_OccupationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_OneTimePinConfiguration());
            modelBuilder.Configurations.Add(new common_OptionItemConfiguration());
            modelBuilder.Configurations.Add(new common_OptionItemValueConfiguration());
            modelBuilder.Configurations.Add(new common_OptionTypeConfiguration());
            modelBuilder.Configurations.Add(new common_PayeeTypeConfiguration());
            modelBuilder.Configurations.Add(new common_PensCareSettingConfiguration());
            modelBuilder.Configurations.Add(new common_PeriodConfiguration());
            modelBuilder.Configurations.Add(new common_PoolWorkFlowConfiguration());
            modelBuilder.Configurations.Add(new common_PremiumComponentConfiguration());
            modelBuilder.Configurations.Add(new common_PreviousInsurerConfiguration());
            modelBuilder.Configurations.Add(new common_PriorityConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralFeedbackConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralNatureOfQueryConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralPerformanceRatingConfiguration());
            modelBuilder.Configurations.Add(new common_ReferralStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new common_ReportViewedAuditConfiguration());
            modelBuilder.Configurations.Add(new common_ResolutionTypeConfiguration());
            modelBuilder.Configurations.Add(new common_ServiceBusMessageConfiguration());
            modelBuilder.Configurations.Add(new common_SlaItemTypeConfigurationConfiguration());
            modelBuilder.Configurations.Add(new common_SlaMovementAuditConfiguration());
            modelBuilder.Configurations.Add(new common_SlaStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new common_TmpDebtorsDetailConfiguration());
            modelBuilder.Configurations.Add(new common_UnderAssessReasonConfiguration());
            modelBuilder.Configurations.Add(new common_UpfrontCommClawbackratioConfiguration());
            modelBuilder.Configurations.Add(new common_UserReminderConfiguration());
            modelBuilder.Configurations.Add(new common_VatConfiguration());
            modelBuilder.Configurations.Add(new common_WorkItemTypeConfiguration());
            modelBuilder.Configurations.Add(new lead_AddressConfiguration());
            modelBuilder.Configurations.Add(new lead_CompanyConfiguration());
            modelBuilder.Configurations.Add(new lead_ContactConfiguration());
            modelBuilder.Configurations.Add(new lead_ContactV2Configuration());
            modelBuilder.Configurations.Add(new lead_LeadConfiguration());
            modelBuilder.Configurations.Add(new lead_NoteConfiguration());
            modelBuilder.Configurations.Add(new lead_PersonConfiguration());
            modelBuilder.Configurations.Add(new Load_BankStatementEntryStagingConfiguration());
            modelBuilder.Configurations.Add(new Load_BenefitConfiguration());
            modelBuilder.Configurations.Add(new Load_BenefitsUploadErrorAuditConfiguration());
            modelBuilder.Configurations.Add(new Load_BulkAllocationFileConfiguration());
            modelBuilder.Configurations.Add(new Load_BulkManualAllocationConfiguration());
            modelBuilder.Configurations.Add(new Load_BulkPaymentListingConfiguration());
            modelBuilder.Configurations.Add(new Load_CdaPolicyScheduleEmailQueueConfiguration());
            modelBuilder.Configurations.Add(new Load_ClientClass13RatesConfiguration());
            modelBuilder.Configurations.Add(new Load_ClientClass4RatesConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralBankConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralBenefitConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralDeductionConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralFileConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralInsuranceConfiguration());
            modelBuilder.Configurations.Add(new Load_ConsolidatedFuneralMemberConfiguration());
            modelBuilder.Configurations.Add(new Load_DiscountFileConfiguration());
            modelBuilder.Configurations.Add(new Load_DiscountFileAuditConfiguration());
            modelBuilder.Configurations.Add(new Load_DiscountFileListingConfiguration());
            modelBuilder.Configurations.Add(new Load_ExternalPartnerPolicyDataConfiguration());
            modelBuilder.Configurations.Add(new Load_FuneralPremiumConfiguration());
            modelBuilder.Configurations.Add(new Load_GpaConfiguration());
            modelBuilder.Configurations.Add(new Load_GpaFileConfiguration());
            modelBuilder.Configurations.Add(new Load_GpaMemberConfiguration());
            modelBuilder.Configurations.Add(new Load_GroupPolicyScheduleBatchConfiguration());
            modelBuilder.Configurations.Add(new Load_IndustryRateConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLifeConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLivesBenefitConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLivesCompanyConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLivesErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLivesMemberConfiguration());
            modelBuilder.Configurations.Add(new Load_InsuredLivesMessageConfiguration());
            modelBuilder.Configurations.Add(new Load_LeadConfiguration());
            modelBuilder.Configurations.Add(new Load_LeadsProductConfiguration());
            modelBuilder.Configurations.Add(new Load_LeadsProductWizardConfiguration());
            modelBuilder.Configurations.Add(new Load_LeadsUploadErrorAuditConfiguration());
            modelBuilder.Configurations.Add(new Load_LeadTimeTrackerConfiguration());
            modelBuilder.Configurations.Add(new Load_LegalHandOverFileConfiguration());
            modelBuilder.Configurations.Add(new Load_LegalHandOverFileDetailConfiguration());
            modelBuilder.Configurations.Add(new Load_MemberCancelConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePluConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusBankConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusBenefitConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusDeductionConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusFileConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusInsuranceConfiguration());
            modelBuilder.Configurations.Add(new Load_MyValuePlusMemberConfiguration());
            modelBuilder.Configurations.Add(new Load_PaymentStagingConfiguration());
            modelBuilder.Configurations.Add(new Load_PaymentStagingFileConfiguration());
            modelBuilder.Configurations.Add(new Load_PostRetirementMedicalAidDataConfiguration());
            modelBuilder.Configurations.Add(new Load_PostRetirementMedicalAidInvoiceDetailConfiguration());
            modelBuilder.Configurations.Add(new Load_PostRetirementMedicalAidInvoiceHeaderConfiguration());
            modelBuilder.Configurations.Add(new Load_PostRetirementMedicalAnnuityDataConfiguration());
            modelBuilder.Configurations.Add(new Load_PostRetirementMedicalAnnuityLatestDataConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingBenefitConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingCompanyConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingFileConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingMemberConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingMessageConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingPaymentConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingPaymentErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingPaymentFileConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumListingPolicyPremiumMovementConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumPaymentDueCreditNoteConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumPaymentFileValidationConfiguration());
            modelBuilder.Configurations.Add(new Load_PremiumPaymentFileValidationContentConfiguration());
            modelBuilder.Configurations.Add(new Load_QLinkPaymentRecordStagingConfiguration());
            modelBuilder.Configurations.Add(new Load_RateConfiguration());
            modelBuilder.Configurations.Add(new Load_RatesUploadErrorAuditConfiguration());
            modelBuilder.Configurations.Add(new Load_StageGroupRiskConfiguration());
            modelBuilder.Configurations.Add(new Load_StageGroupRiskErrorConfiguration());
            modelBuilder.Configurations.Add(new Load_StagePolicyIntegrationRequestConfiguration());
            modelBuilder.Configurations.Add(new Load_StagePostRetirementMedicalAidConfiguration());
            modelBuilder.Configurations.Add(new Load_StagePostRetirementMedicalAnnuityConfiguration());
            modelBuilder.Configurations.Add(new Load_ThirdPartyPolicyListingConfiguration());
            modelBuilder.Configurations.Add(new Load_ThirdPartyPolicyListingErrorConfiguration());
            modelBuilder.Configurations.Add(new medical_HealthCareProviderConfiguration());
            modelBuilder.Configurations.Add(new medical_HealthCareProviderAgreedTariffConfiguration());
            modelBuilder.Configurations.Add(new policy_AnnualIncreaseConfiguration());
            modelBuilder.Configurations.Add(new policy_AuditLogConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitCategoryExtensionConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitCategoryFuneralConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitCategoryOptionConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitPayrollConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitRateConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitRateDetailConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitRateSplitConfiguration());
            modelBuilder.Configurations.Add(new policy_BenefitReinsAverageConfiguration());
            modelBuilder.Configurations.Add(new policy_CategoryInsuredCoverConfiguration());
            modelBuilder.Configurations.Add(new policy_ChildCoverConfiguration());
            modelBuilder.Configurations.Add(new policy_CoverConfiguration());
            modelBuilder.Configurations.Add(new policy_GroupSchemePremiumRoundingExclusionConfiguration());
            modelBuilder.Configurations.Add(new policy_InsuredLifeErrorAuditConfiguration());
            modelBuilder.Configurations.Add(new policy_InsuredLifeFileAuditConfiguration());
            modelBuilder.Configurations.Add(new policy_InsuredSumAssuredConfiguration());
            modelBuilder.Configurations.Add(new policy_InsurerConfiguration());
            modelBuilder.Configurations.Add(new policy_InsurerGroupSchemeAccessConfiguration());
            modelBuilder.Configurations.Add(new policy_LastViewedConfiguration());
            modelBuilder.Configurations.Add(new policy_NoteConfiguration());
            modelBuilder.Configurations.Add(new policy_PersonInsuredCategoryConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyBenefitCategoryConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyBenefitDetailConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyBenefitOptionConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyBinderConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyBrokerConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyChangeBenefitConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyChangeProductConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyContactConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyDetailConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyDocumentCommunicationMatrixConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyExtendedSettingConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyInsuredLifeConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyInsuredLifeAdditionalBenefitConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyInvoiceConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyInvoiceDetailConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyLifeExtensionConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyMovementConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyNoteConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyOptionConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyProductDeviationConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyScheduleOwnerMapConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyStatusActionsMatrixConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new policy_PolicyTreatyConfiguration());
            modelBuilder.Configurations.Add(new policy_PostRetirementMedicalAnnuityInvoiceDetailConfiguration());
            modelBuilder.Configurations.Add(new policy_PostRetirementMedicalAnnuityInvoiceHeaderConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingCompanyConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingErrorConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingErrorAuditConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingFileAuditConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingMemberConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingPolicyConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumListingScheduleConfiguration());
            modelBuilder.Configurations.Add(new policy_PremiumPaybackConfiguration());
            modelBuilder.Configurations.Add(new product_AuditLogConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitAddBeneficiaryConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitBeneficiaryTypeConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitCaptureEarningConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitCompensationAmountConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitCoverMemberTypeConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitEarningsRangeCalcConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitEarningsTypeConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitMedicalReportRequiredConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitMedicalReportTypeConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitNoteConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitOptionItemValueConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitProductConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitRateConfiguration());
            modelBuilder.Configurations.Add(new product_BenefitRuleConfiguration());
            modelBuilder.Configurations.Add(new product_DiscountTypeConfiguration());
            modelBuilder.Configurations.Add(new product_LastViewedConfiguration());
            modelBuilder.Configurations.Add(new product_ProductConfiguration());
            modelBuilder.Configurations.Add(new product_ProductBankAccountConfiguration());
            modelBuilder.Configurations.Add(new product_ProductBenefitFormulaConfiguration());
            modelBuilder.Configurations.Add(new product_ProductNoteConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionAllowanceTypeConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionBillingIntegrationConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionCoverTypeConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionDependencyConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionNoteConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionOptionItemValueConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionPaymentFrequencyConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionRuleConfiguration());
            modelBuilder.Configurations.Add(new product_ProductOptionSettingConfiguration());
            modelBuilder.Configurations.Add(new product_ProductRuleConfiguration());
            modelBuilder.Configurations.Add(new product_TemplateConfiguration());
            modelBuilder.Configurations.Add(new quote_QuoteConfiguration());
            modelBuilder.Configurations.Add(new quote_QuoteAllowanceConfiguration());
            modelBuilder.Configurations.Add(new quote_QuoteDetailsV2Configuration());
            modelBuilder.Configurations.Add(new quote_QuoteV2Configuration());
            modelBuilder.Configurations.Add(new reinsurance_CoInsuranceConfiguration());
            modelBuilder.Configurations.Add(new reinsurance_TreatyConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void InitializePartial();
        partial void DisposePartial(bool disposing);
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
