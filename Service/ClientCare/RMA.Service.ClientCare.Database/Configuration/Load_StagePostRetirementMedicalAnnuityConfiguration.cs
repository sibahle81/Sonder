//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class Load_StagePostRetirementMedicalAnnuityConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Load_StagePostRetirementMedicalAnnuity>
    {
        public Load_StagePostRetirementMedicalAnnuityConfiguration()
            : this("Load")
        {
        }

        public Load_StagePostRetirementMedicalAnnuityConfiguration(string schema)
        {
            ToTable("StagePostRetirementMedicalAnnuity", schema);
            HasKey(x => x.PostRetirementMedicalAnnuityId);

            Property(x => x.PostRetirementMedicalAnnuityId).HasColumnName(@"PostRetirementMedicalAnnuityId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmployeeNumber).HasColumnName(@"EmployeeNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EmployeeSurname).HasColumnName(@"EmployeeSurname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EmployeeInitials).HasColumnName(@"EmployeeInitials").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PromiseRule).HasColumnName(@"PromiseRule").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateJoinedGroup).HasColumnName(@"DateJoinedGroup").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Age).HasColumnName(@"Age").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MedicalDependentMedicalAidFamilyIndicator).HasColumnName(@"MedicalDependentMedicalAidFamilyIndicator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MedicalScheme).HasColumnName(@"MedicalScheme").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MembershipNo).HasColumnName(@"MembershipNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MedicalOptionPlanType).HasColumnName(@"MedicalOptionPlanType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RetiredIndicator).HasColumnName(@"RetiredIndicator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.YearsInService).HasColumnName(@"YearsInService").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateOfTermination).HasColumnName(@"DateOfTermination").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PromiseIndicator).HasColumnName(@"PromiseIndicator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BenefitPercentageIncrease).HasColumnName(@"BenefitPercentageIncrease").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.NextIncreaseDateLastIncreaseDate).HasColumnName(@"NextIncreaseDateLastIncreaseDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.BenefitEntitlementPercentage).HasColumnName(@"BenefitEntitlementPercentage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CompanyContribution).HasColumnName(@"CompanyContribution").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.MemberContribution).HasColumnName(@"MemberContribution").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.TotalContributionDue).HasColumnName(@"TotalContributionDue").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SpouseNames).HasColumnName(@"SpouseNames").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SpouseId).HasColumnName(@"SpouseId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SpouseDateOfBirth).HasColumnName(@"SpouseDateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SpouseGender).HasColumnName(@"SpouseGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildOne).HasColumnName(@"ChildOne").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildOneId).HasColumnName(@"ChildOneId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildDateOfDate).HasColumnName(@"ChildDateOfDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildOneGender).HasColumnName(@"ChildOneGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildTwo).HasColumnName(@"ChildTwo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildTwoId).HasColumnName(@"ChildTwoId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildTwoDateOfBirth).HasColumnName(@"ChildTwoDateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildTwoGender).HasColumnName(@"ChildTwoGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildThree).HasColumnName(@"ChildThree").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildThreeId).HasColumnName(@"ChildThreeId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildThreeDateOfBirth).HasColumnName(@"ChildThreeDateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChildThreeGender).HasColumnName(@"ChildThreeGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultOneDependent).HasColumnName(@"AdultOneDependent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultOneId).HasColumnName(@"AdultOneId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultOneDateOfBirth).HasColumnName(@"AdultOneDateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultOneGender).HasColumnName(@"AdultOneGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultTwoDependent).HasColumnName(@"AdultTwoDependent").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultTwoId).HasColumnName(@"AdultTwoId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultTwoDateOfBirth).HasColumnName(@"AdultTwoDateOfBirth").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AdultTwoGender).HasColumnName(@"AdultTwoGender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.WizardId).HasColumnName(@"WizardId").HasColumnType("int").IsRequired();
            Property(x => x.FileIdentifier).HasColumnName(@"FileIdentifier").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.ExcelRowNumber).HasColumnName(@"ExcelRowNumber").HasColumnType("int").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsProcessed).HasColumnName(@"IsProcessed").HasColumnType("bit").IsRequired();
        }
    }

}
