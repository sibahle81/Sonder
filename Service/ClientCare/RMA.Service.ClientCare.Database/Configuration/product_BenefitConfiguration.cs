//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class product_BenefitConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<product_Benefit>
    {
        public product_BenefitConfiguration()
            : this("product")
        {
        }

        public product_BenefitConfiguration(string schema)
        {
            ToTable("Benefit", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("date").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsOptional();
            Property(x => x.IsCaptureEarnings).HasColumnName(@"IsCaptureEarnings").HasColumnType("bit").IsRequired();
            Property(x => x.IsAddBeneficiaries).HasColumnName(@"IsAddBeneficiaries").HasColumnType("bit").IsRequired();
            Property(x => x.IsMedicalReportRequired).HasColumnName(@"IsMedicalReportRequired").HasColumnType("bit").IsRequired();
            Property(x => x.ProductId).HasColumnName(@"ProductId").HasColumnType("int").IsRequired();
            Property(x => x.BenefitType).HasColumnName(@"BenefitTypeId").HasColumnType("int").IsRequired();
            Property(x => x.CoverMemberType).HasColumnName(@"CoverMemberTypeId").HasColumnType("int").IsRequired();
            Property(x => x.MinCompensationAmount).HasColumnName(@"MinCompensationAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.MaxCompensationAmount).HasColumnName(@"MaxCompensationAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.ExcessAmount).HasColumnName(@"ExcessAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,0);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.EstimateType).HasColumnName(@"EstimateTypeId").HasColumnType("int").IsOptional();
            Property(x => x.DisabilityBenefitTerm).HasColumnName(@"DisabilityBenefitTermId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitGroup).HasColumnName(@"BenefitGroupId").HasColumnType("int").IsOptional();
            HasMany(t => t.ProductOptions).WithMany(t => t.Benefits).Map(m =>
            {
                m.ToTable("ProductOptionBenefit", "product");
                m.MapLeftKey("BenefitId");
                m.MapRightKey("ProductOptionId");
            });
            HasMany(t => t.Policies).WithMany(t => t.Benefits).Map(m =>
            {
                m.ToTable("PolicyBenefit", "policy");
                m.MapLeftKey("BenifitId");
                m.MapRightKey("PolicyId");
            });
        }
    }

}
