//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class client_PersonEmploymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<client_PersonEmployment>
    {
        public client_PersonEmploymentConfiguration()
            : this("client")
        {
        }

        public client_PersonEmploymentConfiguration(string schema)
        {
            ToTable("PersonEmployment", schema);
            HasKey(x => x.PersonEmpoymentId);

            Property(x => x.PersonEmpoymentId).HasColumnName(@"PersonEmpoymentId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmployeeRolePlayerId).HasColumnName(@"EmployeeRolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.EmployerRolePlayerId).HasColumnName(@"EmployerRolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.EmployeeNumber).HasColumnName(@"EmployeeNumber").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OccupationTypeId).HasColumnName(@"OccupationTypeId").HasColumnType("int").IsOptional();
            Property(x => x.EventOccupationTypeId).HasColumnName(@"EventOccupationTypeId").HasColumnType("int").IsOptional();
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("date").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("date").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsTraineeLearnerApprentice).HasColumnName(@"IsTraineeLearnerApprentice").HasColumnType("bit").IsOptional();
            Property(x => x.IsSkilled).HasColumnName(@"isSkilled").HasColumnType("bit").IsOptional();
            Property(x => x.YearsInIndustry).HasColumnName(@"YearsInIndustry").HasColumnType("int").IsOptional();
            Property(x => x.YearsInPresentOccupation).HasColumnName(@"YearsInPresentOccupation").HasColumnType("int").IsOptional();
            Property(x => x.PatersonGradingId).HasColumnName(@"PatersonGradingId").HasColumnType("int").IsOptional();
            Property(x => x.RmaEmployeeRefNum).HasColumnName(@"RMAEmployeeRefNum").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EmployeeIndustryNumber).HasColumnName(@"EmployeeIndustryNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.DesignationTypeId).HasColumnName(@"DesignationTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.EventOccupationType).WithMany(b => b.PersonEmployments_EventOccupationTypeId).HasForeignKey(c => c.EventOccupationTypeId).WillCascadeOnDelete(false); // FK_PersonEmployment_EventOccupationType
            HasOptional(a => a.OccupationType).WithMany(b => b.PersonEmployments_OccupationTypeId).HasForeignKey(c => c.OccupationTypeId).WillCascadeOnDelete(false); // FK_PersonEmployment_OccupationType
            HasRequired(a => a.Company).WithMany(b => b.PersonEmployments).HasForeignKey(c => c.EmployerRolePlayerId).WillCascadeOnDelete(false); // FK_PersonEmployment_Company
            HasRequired(a => a.Person).WithMany(b => b.PersonEmployments).HasForeignKey(c => c.EmployeeRolePlayerId).WillCascadeOnDelete(false); // FK_PersonEmployment_Person
        }
    }

}
