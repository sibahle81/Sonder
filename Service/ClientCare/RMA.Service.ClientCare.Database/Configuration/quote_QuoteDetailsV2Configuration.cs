//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class quote_QuoteDetailsV2Configuration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<quote_QuoteDetailsV2>
    {
        public quote_QuoteDetailsV2Configuration()
            : this("quote")
        {
        }

        public quote_QuoteDetailsV2Configuration(string schema)
        {
            ToTable("QuoteDetails_V2", schema);
            HasKey(x => x.QuoteDetailId);

            Property(x => x.QuoteDetailId).HasColumnName(@"QuoteDetailId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.QuoteId).HasColumnName(@"QuoteId").HasColumnType("int").IsRequired();
            Property(x => x.ProductOptionId).HasColumnName(@"ProductOptionId").HasColumnType("int").IsRequired();
            Property(x => x.CategoryInsured).HasColumnName(@"CategoryInsuredId").HasColumnType("int").IsRequired();
            Property(x => x.IndustryRate).HasColumnName(@"IndustryRate").HasColumnType("decimal").IsOptional().HasPrecision(38,10);
            Property(x => x.AverageNumberOfEmployees).HasColumnName(@"AverageNumberOfEmployees").HasColumnType("int").IsRequired();
            Property(x => x.AverageEmployeeEarnings).HasColumnName(@"AverageEmployeeEarnings").HasColumnType("decimal").IsOptional().HasPrecision(38,10);
            Property(x => x.Premium).HasColumnName(@"Premium").HasColumnType("decimal").IsOptional().HasPrecision(38,10);
            Property(x => x.ParentChildSplitPercentage).HasColumnName(@"ParentChildSplitPercentage").HasColumnType("decimal").IsOptional().HasPrecision(18,4);
            Property(x => x.LiveInAllowance).HasColumnName(@"LiveInAllowance").HasColumnType("decimal").IsOptional().HasPrecision(18,4);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.QuoteV2).WithMany(b => b.QuoteDetailsV2).HasForeignKey(c => c.QuoteId).WillCascadeOnDelete(false); // FK_QuoteDetails_V2_Quote_V2
        }
    }

}
