//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class client_DeclarationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<client_Declaration>
    {
        public client_DeclarationConfiguration()
            : this("client")
        {
        }

        public client_DeclarationConfiguration(string schema)
        {
            ToTable("Declaration", schema);
            HasKey(x => x.DeclarationId);

            Property(x => x.DeclarationId).HasColumnName(@"DeclarationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DeclarationStatus).HasColumnName(@"DeclarationStatusId").HasColumnType("int").IsRequired();
            Property(x => x.DeclarationType).HasColumnName(@"DeclarationTypeId").HasColumnType("int").IsRequired();
            Property(x => x.DeclarationRenewalStatus).HasColumnName(@"DeclarationRenewalStatusId").HasColumnType("int").IsRequired();
            Property(x => x.RolePlayerId).HasColumnName(@"RolePlayerId").HasColumnType("int").IsRequired();
            Property(x => x.DeclarationYear).HasColumnName(@"DeclarationYear").HasColumnType("int").IsRequired();
            Property(x => x.ProductOptionId).HasColumnName(@"ProductOptionId").HasColumnType("int").IsOptional();
            Property(x => x.AverageEmployeeCount).HasColumnName(@"AverageEmployeeCount").HasColumnType("int").IsOptional();
            Property(x => x.AverageEarnings).HasColumnName(@"AverageEarnings").HasColumnType("decimal").IsOptional().HasPrecision(18,0);
            Property(x => x.PenaltyPercentage).HasColumnName(@"PenaltyPercentage").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Rate).HasColumnName(@"Rate").HasColumnType("decimal").IsOptional().HasPrecision(18,4);
            Property(x => x.Premium).HasColumnName(@"Premium").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.PenaltyRate).HasColumnName(@"PenaltyRate").HasColumnType("decimal").IsOptional().HasPrecision(18,4);
            Property(x => x.PenaltyPremium).HasColumnName(@"PenaltyPremium").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Adjustment).HasColumnName(@"Adjustment").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.RolePlayer).WithMany(b => b.Declarations).HasForeignKey(c => c.RolePlayerId).WillCascadeOnDelete(false); // FK_Declaration_RolePlayer
        }
    }

}
