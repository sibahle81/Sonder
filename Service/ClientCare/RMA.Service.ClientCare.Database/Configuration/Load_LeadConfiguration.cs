//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class Load_LeadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Load_Lead>
    {
        public Load_LeadConfiguration()
            : this("Load")
        {
        }

        public Load_LeadConfiguration(string schema)
        {
            ToTable("Leads", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FileIdentifier).HasColumnName(@"FileIdentifier").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.LeadSource).HasColumnName(@"LeadSource").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.MemberName).HasColumnName(@"MemberName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.ClientType).HasColumnName(@"ClientType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CommunicationType).HasColumnName(@"CommunicationType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IsPreferredCommunication).HasColumnName(@"IsPreferredCommunication").HasColumnType("bit").IsOptional();
            Property(x => x.ContactName).HasColumnName(@"ContactName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Contact).HasColumnName(@"Contact").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.AddressType).HasColumnName(@"AddressType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.AddressLine1).HasColumnName(@"AddressLine1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.AddressLine2).HasColumnName(@"AddressLine2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCode).HasColumnName(@"PostalCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Province).HasColumnName(@"Province").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.NoteText).HasColumnName(@"NoteText").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IndustryClass).HasColumnName(@"IndustryClass").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IndustryType).HasColumnName(@"IndustryType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RegistrationType).HasColumnName(@"RegistrationType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CompanyRegNo).HasColumnName(@"CompanyRegNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CfReferenceNo).HasColumnName(@"CFReferenceNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CfRegistrationNo).HasColumnName(@"CFRegistrationNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdType).HasColumnName(@"IDType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdNumber).HasColumnName(@"IDNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ExcelRowNumber).HasColumnName(@"ExcelRowNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.IsExisting).HasColumnName(@"IsExisting").HasColumnType("bit").IsOptional();
            Property(x => x.UploadVersion).HasColumnName(@"UploadVersion").HasColumnType("int").IsOptional();
            Property(x => x.UploadVersionCounter).HasColumnName(@"UploadVersionCounter").HasColumnType("int").IsOptional();
        }
    }

}
