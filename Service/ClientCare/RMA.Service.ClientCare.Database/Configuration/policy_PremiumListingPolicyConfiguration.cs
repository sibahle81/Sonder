//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class policy_PremiumListingPolicyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<policy_PremiumListingPolicy>
    {
        public policy_PremiumListingPolicyConfiguration()
            : this("policy")
        {
        }

        public policy_PremiumListingPolicyConfiguration(string schema)
        {
            ToTable("PremiumListingPolicy", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FileIdentifier).HasColumnName(@"FileIdentifier").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.AccountHolder).HasColumnName(@"AccountHolder").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PolicyOwnerId).HasColumnName(@"PolicyOwnerId").HasColumnType("int").IsOptional();
            Property(x => x.CompanyName).HasColumnName(@"CompanyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.PolicyNumber).HasColumnName(@"PolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.PolicyInceptionDate).HasColumnName(@"PolicyInceptionDate").HasColumnType("date").IsOptional();
            Property(x => x.CommissionPercentage).HasColumnName(@"CommissionPercentage").HasColumnType("float").IsOptional();
            Property(x => x.AdminPercentage).HasColumnName(@"AdminPercentage").HasColumnType("float").IsOptional();
            Property(x => x.ProductOptionId).HasColumnName(@"ProductOptionId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitId).HasColumnName(@"BenefitId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitName).HasColumnName(@"BenefitName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.CoverMemberType).HasColumnName(@"CoverMemberTypeId").HasColumnType("int").IsOptional();
            Property(x => x.PaymentFrequency).HasColumnName(@"PaymentFrequencyId").HasColumnType("int").IsOptional();
            Property(x => x.Premium).HasColumnName(@"Premium").HasColumnType("float").IsOptional();
            Property(x => x.BenefitAmount).HasColumnName(@"BenefitAmount").HasColumnType("float").IsOptional();
            Property(x => x.CapCoverLessFive).HasColumnName(@"CapCoverLessFive").HasColumnType("float").IsOptional();
            Property(x => x.CapCoverLessThirteen).HasColumnName(@"CapCoverLessThirteen").HasColumnType("float").IsOptional();
            Property(x => x.CapCoverOverThirteen).HasColumnName(@"CapCoverOverThirteen").HasColumnType("float").IsOptional();
            Property(x => x.MinimumAge).HasColumnName(@"MinimumAge").HasColumnType("int").IsOptional();
            Property(x => x.MaximumAge).HasColumnName(@"MaximumAge").HasColumnType("int").IsOptional();
            Property(x => x.MaxPersons).HasColumnName(@"MaxPersons").HasColumnType("int").IsOptional();
            Property(x => x.MaxSpouses).HasColumnName(@"MaxSpouses").HasColumnType("int").IsOptional();
            Property(x => x.MaxChildren).HasColumnName(@"MaxChildren").HasColumnType("int").IsOptional();
            Property(x => x.IsGroup).HasColumnName(@"IsGroup").HasColumnType("bit").IsOptional();
        }
    }

}
