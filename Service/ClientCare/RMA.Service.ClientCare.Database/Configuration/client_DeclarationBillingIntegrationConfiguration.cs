//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class client_DeclarationBillingIntegrationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<client_DeclarationBillingIntegration>
    {
        public client_DeclarationBillingIntegrationConfiguration()
            : this("client")
        {
        }

        public client_DeclarationBillingIntegrationConfiguration(string schema)
        {
            ToTable("DeclarationBillingIntegration", schema);
            HasKey(x => x.DeclarationBillingIntegrationId);

            Property(x => x.DeclarationBillingIntegrationId).HasColumnName(@"DeclarationBillingIntegrationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DeclarationId).HasColumnName(@"DeclarationId").HasColumnType("int").IsRequired();
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.DeclarationBillingIntegrationStatus).HasColumnName(@"DeclarationBillingIntegrationStatusId").HasColumnType("int").IsRequired();
            Property(x => x.DeclarationBillingIntegrationType).HasColumnName(@"DeclarationBillingIntegrationTypeId").HasColumnType("int").IsRequired();
            Property(x => x.BillingProcessedDate).HasColumnName(@"BillingProcessedDate").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Declaration).WithMany(b => b.DeclarationBillingIntegrations).HasForeignKey(c => c.DeclarationId).WillCascadeOnDelete(false); // FK_Declaration_DeclarationBillingIntegration
        }
    }

}
