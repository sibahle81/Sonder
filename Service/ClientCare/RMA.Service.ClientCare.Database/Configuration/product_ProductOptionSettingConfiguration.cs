//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class product_ProductOptionSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<product_ProductOptionSetting>
    {
        public product_ProductOptionSettingConfiguration()
            : this("product")
        {
        }

        public product_ProductOptionSettingConfiguration(string schema)
        {
            ToTable("ProductOptionSetting", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);            
			Property(x => x.ProductOptionId).HasColumnName(@"ProductOptionId").HasColumnType("int").IsRequired();           
			Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
			Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
			Property(x => x.SettingTypeId).HasColumnName(@"SettingTypeId").HasColumnType("int").IsRequired();
			Property(x => x.SettingCategoryId).HasColumnName(@"SettingCategoryId").HasColumnType("int").IsRequired();
			Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);			
			Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.ProductOption).WithMany(b => b.ProductOptionSettings).HasForeignKey(c => c.ProductOptionId).WillCascadeOnDelete(false); // FK_ProductOptionSetting_ProductOption
        }
    }

}