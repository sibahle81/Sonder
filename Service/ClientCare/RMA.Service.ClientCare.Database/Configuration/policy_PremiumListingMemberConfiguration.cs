//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class policy_PremiumListingMemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<policy_PremiumListingMember>
    {
        public policy_PremiumListingMemberConfiguration()
            : this("policy")
        {
        }

        public policy_PremiumListingMemberConfiguration(string schema)
        {
            ToTable("PremiumListingMember", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FileIdentifier).HasColumnName(@"FileIdentifier").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PolicyNumber).HasColumnName(@"PolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RolePlayerId).HasColumnName(@"RolePlayerId").HasColumnType("int").IsOptional();
            Property(x => x.ClientReference).HasColumnName(@"ClientReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Surname).HasColumnName(@"Surname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.MemberName).HasColumnName(@"MemberName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.IdType).HasColumnName(@"IdTypeId").HasColumnType("int").IsOptional();
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("date").IsOptional();
            Property(x => x.TestDate).HasColumnName(@"TestDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(16);
            Property(x => x.Age).HasColumnName(@"Age").HasColumnType("int").IsOptional();
            Property(x => x.RolePlayerExists).HasColumnName(@"RolePlayerExists").HasColumnType("bit").IsOptional();
            Property(x => x.ParentPolicyId).HasColumnName(@"ParentPolicyId").HasColumnType("int").IsOptional();
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.JoinDate).HasColumnName(@"JoinDate").HasColumnType("date").IsOptional();
            Property(x => x.BenefitId).HasColumnName(@"BenefitId").HasColumnType("int").IsOptional();
            Property(x => x.BenefitName).HasColumnName(@"BenefitName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.MainMemberId).HasColumnName(@"MainMemberId").HasColumnType("int").IsOptional();
            Property(x => x.MainMember).HasColumnName(@"MainMember").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.DateJoined).HasColumnName(@"DateJoined").HasColumnType("date").IsOptional();
            Property(x => x.CoverMemberType).HasColumnName(@"CoverMemberTypeId").HasColumnType("int").IsOptional();
            Property(x => x.PolicyPremium).HasColumnName(@"PolicyPremium").HasColumnType("float").IsOptional();
            Property(x => x.Multiplier).HasColumnName(@"Multiplier").HasColumnType("int").IsOptional();
            Property(x => x.CurrentCoverAmount).HasColumnName(@"CurrentCoverAmount").HasColumnType("float").IsOptional();
            Property(x => x.PolicyExists).HasColumnName(@"PolicyExists").HasColumnType("bit").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsOptional();
            Property(x => x.Address1).HasColumnName(@"Address1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Province).HasColumnName(@"Province").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCode).HasColumnName(@"PostalCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.PostalAddress1).HasColumnName(@"PostalAddress1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalAddress2).HasColumnName(@"PostalAddress2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCity).HasColumnName(@"PostalCity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalProvince).HasColumnName(@"PostalProvince").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalCountry).HasColumnName(@"PostalCountry").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.PostalPostCode).HasColumnName(@"PostalPostCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8);
            Property(x => x.TelNo).HasColumnName(@"TelNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.CelNo).HasColumnName(@"CelNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PreferredCommunication).HasColumnName(@"PreferredCommunication").HasColumnType("int").IsOptional();
            Property(x => x.PreviousInsurer).HasColumnName(@"PreviousInsurer").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PreviousInsurerStartDate).HasColumnName(@"PreviousInsurerStartDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PreviousInsurerEndDate).HasColumnName(@"PreviousInsurerEndDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.PreviousInsurerPolicyNumber).HasColumnName(@"PreviousInsurerPolicyNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
        }
    }

}
