//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClientCare.Database.Entities;

namespace RMA.Service.ClientCare.Database.Configuration
{
    public class broker_RepresentativeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<broker_Representative>
    {
        public broker_RepresentativeConfiguration()
            : this("broker")
        {
        }

        public broker_RepresentativeConfiguration(string schema)
        {
            ToTable("Representative", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ContactNumber).HasColumnName(@"ContactNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IdType).HasColumnName(@"IdTypeId").HasColumnType("int").IsOptional();
            Property(x => x.RepType).HasColumnName(@"RepTypeId").HasColumnType("int").IsOptional();
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Initials).HasColumnName(@"Initials").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SurnameOrCompanyName).HasColumnName(@"SurnameOrCompanyName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryOfRegistration).HasColumnName(@"CountryOfRegistration").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(150);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("date").IsOptional();
            Property(x => x.MedicalAccreditationNo).HasColumnName(@"MedicalAccreditationNo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.PhysicalAddressLine1).HasColumnName(@"PhysicalAddressLine1").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PhysicalAddressLine2).HasColumnName(@"PhysicalAddressLine2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PhysicalAddressCity).HasColumnName(@"PhysicalAddressCity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.PhysicalAddressCode).HasColumnName(@"PhysicalAddressCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(6);
            Property(x => x.DateOfAppointment).HasColumnName(@"DateOfAppointment").HasColumnType("date").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.PaymentMethod).HasColumnName(@"PaymentMethodId").HasColumnType("int").IsOptional();
            Property(x => x.PaymentFrequency).HasColumnName(@"PaymentFrequencyId").HasColumnType("int").IsOptional();
        }
    }

}
