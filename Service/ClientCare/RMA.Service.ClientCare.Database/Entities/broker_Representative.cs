//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.ClientCare.Database.Entities
{
    public partial class broker_Representative : IAuditableEntity, ISoftDeleteEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public string ContactNumber { get; set; } // ContactNumber (length: 50)
        public string Email { get; set; } // Email (length: 150)
        public string IdNumber { get; set; } // IdNumber (length: 50)
        public IdTypeEnum? IdType { get; set; } // IdTypeId
        public RepTypeEnum? RepType { get; set; } // RepTypeId
        public string Title { get; set; } // Title (length: 50)
        public string Initials { get; set; } // Initials (length: 10)
        public string FirstName { get; set; } // FirstName (length: 255)
        public string SurnameOrCompanyName { get; set; } // SurnameOrCompanyName (length: 255)
        public string CountryOfRegistration { get; set; } // CountryOfRegistration (length: 150)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public string MedicalAccreditationNo { get; set; } // MedicalAccreditationNo (length: 100)
        public string PhysicalAddressLine1 { get; set; } // PhysicalAddressLine1 (length: 255)
        public string PhysicalAddressLine2 { get; set; } // PhysicalAddressLine2 (length: 255)
        public string PhysicalAddressCity { get; set; } // PhysicalAddressCity (length: 100)
        public string PhysicalAddressCode { get; set; } // PhysicalAddressCode (length: 6)
        public System.DateTime? DateOfAppointment { get; set; } // DateOfAppointment
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public PaymentMethodEnum? PaymentMethod { get; set; } // PaymentMethodId
        public PaymentFrequencyEnum? PaymentFrequency { get; set; } // PaymentFrequencyId

        // Reverse navigation

        /// <summary>
        /// Child broker_BrokerageRepresentatives where [BrokerageRepresentative].[JuristicRepId] point to this entity (FK_BrokerageRepresentative_JuristicRepresentative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageRepresentative> BrokerageJuristicRepresentatives { get; set; } // BrokerageRepresentative.FK_BrokerageRepresentative_JuristicRepresentative
        /// <summary>
        /// Child broker_BrokerageRepresentatives where [BrokerageRepresentative].[RepresentativeId] point to this entity (FK_BrokerageRepresentative_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageRepresentative> BrokerageRepresentatives { get; set; } // BrokerageRepresentative.FK_BrokerageRepresentative_Representative
        /// <summary>
        /// Child broker_RepQualifications where [RepQualification].[RepresentativeId] point to this entity (FK_RepQualification_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepQualification> RepQualifications { get; set; } // RepQualification.FK_RepQualification_Representative
        /// <summary>
        /// Child broker_RepresentativeBankAccounts where [RepresentativeBankAccount].[RepresentativeId] point to this entity (FK_RepresentativeBankAccount_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepresentativeBankAccount> RepresentativeBankAccounts { get; set; } // RepresentativeBankAccount.FK_RepresentativeBankAccount_Representative
        /// <summary>
        /// Child broker_RepresentativeChecks where [RepresentativeChecks].[RepresentativeId] point to this entity (FK_RepresentativeChecks_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepresentativeCheck> RepresentativeChecks { get; set; } // RepresentativeChecks.FK_RepresentativeChecks_Representative
        /// <summary>
        /// Child broker_RepresentativeFscaLicenseCategories where [RepresentativeFscaLicenseCategory].[RepresentativeId] point to this entity (FK_RepresentativeFscaLicenseCategory_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepresentativeFscaLicenseCategory> RepresentativeFscaLicenseCategories { get; set; } // RepresentativeFscaLicenseCategory.FK_RepresentativeFscaLicenseCategory_Representative
        /// <summary>
        /// Child broker_RepresentativeNotes where [RepresentativeNote].[RepresentativeId] point to this entity (FK_RepresentativeNote_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepresentativeNote> RepresentativeNotes { get; set; } // RepresentativeNote.FK_RepresentativeNote_Representative
        /// <summary>
        /// Child client_RolePlayers where [RolePlayer].[RepresentativeId] point to this entity (FK_Representative_RolePlayer)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<client_RolePlayer> RolePlayers { get; set; } // RolePlayer.FK_Representative_RolePlayer
        /// <summary>
        /// Child policy_Policies where [Policy].[JuristicRepresentativeId] point to this entity (FK_Policy_Representative1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_Policy> Policies_JuristicRepresentativeId { get; set; } // Policy.FK_Policy_Representative1
        /// <summary>
        /// Child policy_Policies where [Policy].[RepresentativeId] point to this entity (FK_Policy_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_Policy> Policies_RepresentativeId { get; set; } // Policy.FK_Policy_Representative
        /// <summary>
        /// Child policy_PolicyBrokers where [PolicyBroker].[JuristicRepId] point to this entity (FK_PolicyBroker_Representative1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyBroker> PolicyBrokers_JuristicRepId { get; set; } // PolicyBroker.FK_PolicyBroker_Representative1
        /// <summary>
        /// Child policy_PolicyBrokers where [PolicyBroker].[RepId] point to this entity (FK_PolicyBroker_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyBroker> PolicyBrokers_RepId { get; set; } // PolicyBroker.FK_PolicyBroker_Representative
        /// <summary>
        /// Child policy_PolicyMovements where [PolicyMovements].[DestinationRepId] point to this entity (FK_PolicyMovements_Representative1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyMovement> PolicyMovements_DestinationRepId { get; set; } // PolicyMovements.FK_PolicyMovements_Representative1
        /// <summary>
        /// Child policy_PolicyMovements where [PolicyMovements].[SourceRepId] point to this entity (FK_PolicyMovements_Representative)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyMovement> PolicyMovements_SourceRepId { get; set; } // PolicyMovements.FK_PolicyMovements_Representative

        public broker_Representative()
        {
            BrokerageJuristicRepresentatives = new System.Collections.Generic.List<broker_BrokerageRepresentative>();
            BrokerageRepresentatives = new System.Collections.Generic.List<broker_BrokerageRepresentative>();
            Policies_JuristicRepresentativeId = new System.Collections.Generic.List<policy_Policy>();
            Policies_RepresentativeId = new System.Collections.Generic.List<policy_Policy>();
            PolicyBrokers_JuristicRepId = new System.Collections.Generic.List<policy_PolicyBroker>();
            PolicyBrokers_RepId = new System.Collections.Generic.List<policy_PolicyBroker>();
            PolicyMovements_DestinationRepId = new System.Collections.Generic.List<policy_PolicyMovement>();
            PolicyMovements_SourceRepId = new System.Collections.Generic.List<policy_PolicyMovement>();
            RepQualifications = new System.Collections.Generic.List<broker_RepQualification>();
            RepresentativeBankAccounts = new System.Collections.Generic.List<broker_RepresentativeBankAccount>();
            RepresentativeChecks = new System.Collections.Generic.List<broker_RepresentativeCheck>();
            RepresentativeFscaLicenseCategories = new System.Collections.Generic.List<broker_RepresentativeFscaLicenseCategory>();
            RepresentativeNotes = new System.Collections.Generic.List<broker_RepresentativeNote>();
            RolePlayers = new System.Collections.Generic.List<client_RolePlayer>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
