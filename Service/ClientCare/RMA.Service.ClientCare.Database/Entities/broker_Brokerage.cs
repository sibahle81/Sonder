//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;

namespace RMA.Service.ClientCare.Database.Entities
{
    public partial class broker_Brokerage : IAuditableEntity, ISoftDeleteEntity, IEntityStatus
    {
        public int Id { get; set; } // Id (Primary key)
        public string Code { get; set; } // Code (length: 50)
        public string FspNumber { get; set; } // FSPNumber (length: 50)
        public string Name { get; set; } // Name (length: 255)
        public string TradeName { get; set; } // TradeName (length: 255)
        public string LegalCapacity { get; set; } // LegalCapacity (length: 255)
        public string RegNo { get; set; } // RegNo (length: 255)
        public string Status { get; set; } // Status (length: 255)
        public string CompanyType { get; set; } // CompanyType (length: 50)
        public string FaxNo { get; set; } // FaxNo (length: 20)
        public string TelNo { get; set; } // TelNo (length: 20)
        public string FspWebsite { get; set; } // FspWebsite (length: 255)
        public string FinYearEnd { get; set; } // FinYearEnd (length: 50)
        public string MedicalAccreditationNo { get; set; } // MedicalAccreditationNo (length: 255)
        public System.DateTime? StartDate { get; set; } // StartDate
        public System.DateTime? EndDate { get; set; } // EndDate
        public PaymentMethodEnum PaymentMethod { get; set; } // PaymentMethodId
        public PaymentFrequencyEnum PaymentFrequency { get; set; } // PaymentFrequencyId
        public bool IsActive { get; set; } // IsActive
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public bool IsAuthorised { get; set; } // IsAuthorised
        public decimal? OnboardAdminFee { get; set; } // OnboardAdminFee
        public decimal? OnboardPercentageShare { get; set; } // OnboardPercentageShare
        public BrokerageTypeEnum BrokerageType { get; set; } // BrokerageTypeId
        public string VatRegistrationNumber { get; set; } // VatRegistrationNumber (length: 100)
        public bool FicaVerified { get; set; } // FicaVerified
        public string FicaRiskRating { get; set; } // FicaRiskRating (length: 100)

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) broker_Brokerage pointed by [BrokerageBranch].[BrokerageId] (FK_BrokerageBranch_Brokerage)
        /// </summary>
        public virtual broker_BrokerageBranch BrokerageBranch { get; set; } // BrokerageBranch.FK_BrokerageBranch_Brokerage
        /// <summary>
        /// Parent (One-to-One) broker_Brokerage pointed by [BrokerPartnership].[BrokerageId] (FK_BrokerPartnership_Brokerage)
        /// </summary>
        public virtual broker_BrokerPartnership BrokerPartnership { get; set; } // BrokerPartnership.FK_BrokerPartnership_Brokerage
        /// <summary>
        /// Child broker_BrokerageAddresses where [BrokerageAddress].[BrokerageId] point to this entity (FK_BrokerageAddress_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageAddress> BrokerageAddresses { get; set; } // BrokerageAddress.FK_BrokerageAddress_Brokerage
        /// <summary>
        /// Child broker_BrokerageBankAccounts where [BrokerageBankAccount].[BrokerageId] point to this entity (FK_BrokerageBankAccount_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageBankAccount> BrokerageBankAccounts { get; set; } // BrokerageBankAccount.FK_BrokerageBankAccount_Brokerage
        /// <summary>
        /// Child broker_BrokerageBrokerConsultants where [BrokerageBrokerConsultant].[BrokerageId] point to this entity (FK_BrokerageBrokerConsultant_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageBrokerConsultant> BrokerageBrokerConsultants { get; set; } // BrokerageBrokerConsultant.FK_BrokerageBrokerConsultant_Brokerage
        /// <summary>
        /// Child broker_BrokerageChecks where [BrokerageChecks].[BrokerageId] point to this entity (FK_BrokerageChecks_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageCheck> BrokerageChecks { get; set; } // BrokerageChecks.FK_BrokerageChecks_Brokerage
        /// <summary>
        /// Child broker_BrokerageContacts where [BrokerageContact].[BrokerageId] point to this entity (FK_BrokerageContact_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageContact> BrokerageContacts { get; set; } // BrokerageContact.FK_BrokerageContact_Brokerage
        /// <summary>
        /// Child broker_BrokerageFscaLicenseCategories where [BrokerageFscaLicenseCategory].[BrokerageId] point to this entity (FK_BrokerageFscaLicenseCategory_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageFscaLicenseCategory> BrokerageFscaLicenseCategories { get; set; } // BrokerageFscaLicenseCategory.FK_BrokerageFscaLicenseCategory_Brokerage
        /// <summary>
        /// Child broker_BrokerageNotes where [BrokerageNote].[BrokerageId] point to this entity (FK_BrokerageNote_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageNote> BrokerageNotes { get; set; } // BrokerageNote.FK_BrokerageNote_Brokerage
        /// <summary>
        /// Child broker_BrokerageProductOptions where [BrokerageProductOption].[BrokerageId] point to this entity (FK_BrokerageProductOption_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageProductOption> BrokerageProductOptions { get; set; } // BrokerageProductOption.FK_BrokerageProductOption_Brokerage
        /// <summary>
        /// Child broker_BrokerageRepresentatives where [BrokerageRepresentative].[BrokerageId] point to this entity (FK_BrokerageAgent_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_BrokerageRepresentative> BrokerageRepresentatives { get; set; } // BrokerageRepresentative.FK_BrokerageAgent_Brokerage
        /// <summary>
        /// Child broker_RepresentativeFscaLicenseCategories where [RepresentativeFscaLicenseCategory].[BrokerageId] point to this entity (FK_RepresentativeFscaLicenseCategory_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<broker_RepresentativeFscaLicenseCategory> RepresentativeFscaLicenseCategories { get; set; } // RepresentativeFscaLicenseCategory.FK_RepresentativeFscaLicenseCategory_Brokerage
        /// <summary>
        /// Child client_OrganisationOptionItemValues where [OrganisationOptionItemValue].[BrokerageId] point to this entity (OrgOVBrokerage_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<client_OrganisationOptionItemValue> OrganisationOptionItemValues { get; set; } // OrganisationOptionItemValue.OrgOVBrokerage_Brokerage
        /// <summary>
        /// Child policy_Policies where [Policy].[BrokerageId] point to this entity (FK_Policy_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_Policy> Policies { get; set; } // Policy.FK_Policy_Brokerage
        /// <summary>
        /// Child policy_PolicyBinders where [PolicyBinder].[BinderId] point to this entity (Brokerage_PolicyBinder)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyBinder> PolicyBinders { get; set; } // PolicyBinder.Brokerage_PolicyBinder
        /// <summary>
        /// Child policy_PolicyBrokers where [PolicyBroker].[BrokerageId] point to this entity (FK_PolicyBroker_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyBroker> PolicyBrokers { get; set; } // PolicyBroker.FK_PolicyBroker_Brokerage
        /// <summary>
        /// Child policy_PolicyMovements where [PolicyMovements].[DestinationBrokerageId] point to this entity (FK_PolicyMovements_Brokerage1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyMovement> PolicyMovements_DestinationBrokerageId { get; set; } // PolicyMovements.FK_PolicyMovements_Brokerage1
        /// <summary>
        /// Child policy_PolicyMovements where [PolicyMovements].[SourceBrokerageId] point to this entity (FK_PolicyMovements_Brokerage)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<policy_PolicyMovement> PolicyMovements_SourceBrokerageId { get; set; } // PolicyMovements.FK_PolicyMovements_Brokerage

        public broker_Brokerage()
        {
            IsAuthorised = false;
            BrokerageType = (BrokerageTypeEnum) 1;
            FicaVerified = false;
            BrokerageAddresses = new System.Collections.Generic.List<broker_BrokerageAddress>();
            BrokerageBankAccounts = new System.Collections.Generic.List<broker_BrokerageBankAccount>();
            BrokerageBrokerConsultants = new System.Collections.Generic.List<broker_BrokerageBrokerConsultant>();
            BrokerageChecks = new System.Collections.Generic.List<broker_BrokerageCheck>();
            BrokerageContacts = new System.Collections.Generic.List<broker_BrokerageContact>();
            BrokerageFscaLicenseCategories = new System.Collections.Generic.List<broker_BrokerageFscaLicenseCategory>();
            BrokerageNotes = new System.Collections.Generic.List<broker_BrokerageNote>();
            BrokerageProductOptions = new System.Collections.Generic.List<broker_BrokerageProductOption>();
            BrokerageRepresentatives = new System.Collections.Generic.List<broker_BrokerageRepresentative>();
            OrganisationOptionItemValues = new System.Collections.Generic.List<client_OrganisationOptionItemValue>();
            Policies = new System.Collections.Generic.List<policy_Policy>();
            PolicyBinders = new System.Collections.Generic.List<policy_PolicyBinder>();
            PolicyBrokers = new System.Collections.Generic.List<policy_PolicyBroker>();
            PolicyMovements_DestinationBrokerageId = new System.Collections.Generic.List<policy_PolicyMovement>();
            PolicyMovements_SourceBrokerageId = new System.Collections.Generic.List<policy_PolicyMovement>();
            RepresentativeFscaLicenseCategories = new System.Collections.Generic.List<broker_RepresentativeFscaLicenseCategory>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
