//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimRequirementConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ClaimRequirement>
    {
        public claim_ClaimRequirementConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimRequirementConfiguration(string schema)
        {
            ToTable("ClaimRequirement", schema);
            HasKey(x => x.ClaimRequirementId);

            Property(x => x.ClaimRequirementId).HasColumnName(@"ClaimRequirementId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired();
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired();
            Property(x => x.WorkflowNotificationId).HasColumnName(@"WorkflowNotificationId").HasColumnType("int").IsOptional();
            Property(x => x.CategoryId).HasColumnName(@"CategoryId").HasColumnType("int").IsRequired();
            Property(x => x.IsOptional).HasColumnName(@"IsOptional").HasColumnType("bit").IsRequired();
            Property(x => x.Instruction).HasColumnName(@"Instruction").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.Result).HasColumnName(@"Result").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.DateOpened).HasColumnName(@"DateOpened").HasColumnType("datetime").IsRequired();
            Property(x => x.DateClosed).HasColumnName(@"DateClosed").HasColumnType("datetime").IsOptional();
            Property(x => x.IsMemberVisible).HasColumnName(@"IsMemberVisible").HasColumnType("bit").IsRequired();
            Property(x => x.IsAssurerVisible).HasColumnName(@"IsAssurerVisible").HasColumnType("bit").IsRequired();
            Property(x => x.RequirementXml).HasColumnName(@"RequirementXML").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.IsManuallyAdded).HasColumnName(@"IsManuallyAdded").HasColumnType("bit").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"isActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"isDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Claim).WithMany(b => b.ClaimRequirements).HasForeignKey(c => c.ClaimId).WillCascadeOnDelete(false); // FK_ClaimRequirement_Claim
            HasRequired(a => a.ClaimRequirementCategory).WithMany(b => b.ClaimRequirements).HasForeignKey(c => c.CategoryId).WillCascadeOnDelete(false); // FK_ClaimRequirement_ClaimRequirementCategory
            HasRequired(a => a.PersonEvent).WithMany(b => b.ClaimRequirements).HasForeignKey(c => c.PersonEventId).WillCascadeOnDelete(false); // FK_ClaimRequirement_PersonEvent
        }
    }

}
