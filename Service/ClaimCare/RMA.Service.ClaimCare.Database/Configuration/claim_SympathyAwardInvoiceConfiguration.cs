//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_SympathyAwardInvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_SympathyAwardInvoice>
    {
        public claim_SympathyAwardInvoiceConfiguration()
            : this("claim")
        {
        }

        public claim_SympathyAwardInvoiceConfiguration(string schema)
        {
            ToTable("SympathyAwardInvoice", schema);
            HasKey(x => x.ClaimInvoiceId);

            Property(x => x.ClaimInvoiceId).HasColumnName(@"ClaimInvoiceId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PayeeTypeId).HasColumnName(@"PayeeTypeId").HasColumnType("int").IsRequired();
            Property(x => x.Payee).HasColumnName(@"Payee").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SupplierInvoiceNo).HasColumnName(@"SupplierInvoiceNo").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ServiceDate).HasColumnName(@"ServiceDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ProviderType).HasColumnName(@"ProviderType").HasColumnType("int").IsRequired();
            Property(x => x.ProviderName).HasColumnName(@"ProviderName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ServiceType).HasColumnName(@"ServiceType").HasColumnType("int").IsRequired();
            Property(x => x.ReferenceNumber).HasColumnName(@"ReferenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.Claim).WithMany(b => b.SympathyAwardInvoices).HasForeignKey(c => c.ClaimId).WillCascadeOnDelete(false); // FK_SympathyAwardInvoice_Claim
            HasRequired(a => a.ClaimInvoice).WithOptional(b => b.SympathyAwardInvoice).WillCascadeOnDelete(false); // FK_SympathyAward_ClaimItem
        }
    }

}
