//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_InjuryEstimateBasisCostDaysPdExtensionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_InjuryEstimateBasisCostDaysPdExtension>
    {
        public claim_InjuryEstimateBasisCostDaysPdExtensionConfiguration()
            : this("claim")
        {
        }

        public claim_InjuryEstimateBasisCostDaysPdExtensionConfiguration(string schema)
        {
            ToTable("InjuryEstimateBasisCostDaysPDExtensions", schema);
            HasKey(x => x.InjuryEstimateBasisCostDaysPdExtensionsId);

            Property(x => x.InjuryEstimateBasisCostDaysPdExtensionsId).HasColumnName(@"InjuryEstimateBasisCostDaysPDExtensionsId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired();
            Property(x => x.InjuryId).HasColumnName(@"InjuryID").HasColumnType("int").IsRequired();
            Property(x => x.LookupType).HasColumnName(@"LookupType").HasColumnType("int").IsRequired();
            Property(x => x.Minimum).HasColumnName(@"Minimum").HasColumnType("decimal").IsRequired().HasPrecision(10,2);
            Property(x => x.Maximum).HasColumnName(@"Maximum").HasColumnType("decimal").IsRequired().HasPrecision(10,2);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Average).HasColumnName(@"Average").HasColumnType("decimal").IsRequired().HasPrecision(10,2);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Injury).WithMany(b => b.InjuryEstimateBasisCostDaysPdExtensions).HasForeignKey(c => c.InjuryId).WillCascadeOnDelete(false); // FK_InjuryEstimateBasisCostDaysPDExtensions_Injury
            HasRequired(a => a.PersonEvent).WithMany(b => b.InjuryEstimateBasisCostDaysPdExtensions).HasForeignKey(c => c.PersonEventId).WillCascadeOnDelete(false); // FK_InjuryEstimateBasisCostDaysPDExtensions_PersonEvent
        }
    }

}
