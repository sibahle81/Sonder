//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_Claim>
    {
        public claim_ClaimConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimConfiguration(string schema)
        {
            ToTable("Claim", schema);
            HasKey(x => x.ClaimId);

            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired();
            Property(x => x.PolicyId).HasColumnName(@"PolicyId").HasColumnType("int").IsOptional();
            Property(x => x.WizardId).HasColumnName(@"WizardId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimReferenceNumber).HasColumnName(@"ClaimReferenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ClaimStatus).HasColumnName(@"ClaimStatusId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimLiabilityStatus).HasColumnName(@"ClaimLiabilityStatusId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimStatusChangeDate).HasColumnName(@"ClaimStatusChangeDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsCancelled).HasColumnName(@"IsCancelled").HasColumnType("bit").IsRequired();
            Property(x => x.ClaimCancellationReason).HasColumnName(@"ClaimCancellationReasonId").HasColumnType("int").IsOptional();
            Property(x => x.IsClosed).HasColumnName(@"IsClosed").HasColumnType("bit").IsRequired();
            Property(x => x.ClaimClosedReason).HasColumnName(@"ClaimClosedReasonId").HasColumnType("int").IsOptional();
            Property(x => x.AssignedToUserId).HasColumnName(@"AssignedToUserId").HasColumnType("int").IsOptional();
            Property(x => x.IsRuleOverridden).HasColumnName(@"IsRuleOverridden").HasColumnType("bit").IsOptional();
            Property(x => x.DisabilityPercentage).HasColumnName(@"DisabilityPercentage").HasColumnType("decimal").IsRequired().HasPrecision(5,2);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.UnderwriterId).HasColumnName(@"UnderwriterId").HasColumnType("int").IsOptional();
            Property(x => x.InvestigationRequired).HasColumnName(@"InvestigationRequired").HasColumnType("bit").IsRequired();
            Property(x => x.PdVerified).HasColumnName(@"PDVerified").HasColumnType("bit").IsRequired();
            Property(x => x.Caa).HasColumnName(@"CAA").HasColumnType("decimal").IsOptional().HasPrecision(12,4);
            Property(x => x.FamilyAllowance).HasColumnName(@"FamilyAllowance").HasColumnType("decimal").IsOptional().HasPrecision(12,4);
            Property(x => x.ClaimDeclineReason).HasColumnName(@"ClaimDeclineReasonId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.PersonEvent).WithMany(b => b.Claims).HasForeignKey(c => c.PersonEventId).WillCascadeOnDelete(false); // FK_Claim_PersonEvent
        }
    }

}
