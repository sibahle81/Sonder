//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimInvoiceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ClaimInvoice>
    {
        public claim_ClaimInvoiceConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimInvoiceConfiguration(string schema)
        {
            ToTable("ClaimInvoice", schema);
            HasKey(x => x.ClaimInvoiceId);

            Property(x => x.ClaimInvoiceId).HasColumnName(@"ClaimInvoiceId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimInvoiceType).HasColumnName(@"ClaimInvoiceTypeId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimBenefitId).HasColumnName(@"ClaimBenefitId").HasColumnType("int").IsRequired();
            Property(x => x.DateReceived).HasColumnName(@"DateReceived").HasColumnType("datetime").IsRequired();
            Property(x => x.DateSubmitted).HasColumnName(@"DateSubmitted").HasColumnType("datetime").IsOptional();
            Property(x => x.DateApproved).HasColumnName(@"DateApproved").HasColumnType("datetime").IsOptional();
            Property(x => x.InvoiceAmount).HasColumnName(@"InvoiceAmount").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.InvoiceVat).HasColumnName(@"InvoiceVat").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AuthorisedAmount).HasColumnName(@"AuthorisedAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AuthorisedVat).HasColumnName(@"AuthorisedVat").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.InvoiceDate).HasColumnName(@"InvoiceDate").HasColumnType("date").IsOptional();
            Property(x => x.ClaimInvoiceStatusId).HasColumnName(@"ClaimInvoiceStatusId").HasColumnType("int").IsRequired();
            Property(x => x.IsBankingApproved).HasColumnName(@"IsBankingApproved").HasColumnType("bit").IsOptional();
            Property(x => x.IsAuthorised).HasColumnName(@"IsAuthorised").HasColumnType("int").IsRequired();
            Property(x => x.ClaimInvoiceDecision).HasColumnName(@"ClaimInvoiceDecisionId").HasColumnType("int").IsOptional();
            Property(x => x.ExternalReferenceNumber).HasColumnName(@"ExternalReferenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.InternalReferenceNumber).HasColumnName(@"InternalReferenceNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ClaimInvoiceRepayReason).HasColumnName(@"ClaimInvoiceRepayReasonId").HasColumnType("int").IsOptional();
            Property(x => x.PayeeRolePlayerId).HasColumnName(@"PayeeRolePlayerId").HasColumnType("int").IsOptional();
            Property(x => x.PayeeRolePlayerBankAccountId).HasColumnName(@"PayeeRolePlayerBankAccountId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimEstimateId).HasColumnName(@"ClaimEstimateId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.ClaimBenefit).WithMany(b => b.ClaimInvoices).HasForeignKey(c => c.ClaimBenefitId).WillCascadeOnDelete(false); // FK_ClaimItem_ClaimBenefit
            HasRequired(a => a.ClaimInvoiceStatu).WithMany(b => b.ClaimInvoices).HasForeignKey(c => c.ClaimInvoiceStatusId).WillCascadeOnDelete(false); // FK_ClaimItem_InvoiceStatus
        }
    }

}
