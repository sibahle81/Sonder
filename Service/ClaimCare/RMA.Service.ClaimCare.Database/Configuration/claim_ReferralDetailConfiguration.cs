//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ReferralDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ReferralDetail>
    {
        public claim_ReferralDetailConfiguration()
            : this("claim")
        {
        }

        public claim_ReferralDetailConfiguration(string schema)
        {
            ToTable("ReferralDetail", schema);
            HasKey(x => x.ReferralDetailId);

            Property(x => x.ReferralDetailId).HasColumnName(@"ReferralDetailID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsRequired();
            Property(x => x.OwnerId).HasColumnName(@"OwnerID").HasColumnType("int").IsRequired();
            Property(x => x.ReferralQueryTypeId).HasColumnName(@"ReferralQueryTypeID").HasColumnType("int").IsRequired();
            Property(x => x.ReferralQuery).HasColumnName(@"ReferralQuery").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.QueryFeedBack).HasColumnName(@"QueryFeedBack").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.FeedbackDate).HasColumnName(@"FeedbackDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ReceivedDate).HasColumnName(@"ReceivedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ReferralRatingId).HasColumnName(@"ReferralRatingID").HasColumnType("int").IsOptional();
            Property(x => x.ReferrerUser).HasColumnName(@"ReferrerUser").HasColumnType("int").IsRequired();
            Property(x => x.WorkFlowNotificationId).HasColumnName(@"WorkFlowNotificationID").HasColumnType("int").IsOptional();
            Property(x => x.ReferralStatusId).HasColumnName(@"ReferralStatusID").HasColumnType("tinyint").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"isActive").HasColumnType("bit").IsRequired();
            Property(x => x.ContactCenterNotificationId).HasColumnName(@"ContactCenterNotificationID").HasColumnType("int").IsOptional();
            Property(x => x.ResolutionTypeId).HasColumnName(@"ResolutionTypeId").HasColumnType("int").IsOptional();
            Property(x => x.ContextualData).HasColumnName(@"ContextualData").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ReferredToUserName).HasColumnName(@"ReferredToUserName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
        }
    }

}
