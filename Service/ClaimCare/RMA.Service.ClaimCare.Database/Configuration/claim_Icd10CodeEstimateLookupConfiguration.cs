//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_Icd10CodeEstimateLookupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_Icd10CodeEstimateLookup>
    {
        public claim_Icd10CodeEstimateLookupConfiguration()
            : this("claim")
        {
        }

        public claim_Icd10CodeEstimateLookupConfiguration(string schema)
        {
            ToTable("ICD10CodeEstimateLookup", schema);
            HasKey(x => x.Icd10CodeEstimateLookupId);

            Property(x => x.Icd10CodeEstimateLookupId).HasColumnName(@"ICD10CodeEstimateLookupId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Icd10GroupMapId).HasColumnName(@"ICD10GroupMapId").HasColumnType("int").IsRequired();
            Property(x => x.ProductOptionId).HasColumnName(@"ProductOptionId").HasColumnType("int").IsOptional();
            Property(x => x.MedicalCostLookupId).HasColumnName(@"MedicalCostLookupId").HasColumnType("int").IsOptional();
            Property(x => x.PdExtentLookupId).HasColumnName(@"PDExtentLookupId").HasColumnType("int").IsOptional();
            Property(x => x.DaysOffLookupId).HasColumnName(@"DaysOffLookupId").HasColumnType("int").IsOptional();
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasOptional(a => a.DaysOffLookup).WithMany(b => b.Icd10CodeEstimateLookup).HasForeignKey(c => c.DaysOffLookupId).WillCascadeOnDelete(false); // FK_ICD10CodeEstimateLookup_ICD10Code
            HasOptional(a => a.MedicalCostLookup).WithMany(b => b.Icd10CodeEstimateLookup).HasForeignKey(c => c.MedicalCostLookupId).WillCascadeOnDelete(false); // FK_ICD10CodeEstimateLookup_MedicalCostLookup
            HasOptional(a => a.PdExtentLookup).WithMany(b => b.Icd10CodeEstimateLookup).HasForeignKey(c => c.PdExtentLookupId).WillCascadeOnDelete(false); // FK_ICD10CodeEstimateLookup_PDExtentLookup
        }
    }

}
