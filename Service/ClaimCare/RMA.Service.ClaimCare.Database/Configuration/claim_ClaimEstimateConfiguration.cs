//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimEstimateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ClaimEstimate>
    {
        public claim_ClaimEstimateConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimEstimateConfiguration(string schema)
        {
            ToTable("ClaimEstimate", schema);
            HasKey(x => x.ClaimEstimateId);

            Property(x => x.ClaimEstimateId).HasColumnName(@"ClaimEstimateId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired();
            Property(x => x.EstimateType).HasColumnName(@"EstimateTypeID").HasColumnType("int").IsOptional();
            Property(x => x.BenefitId).HasColumnName(@"BenefitID").HasColumnType("int").IsOptional();
            Property(x => x.EstimatedExtent).HasColumnName(@"EstimatedExtent").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.EstimatedValue).HasColumnName(@"EstimatedValue").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.EstimatedDaysOff).HasColumnName(@"EstimatedDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AllocatedExtent).HasColumnName(@"AllocatedExtent").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AllocatedValue).HasColumnName(@"AllocatedValue").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AllocatedDaysOff).HasColumnName(@"AllocatedDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AuthorisedExtent).HasColumnName(@"AuthorisedExtent").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AuthorisedValue).HasColumnName(@"AuthorisedValue").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AuthorisedDaysOff).HasColumnName(@"AuthorisedDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.SettledExtent).HasColumnName(@"SettledExtent").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.SettledValue).HasColumnName(@"SettledValue").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.SettledDaysOff).HasColumnName(@"SettledDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.EarningsId).HasColumnName(@"EarningsID").HasColumnType("int").IsOptional();
            Property(x => x.IsOverrideExtent).HasColumnName(@"IsOverrideExtent").HasColumnType("bit").IsRequired();
            Property(x => x.IsOverrideValue).HasColumnName(@"IsOverrideValue").HasColumnType("bit").IsRequired();
            Property(x => x.IsOverrideDaysOff).HasColumnName(@"IsOverrideDaysOff").HasColumnType("bit").IsRequired();
            Property(x => x.IsFinalised).HasColumnName(@"IsFinalised").HasColumnType("bit").IsRequired();
            Property(x => x.CalcOperands).HasColumnName(@"CalcOperands").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(7800);
            Property(x => x.OutstandingValue).HasColumnName(@"OutstandingValue").HasColumnType("decimal").IsOptional().HasPrecision(19,2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.OutstandingExtent).HasColumnName(@"OutstandingExtent").HasColumnType("decimal").IsOptional().HasPrecision(19,2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.OutstandingDaysOff).HasColumnName(@"OutstandingDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(19,2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.AutoIncreasedAmount).HasColumnName(@"AutoIncreasedAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.OutstandingReserved).HasColumnName(@"OutstandingReserved").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.AutomatedStpProcess).HasColumnName(@"AutomatedSTPProcess").HasColumnType("bit").IsOptional();
            Property(x => x.Notes).HasColumnName(@"Notes").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.EstimatedValueExclVat).HasColumnName(@"EstimatedValueExclVAT").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.EstimatedValueVat).HasColumnName(@"EstimatedValueVAT").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.OutstandingPd).HasColumnName(@"OutstandingPD").HasColumnType("int").IsRequired();
            Property(x => x.AuthorisedPd).HasColumnName(@"AuthorisedPD").HasColumnType("int").IsRequired();
            Property(x => x.EstimatePd).HasColumnName(@"EstimatePD").HasColumnType("int").IsRequired();
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.Earning).WithMany(b => b.ClaimEstimates).HasForeignKey(c => c.EarningsId).WillCascadeOnDelete(false); // FK_ClaimEstimate_Earnings
            HasRequired(a => a.EstimateTypes).WithMany(b => b.ClaimEstimates).HasForeignKey(c => c.EstimateType).WillCascadeOnDelete(false); // FK_ClaimEstimate_EstimateTypes
            HasRequired(a => a.PersonEvent).WithMany(b => b.ClaimEstimates).HasForeignKey(c => c.PersonEventId).WillCascadeOnDelete(false); // FK_ClaimEstimate_PersonEvent
        }
    }

}
