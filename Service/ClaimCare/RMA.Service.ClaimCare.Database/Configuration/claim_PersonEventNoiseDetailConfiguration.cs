//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_PersonEventNoiseDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_PersonEventNoiseDetail>
    {
        public claim_PersonEventNoiseDetailConfiguration()
            : this("claim")
        {
        }

        public claim_PersonEventNoiseDetailConfiguration(string schema)
        {
            ToTable("PersonEventNoiseDetail", schema);
            HasKey(x => x.PersonEventId);

            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NoiseLevel).HasColumnName(@"NoiseLevel").HasColumnType("decimal").IsRequired().HasPrecision(5,2);
            Property(x => x.ExposurePeriodShifts).HasColumnName(@"ExposurePeriodShifts").HasColumnType("decimal").IsRequired().HasPrecision(5,2);
            Property(x => x.ExposurePeriodYears).HasColumnName(@"ExposurePeriodYears").HasColumnType("decimal").IsRequired().HasPrecision(5,2);
            Property(x => x.LastNoiseExposureDate).HasColumnName(@"LastNoiseExposureDate").HasColumnType("date").IsRequired();
            Property(x => x.IsStillWorkingInNoise).HasColumnName(@"IsStillWorkingInNoise").HasColumnType("bit").IsRequired();
            Property(x => x.FirstAudiogramDeate).HasColumnName(@"FirstAudiogramDeate").HasColumnType("date").IsOptional();
            Property(x => x.ShiftDatePriorToTest).HasColumnName(@"ShiftDatePriorToTest").HasColumnType("date").IsRequired();
            Property(x => x.IsNoNoisePriorToTest).HasColumnName(@"IsNoNoisePriorToTest").HasColumnType("bit").IsRequired();
            Property(x => x.IsPreviousCompensationForDeafness).HasColumnName(@"IsPreviousCompensationForDeafness").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.PersonEvent).WithOptional(b => b.PersonEventNoiseDetail).WillCascadeOnDelete(false); // FK_PersonEventNoiseDetail_PersonEvent
        }
    }

}
