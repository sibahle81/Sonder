//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_MedicalReportConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_MedicalReport>
    {
        public claim_MedicalReportConfiguration()
            : this("claim")
        {
        }

        public claim_MedicalReportConfiguration(string schema)
        {
            ToTable("MedicalReport", schema);
            HasKey(x => x.MedicalReportId);

            Property(x => x.MedicalReportId).HasColumnName(@"MedicalReportId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").HasColumnType("int").IsRequired();
            Property(x => x.PersonId).HasColumnName(@"PersonId").HasColumnType("int").IsRequired();
            Property(x => x.ReportDate).HasColumnName(@"ReportDate").HasColumnType("datetime").IsRequired();
            Property(x => x.MedicalReportType).HasColumnName(@"MedicalReportTypeId").HasColumnType("int").IsRequired();
            Property(x => x.FirstConsultationDate).HasColumnName(@"FirstConsultationDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsStabilised).HasColumnName(@"IsStabilised").HasColumnType("bit").IsRequired();
            Property(x => x.StabilisedDate).HasColumnName(@"StabilisedDate").HasColumnType("date").IsOptional();
            Property(x => x.NotStabilisedReason).HasColumnName(@"NotStabilisedReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.ClinicalDescription).HasColumnName(@"ClinicalDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.IsInjuryConsistent).HasColumnName(@"IsInjuryConsistent").HasColumnType("bit").IsRequired();
            Property(x => x.IsContributingCauses).HasColumnName(@"IsContributingCauses").HasColumnType("bit").IsRequired();
            Property(x => x.ContributingDescription).HasColumnName(@"ContributingDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.IsPreExistingDefect).HasColumnName(@"IsPreExistingDefect").HasColumnType("bit").IsRequired();
            Property(x => x.PreExistingDefectDescription).HasColumnName(@"PreExistingDefectDescription").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.IsUnfitForWork).HasColumnName(@"IsUnfitForWork").HasColumnType("bit").IsRequired();
            Property(x => x.IsUnfitForWorkAuth).HasColumnName(@"IsUnfitForWorkAuth").HasColumnType("bit").IsRequired();
            Property(x => x.FirstDayOff).HasColumnName(@"FirstDayOff").HasColumnType("date").IsOptional();
            Property(x => x.EstimatedDaysOff).HasColumnName(@"EstimatedDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(10,0);
            Property(x => x.LastDayOff).HasColumnName(@"LastDayOff").HasColumnType("date").IsOptional();
            Property(x => x.ReferralHistory).HasColumnName(@"ReferralHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RadiologicalExaminations).HasColumnName(@"RadiologicalExaminations").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OperationsProcedures).HasColumnName(@"OperationsProcedures").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.PhysioTherapyDetails).HasColumnName(@"PhysioTherapyDetails").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IsRefusedCompensation).HasColumnName(@"IsRefusedCompensation").HasColumnType("bit").IsRequired();
            Property(x => x.DetailedImpairmentEval).HasColumnName(@"DetailedImpairmentEval").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.MedicalServiceProviderId).HasColumnName(@"MedicalServiceProviderId").HasColumnType("int").IsOptional();
            Property(x => x.PatientNumber).HasColumnName(@"PatientNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateAssurerNotified).HasColumnName(@"DateAssurerNotified").HasColumnType("date").IsOptional();
            Property(x => x.MedicalReportCategory).HasColumnName(@"MedicalReportCategoryId").HasColumnType("int").IsRequired();
            Property(x => x.MedicalReportCategoryXml).HasColumnName(@"MedicalReportCategoryXml").HasColumnType("xml").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ReportStatus).HasColumnName(@"ReportStatus").HasColumnType("int").IsOptional();
            Property(x => x.RejectionReason).HasColumnName(@"RejectionReason").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2048);
            Property(x => x.AssessmentTypeId).HasColumnName(@"AssessmentTypeId").HasColumnType("int").IsOptional();
            Property(x => x.TreatmentDate).HasColumnName(@"TreatmentDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Icd10Codes).HasColumnName(@"ICD10Codes").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RejectPendReasonId).HasColumnName(@"RejectPendReasonId").HasColumnType("int").IsOptional();
            Property(x => x.MedicalReportFormId).HasColumnName(@"MedicalReportFormId").HasColumnType("int").IsOptional();
        }
    }

}
