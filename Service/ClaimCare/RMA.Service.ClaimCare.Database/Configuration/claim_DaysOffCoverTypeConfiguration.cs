//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_DaysOffCoverTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_DaysOffCoverType>
    {
        public claim_DaysOffCoverTypeConfiguration()
            : this("claim")
        {
        }

        public claim_DaysOffCoverTypeConfiguration(string schema)
        {
            ToTable("DaysOffCoverType", schema);
            HasKey(x => x.DaysOffCoverTypeId);

            Property(x => x.DaysOffCoverTypeId).HasColumnName(@"DaysOffCoverTypeId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.StartNoDays).HasColumnName(@"StartNoDays").HasColumnType("decimal").IsOptional().HasPrecision(10,2);
            Property(x => x.EndNoDays).HasColumnName(@"EndNoDays").HasColumnType("decimal").IsOptional().HasPrecision(10,2);
            Property(x => x.MinDaysOff).HasColumnName(@"MinDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(10,2);
            Property(x => x.MaxDaysOff).HasColumnName(@"MaxDaysOff").HasColumnType("decimal").IsOptional().HasPrecision(10,2);
            Property(x => x.CoverExcessTypeId).HasColumnName(@"CoverExcessTypeId").HasColumnType("int").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.CoverExcessType).WithMany(b => b.DaysOffCoverTypes).HasForeignKey(c => c.CoverExcessTypeId).WillCascadeOnDelete(false); // FK_DaysOffCoverType_CoverExcessType
        }
    }

}
