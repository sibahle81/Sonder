//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimBankAccountVerificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ClaimBankAccountVerification>
    {
        public claim_ClaimBankAccountVerificationConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimBankAccountVerificationConfiguration(string schema)
        {
            ToTable("ClaimBankAccountVerification", schema);
            HasKey(x => x.VerificationId);

            Property(x => x.VerificationId).HasColumnName(@"VerificationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ClaimId).HasColumnName(@"ClaimId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimReference).HasColumnName(@"ClaimReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsOptional();
            Property(x => x.UserEmail).HasColumnName(@"UserEmail").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.RequestedDate).HasColumnName(@"RequestedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ResponseDate).HasColumnName(@"ResponseDate").HasColumnType("datetime").IsOptional();
            Property(x => x.BeneficiaryId).HasColumnName(@"BeneficiaryId").HasColumnType("int").IsOptional();
            Property(x => x.BankAccountId).HasColumnName(@"BankAccountId").HasColumnType("int").IsOptional();
            Property(x => x.AccountAcceptsCredits).HasColumnName(@"AccountAcceptsCredits").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountAcceptsDebits).HasColumnName(@"AccountAcceptsDebits").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountExists).HasColumnName(@"AccountExists").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountIdMatch).HasColumnName(@"AccountIdMatch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountNumber).HasColumnName(@"AccountNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AccountOpen).HasColumnName(@"AccountOpen").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountOpenGtThreeMonths).HasColumnName(@"AccountOpenGtThreeMonths").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountType).HasColumnName(@"AccountType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.AccountTypeValid).HasColumnName(@"AccountTypeValid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.BranchCode).HasColumnName(@"BranchCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.EmailValid).HasColumnName(@"EmailValid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.IdNumber).HasColumnName(@"IdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.InitialMatch).HasColumnName(@"InitialMatch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.Initials).HasColumnName(@"Initials").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.LastNameMatch).HasColumnName(@"LastNameMatch").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.MessageCode).HasColumnName(@"MessageCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.MessageDescription).HasColumnName(@"MessageDescription").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.PhoneNumber).HasColumnName(@"PhoneNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.PhoneValid).HasColumnName(@"PhoneValid").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.TransactionReference).HasColumnName(@"TransactionReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.UserReference).HasColumnName(@"UserReference").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsRequired();
        }
    }

}
