//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Configuration
{
    public class claim_ClaimRequiredDocumentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<claim_ClaimRequiredDocument>
    {
        public claim_ClaimRequiredDocumentConfiguration()
            : this("claim")
        {
        }

        public claim_ClaimRequiredDocumentConfiguration(string schema)
        {
            ToTable("ClaimRequiredDocument", schema);
            HasKey(x => x.ClaimRequiredDocumentId);

            Property(x => x.ClaimRequiredDocumentId).HasColumnName(@"ClaimRequiredDocumentId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersoneventId).HasColumnName(@"PersoneventId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimRequirementCategoryId).HasColumnName(@"ClaimRequirementCategoryId").HasColumnType("int").IsOptional();
            Property(x => x.Isuploaded).HasColumnName(@"Isuploaded").HasColumnType("bit").IsOptional();
            Property(x => x.DocumentDocumentTypeId).HasColumnName(@"DocumentDocumentTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClaimRequirementCategory).WithMany(b => b.ClaimRequiredDocuments).HasForeignKey(c => c.ClaimRequirementCategoryId).WillCascadeOnDelete(false); // fk_ClaimRequirementCategoryId
            HasOptional(a => a.PersonEvent).WithMany(b => b.ClaimRequiredDocuments).HasForeignKey(c => c.PersoneventId).WillCascadeOnDelete(false); // fk_PersoneventId
        }
    }

}
