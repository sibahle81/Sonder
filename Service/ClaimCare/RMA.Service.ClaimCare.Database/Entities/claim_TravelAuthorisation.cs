//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Contracts.Enums;

namespace RMA.Service.ClaimCare.Database.Entities
{
    public partial class claim_TravelAuthorisation : IAuditableEntity, ISoftDeleteEntity
    {
        public int TravelAuthorisationId { get; set; } // TravelAuthorisationId (Primary key)
        public int PersonEventId { get; set; } // PersonEventId
        public int? TravelAuthorisedPartyId { get; set; } // TravelAuthorisedPartyId
        public System.DateTime DateAuthorisedFrom { get; set; } // DateAuthorisedFrom
        public System.DateTime DateAuthorisedTo { get; set; } // DateAuthorisedTo
        public decimal AuthorisedKm { get; set; } // AuthorisedKm
        public int TravelRateTypeId { get; set; } // TravelRateTypeId
        public decimal AuthorisedRate { get; set; } // AuthorisedRate
        public decimal? AuthorisedAmount { get; set; } // AuthorisedAmount
        public string Description { get; set; } // Description
        public bool IsPreAuthorised { get; set; } // IsPreAuthorised
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate

        // Foreign keys

        /// <summary>
        /// Parent claim_PersonEvent pointed by [TravelAuthorisation].([PersonEventId]) (FK_TravelAuthorisation_PersonEvent)
        /// </summary>
        public virtual claim_PersonEvent PersonEvent { get; set; } // FK_TravelAuthorisation_PersonEvent

        /// <summary>
        /// Parent claim_TravelAuthorisedParty pointed by [TravelAuthorisation].([TravelAuthorisedPartyId]) (FK_TravelAuthorisation_TravelAuthorisedParty)
        /// </summary>
        public virtual claim_TravelAuthorisedParty TravelAuthorisedParty { get; set; } // FK_TravelAuthorisation_TravelAuthorisedParty

        /// <summary>
        /// Parent claim_TravelRateType pointed by [TravelAuthorisation].([TravelRateTypeId]) (FK_TravelAuthorisation_TravelRateType)
        /// </summary>
        public virtual claim_TravelRateType TravelRateType { get; set; } // FK_TravelAuthorisation_TravelRateType

        public claim_TravelAuthorisation()
        {
            IsPreAuthorised = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
