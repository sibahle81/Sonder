//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Contracts.Enums;

namespace RMA.Service.ClaimCare.Database.Entities
{
    public partial class claim_PersonEvent : IAuditableEntity, ISoftDeleteEntity
    {
        public int PersonEventId { get; set; } // PersonEventId (Primary key)
        public ClaimTypeEnum? ClaimType { get; set; } // ClaimTypeId
        public int? PersonEmploymentId { get; set; } // PersonEmploymentId
        public int? CompanyRolePlayerId { get; set; } // CompanyRolePlayerId
        public string PersonEventReferenceNumber { get; set; } // PersonEventReferenceNumber (length: 50)
        public bool? SendBrokerEmail { get; set; } // SendBrokerEmail
        public int EventId { get; set; } // EventId
        public int InsuredLifeId { get; set; } // InsuredLifeId
        public int ClaimantId { get; set; } // ClaimantId
        public int? InformantId { get; set; } // InformantId
        public PersonEventStatusEnum PersonEventStatus { get; set; } // PersonEventStatusId
        public int? PersonEventBucketClassId { get; set; } // PersonEventBucketClassId
        public System.DateTime DateReceived { get; set; } // DateReceived
        public System.DateTime DateCaptured { get; set; } // DateCaptured
        public int CapturedByUserId { get; set; } // CapturedByUserId
        public System.DateTime? AssignedDate { get; set; } // AssignedDate
        public int? AssignedToUserId { get; set; } // AssignedToUserID
        public System.DateTime? DateSubmitted { get; set; } // DateSubmitted
        public int? SubmittedByUserId { get; set; } // SubmittedByUserId
        public System.DateTime? DateAuthorised { get; set; } // DateAuthorised
        public int? AuthorisedByUserId { get; set; } // AuthorisedByUserId
        public System.DateTime? DateRejected { get; set; } // DateRejected
        public int? RejectedByUserId { get; set; } // RejectedByUserId
        public string RejectionReason { get; set; } // RejectionReason (length: 255)
        public int? InsuranceTypeId { get; set; } // InsuranceTypeId
        public SuspiciousTransactionStatusEnum SuspiciousTransactionStatus { get; set; } // SuspiciousTransactionStatusId
        public bool IsSpectacles { get; set; } // IsSpectacles
        public bool IsDentures { get; set; } // IsDentures
        public bool IsAssault { get; set; } // IsAssault
        public bool IsStraightThroughProcess { get; set; } // IsStraightThroughProcess
        public bool IsDeleted { get; set; } // IsDeleted
        public string CreatedBy { get; set; } // CreatedBy (length: 50)
        public System.DateTime CreatedDate { get; set; } // CreatedDate
        public string ModifiedBy { get; set; } // ModifiedBy (length: 50)
        public System.DateTime ModifiedDate { get; set; } // ModifiedDate
        public int? CompCarePersonEventId { get; set; } // CompCarePersonEventId
        public string CompCareIntegrationMessageId { get; set; } // CompCareIntegrationMessageId (length: 350)
        public string CompCarePevRefNumber { get; set; } // CompCarePEVRefNumber (length: 350)
        public System.DateTime? DateOfStabilisation { get; set; } // DateOfStabilisation
        public bool? IsFatal { get; set; } // IsFatal
        public bool IsHijack { get; set; } // IsHijack

        // Reverse navigation

        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventAccidentDetail].[PersonEventId] (FK_PersonEventAccidentDetail_PersonEvent)
        /// </summary>
        public virtual claim_PersonEventAccidentDetail PersonEventAccidentDetail { get; set; } // PersonEventAccidentDetail.FK_PersonEventAccidentDetail_PersonEvent
        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventAssaultDetail].[PersonEventId] (FK_PersonEventAssaultDetail_PersonEvent)
        /// </summary>
        public virtual claim_PersonEventAssaultDetail PersonEventAssaultDetail { get; set; } // PersonEventAssaultDetail.FK_PersonEventAssaultDetail_PersonEvent
        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventDeathDetail].[PersonEventId] (FK_PersonEventDeathDetail_PersonEvent)
        /// </summary>
        public virtual claim_PersonEventDeathDetail PersonEventDeathDetail { get; set; } // PersonEventDeathDetail.FK_PersonEventDeathDetail_PersonEvent
        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventDiseaseDetail].[PersonEventId] (FK_PersonEventDiseaseDetail_PersonEvent1)
        /// </summary>
        public virtual claim_PersonEventDiseaseDetail PersonEventDiseaseDetail { get; set; } // PersonEventDiseaseDetail.FK_PersonEventDiseaseDetail_PersonEvent1
        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventNoiseDetail].[PersonEventId] (FK_PersonEventNoiseDetail_PersonEvent)
        /// </summary>
        public virtual claim_PersonEventNoiseDetail PersonEventNoiseDetail { get; set; } // PersonEventNoiseDetail.FK_PersonEventNoiseDetail_PersonEvent
        /// <summary>
        /// Parent (One-to-One) claim_PersonEvent pointed by [PersonEventQuestionnaire].[PersonEventId] (FK_PersonEventQuestionnaire_PersonEvent)
        /// </summary>
        public virtual claim_PersonEventQuestionnaire PersonEventQuestionnaire { get; set; } // PersonEventQuestionnaire.FK_PersonEventQuestionnaire_PersonEvent
        /// <summary>
        /// Child claim_Claims where [Claim].[PersonEventId] point to this entity (FK_Claim_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_Claim> Claims { get; set; } // Claim.FK_Claim_PersonEvent
        /// <summary>
        /// Child claim_ClaimAdditionalRequiredDocuments where [ClaimAdditionalRequiredDocument].[PersoneventId] point to this entity (fk_ClaimPersoneventId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimAdditionalRequiredDocument> ClaimAdditionalRequiredDocuments { get; set; } // ClaimAdditionalRequiredDocument.fk_ClaimPersoneventId
        /// <summary>
        /// Child claim_ClaimDisabilityAssessments where [ClaimDisabilityAssessment].[PersonEventId] point to this entity (FK_ClaimDisabilityAssessment_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimDisabilityAssessment> ClaimDisabilityAssessments { get; set; } // ClaimDisabilityAssessment.FK_ClaimDisabilityAssessment_PersonEvent
        /// <summary>
        /// Child claim_ClaimDisabilityPensions where [ClaimDisabilityPension].[PersonEventId] point to this entity (FK_ClaimDisabilityPension_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimDisabilityPension> ClaimDisabilityPensions { get; set; } // ClaimDisabilityPension.FK_ClaimDisabilityPension_PersonEvent
        /// <summary>
        /// Child claim_ClaimEstimates where [ClaimEstimate].[PersonEventId] point to this entity (FK_ClaimEstimate_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimEstimate> ClaimEstimates { get; set; } // ClaimEstimate.FK_ClaimEstimate_PersonEvent
        /// <summary>
        /// Child claim_ClaimRequiredDocuments where [ClaimRequiredDocument].[PersoneventId] point to this entity (fk_PersoneventId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimRequiredDocument> ClaimRequiredDocuments { get; set; } // ClaimRequiredDocument.fk_PersoneventId
        /// <summary>
        /// Child claim_ClaimRequirements where [ClaimRequirement].[PersonEventId] point to this entity (FK_ClaimRequirement_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimRequirement> ClaimRequirements { get; set; } // ClaimRequirement.FK_ClaimRequirement_PersonEvent
        /// <summary>
        /// Child claim_ClaimWorkflows where [ClaimWorkflow].[PersonEventId] point to this entity (FK_ClaimWorkflow_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_ClaimWorkflow> ClaimWorkflows { get; set; } // ClaimWorkflow.FK_ClaimWorkflow_PersonEvent
        /// <summary>
        /// Child claim_DaysOffInvoices where [DaysOffInvoice].[PersonEventId] point to this entity (FK_DaysOffInvoice_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_DaysOffInvoice> DaysOffInvoices { get; set; } // DaysOffInvoice.FK_DaysOffInvoice_PersonEvent
        /// <summary>
        /// Child claim_Earnings where [Earnings].[PersonEventId] point to this entity (FK_Earnings_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_Earning> Earnings { get; set; } // Earnings.FK_Earnings_PersonEvent
        /// <summary>
        /// Child claim_FamilyAllowanceAwards where [FamilyAllowanceAward].[PersonEventId] point to this entity (FK_FamilyAllowanceAward_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_FamilyAllowanceAward> FamilyAllowanceAwards { get; set; } // FamilyAllowanceAward.FK_FamilyAllowanceAward_PersonEvent
        /// <summary>
        /// Child claim_InjuryEstimateBasisCostDaysPdExtensions where [InjuryEstimateBasisCostDaysPDExtensions].[PersonEventId] point to this entity (FK_InjuryEstimateBasisCostDaysPDExtensions_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_InjuryEstimateBasisCostDaysPdExtension> InjuryEstimateBasisCostDaysPdExtensions { get; set; } // InjuryEstimateBasisCostDaysPDExtensions.FK_InjuryEstimateBasisCostDaysPDExtensions_PersonEvent
        /// <summary>
        /// Child claim_MedicalReportFormWizardDetails where [MedicalReportFormWizardDetails].[PersonEventId] point to this entity (FK_MedicalReportFormWizardDetails_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_MedicalReportFormWizardDetail> MedicalReportFormWizardDetails { get; set; } // MedicalReportFormWizardDetails.FK_MedicalReportFormWizardDetails_PersonEvent
        /// <summary>
        /// Child claim_PersonEventClaimRequirements where [PersonEventClaimRequirement].[PersonEventId] point to this entity (FK_PersonEventClaimRequirement_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_PersonEventClaimRequirement> PersonEventClaimRequirements { get; set; } // PersonEventClaimRequirement.FK_PersonEventClaimRequirement_PersonEvent
        /// <summary>
        /// Child claim_PersonEventStpExitReasons where [PersonEventSTPExitReasons].[PersonEventID] point to this entity (FK_PersonEventSTPExitReasons_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_PersonEventStpExitReason> PersonEventStpExitReasons { get; set; } // PersonEventSTPExitReasons.FK_PersonEventSTPExitReasons_PersonEvent
        /// <summary>
        /// Child claim_PhysicalDamages where [PhysicalDamage].[PersonEventId] point to this entity (FK_PhysicalDamage_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_PhysicalDamage> PhysicalDamages { get; set; } // PhysicalDamage.FK_PhysicalDamage_PersonEvent
        /// <summary>
        /// Child claim_SundryInvoices where [SundryInvoice].[PersonEventId] point to this entity (FK_SundryInvoice_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_SundryInvoice> SundryInvoices { get; set; } // SundryInvoice.FK_SundryInvoice_PersonEvent
        /// <summary>
        /// Child claim_TravelAuthorisations where [TravelAuthorisation].[PersonEventId] point to this entity (FK_TravelAuthorisation_PersonEvent)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<claim_TravelAuthorisation> TravelAuthorisations { get; set; } // TravelAuthorisation.FK_TravelAuthorisation_PersonEvent

        // Foreign keys

        /// <summary>
        /// Parent claim_ClaimBucketClass pointed by [PersonEvent].([PersonEventBucketClassId]) (FK_PersonEvent_ClaimBucketClass)
        /// </summary>
        public virtual claim_ClaimBucketClass ClaimBucketClass { get; set; } // FK_PersonEvent_ClaimBucketClass

        /// <summary>
        /// Parent claim_Event pointed by [PersonEvent].([EventId]) (FK_PersonEvent_Event)
        /// </summary>
        public virtual claim_Event Event { get; set; } // FK_PersonEvent_Event

        /// <summary>
        /// Parent claim_ParentInsuranceType pointed by [PersonEvent].([InsuranceTypeId]) (FK_PersonEvent_ParentInsuranceType)
        /// </summary>
        public virtual claim_ParentInsuranceType ParentInsuranceType { get; set; } // FK_PersonEvent_ParentInsuranceType

        public claim_PersonEvent()
        {
            SuspiciousTransactionStatus = (SuspiciousTransactionStatusEnum) 0;
            IsSpectacles = false;
            IsDentures = false;
            IsAssault = false;
            IsStraightThroughProcess = false;
            IsHijack = false;
            Claims = new System.Collections.Generic.List<claim_Claim>();
            ClaimAdditionalRequiredDocuments = new System.Collections.Generic.List<claim_ClaimAdditionalRequiredDocument>();
            ClaimDisabilityAssessments = new System.Collections.Generic.List<claim_ClaimDisabilityAssessment>();
            ClaimDisabilityPensions = new System.Collections.Generic.List<claim_ClaimDisabilityPension>();
            ClaimEstimates = new System.Collections.Generic.List<claim_ClaimEstimate>();
            ClaimRequiredDocuments = new System.Collections.Generic.List<claim_ClaimRequiredDocument>();
            ClaimRequirements = new System.Collections.Generic.List<claim_ClaimRequirement>();
            ClaimWorkflows = new System.Collections.Generic.List<claim_ClaimWorkflow>();
            DaysOffInvoices = new System.Collections.Generic.List<claim_DaysOffInvoice>();
            Earnings = new System.Collections.Generic.List<claim_Earning>();
            FamilyAllowanceAwards = new System.Collections.Generic.List<claim_FamilyAllowanceAward>();
            InjuryEstimateBasisCostDaysPdExtensions = new System.Collections.Generic.List<claim_InjuryEstimateBasisCostDaysPdExtension>();
            MedicalReportFormWizardDetails = new System.Collections.Generic.List<claim_MedicalReportFormWizardDetail>();
            PersonEventClaimRequirements = new System.Collections.Generic.List<claim_PersonEventClaimRequirement>();
            PersonEventStpExitReasons = new System.Collections.Generic.List<claim_PersonEventStpExitReason>();
            PhysicalDamages = new System.Collections.Generic.List<claim_PhysicalDamage>();
            SundryInvoices = new System.Collections.Generic.List<claim_SundryInvoice>();
            TravelAuthorisations = new System.Collections.Generic.List<claim_TravelAuthorisation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
