//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using RMA.Common.Database.Contracts.Repository;
using RMA.Service.Admin.MasterDataManager.Contracts.Enums;
using RMA.Service.ClaimCare.Database.Configuration;
using RMA.Service.ClaimCare.Database.Context;
using RMA.Service.ClaimCare.Database.Entities;

namespace RMA.Service.ClaimCare.Database.Context
{

    public partial class EfDbContext : RMA.Common.Database.Repository.RmaDbContext
    {
        static EfDbContext()
        {
            System.Data.Entity.Database.SetInitializer<EfDbContext>(null);
        }

        public EfDbContext()
            : base()
        {
            InitializePartial();
        }

        public EfDbContext(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            DisposePartial(disposing);
            base.Dispose(disposing);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new claim_AnnuityFactorConfiguration());
            modelBuilder.Configurations.Add(new claim_AnnuityFactorTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_AssignedToUserConfiguration());
            modelBuilder.Configurations.Add(new claim_AssurerConfiguration());
            modelBuilder.Configurations.Add(new claim_AudioGramItemConfiguration());
            modelBuilder.Configurations.Add(new claim_AuditLogConfiguration());
            modelBuilder.Configurations.Add(new claim_CaaInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_CatastropheConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimAdditionalRequiredDocumentConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBankAccountVerificationConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBenefitConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBenefitFormulaConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBenefitsAmountConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBenefitTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBroadcastScheduleConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimBucketClassConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimDisabilityAssessmentConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimDisabilityPensionConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimEstimateConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimEstimateGroupConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimInvoiceStatuConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimLiabilityDecisionConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimNoteConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimReasonEstimateStatuConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimRequiredDocumentConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimRequirementConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimRequirementCategoryConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimRequirementCategoryMappingConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimRuleAuditConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimsCalculatedAmountConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimsRecoveryConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimsTracingConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimWizardConfiguration());
            modelBuilder.Configurations.Add(new claim_ClaimWorkflowConfiguration());
            modelBuilder.Configurations.Add(new claim_CoverExcessTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_DaysOffCoverTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_DaysOffInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_DaysOffLookupConfiguration());
            modelBuilder.Configurations.Add(new claim_DaysOffTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_DiseaseTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_DocumentRuleConfiguration());
            modelBuilder.Configurations.Add(new claim_EarningConfiguration());
            modelBuilder.Configurations.Add(new claim_EarningDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_EarningTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_EstimateTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_EuropAssistNotificationConfiguration());
            modelBuilder.Configurations.Add(new claim_EventConfiguration());
            modelBuilder.Configurations.Add(new claim_EventCauseConfiguration());
            modelBuilder.Configurations.Add(new claim_EventNoteConfiguration());
            modelBuilder.Configurations.Add(new claim_FamilyAllowanceAwardConfiguration());
            modelBuilder.Configurations.Add(new claim_FatalLumpSumInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_FatalPdLumpsumInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_FuneralExpenseInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_FuneralInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_HearingAssessmentConfiguration());
            modelBuilder.Configurations.Add(new claim_HearingAssessmentTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_Icd10CodeEstimateLookupConfiguration());
            modelBuilder.Configurations.Add(new claim_InjuryConfiguration());
            modelBuilder.Configurations.Add(new claim_InjuryEstimateBasisCostDaysPdExtensionConfiguration());
            modelBuilder.Configurations.Add(new claim_InvoiceAllocationConfiguration());
            modelBuilder.Configurations.Add(new claim_LastViewedConfiguration());
            modelBuilder.Configurations.Add(new claim_LiabilityDecisionTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_LimitBenefitGroupConfiguration());
            modelBuilder.Configurations.Add(new claim_ManageUserConfiguration());
            modelBuilder.Configurations.Add(new claim_MedicalCostLookupConfiguration());
            modelBuilder.Configurations.Add(new claim_MedicalReportConfiguration());
            modelBuilder.Configurations.Add(new claim_MedicalReportFormWizardDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_NihlLookupConfiguration());
            modelBuilder.Configurations.Add(new claim_NoteConfiguration());
            modelBuilder.Configurations.Add(new claim_ParentInsuranceTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_PatersonGradingConfiguration());
            modelBuilder.Configurations.Add(new claim_PaymentReversalConfiguration());
            modelBuilder.Configurations.Add(new claim_PaymentReversalTestConfiguration());
            modelBuilder.Configurations.Add(new claim_PdAwardConfiguration());
            modelBuilder.Configurations.Add(new claim_PdCombinationTableConfiguration());
            modelBuilder.Configurations.Add(new claim_PdExtentLookupConfiguration());
            modelBuilder.Configurations.Add(new claim_PdRecoveryConfiguration());
            modelBuilder.Configurations.Add(new claim_PdRecoveryStatuConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventAccidentDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventAssaultDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventClaimRequirementConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventDeathDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventDiseaseDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventNoiseDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventNoteConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventQuestionnaireConfiguration());
            modelBuilder.Configurations.Add(new claim_PersonEventStpExitReasonConfiguration());
            modelBuilder.Configurations.Add(new claim_PhysicalDamageConfiguration());
            modelBuilder.Configurations.Add(new claim_PolBenEarningsRangeCalcConfiguration());
            modelBuilder.Configurations.Add(new claim_ReferralDetailConfiguration());
            modelBuilder.Configurations.Add(new claim_ReferralQueryTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_ReferralStatuConfiguration());
            modelBuilder.Configurations.Add(new claim_ReferralTypeLimitConfigurationConfiguration());
            modelBuilder.Configurations.Add(new claim_ReferralTypeLimitGroupConfiguration());
            modelBuilder.Configurations.Add(new claim_ReOpenReasonConfiguration());
            modelBuilder.Configurations.Add(new claim_RuleDocumentTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_SecondaryInjuryConfiguration());
            modelBuilder.Configurations.Add(new claim_StpExitReasonConfiguration());
            modelBuilder.Configurations.Add(new claim_SundryInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_SundryServiceProviderConfiguration());
            modelBuilder.Configurations.Add(new claim_SundryServiceTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_SympathyAwardInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_TracerInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_TravelAuthorisationConfiguration());
            modelBuilder.Configurations.Add(new claim_TravelAuthorisedPartyConfiguration());
            modelBuilder.Configurations.Add(new claim_TravelInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_TravelRateTypeConfiguration());
            modelBuilder.Configurations.Add(new claim_TtdInvoiceConfiguration());
            modelBuilder.Configurations.Add(new claim_UnclaimedBenefitHeaderConfiguration());
            modelBuilder.Configurations.Add(new claim_UnclaimedBenefitInterestConfiguration());
            modelBuilder.Configurations.Add(new claim_WidowLumpSumInvoiceConfiguration());
            modelBuilder.Configurations.Add(new common_AccidentTypeConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementRoleConfiguration());
            modelBuilder.Configurations.Add(new common_AnnouncementUserAcceptanceConfiguration());
            modelBuilder.Configurations.Add(new common_ClaimTypeMappingConfiguration());
            modelBuilder.Configurations.Add(new common_ColReceivedFromConfiguration());
            modelBuilder.Configurations.Add(new common_ColReceiveMethodConfiguration());
            modelBuilder.Configurations.Add(new common_ColReceiveTypeConfiguration());
            modelBuilder.Configurations.Add(new common_CommissionBandConfiguration());
            modelBuilder.Configurations.Add(new common_CvPaymentStatuConfiguration());
            modelBuilder.Configurations.Add(new common_DebtSmsStatuConfiguration());
            modelBuilder.Configurations.Add(new common_DepartmentLookupConfiguration());
            modelBuilder.Configurations.Add(new common_DesignationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_EuropAssistPremiumMatrixConfiguration());
            modelBuilder.Configurations.Add(new common_EventActionConfiguration());
            modelBuilder.Configurations.Add(new common_EventActivityConfiguration());
            modelBuilder.Configurations.Add(new common_EventAgentConfiguration());
            modelBuilder.Configurations.Add(new common_FeatureFlagSettingConfiguration());
            modelBuilder.Configurations.Add(new common_LookupValueConfiguration());
            modelBuilder.Configurations.Add(new common_MonthlyScheduledWorkPoolUserConfiguration());
            modelBuilder.Configurations.Add(new common_OccupationTypeConfiguration());
            modelBuilder.Configurations.Add(new common_OneTimePinConfiguration());
            modelBuilder.Configurations.Add(new common_PartnerCompanyConfiguration());
            modelBuilder.Configurations.Add(new common_PayeeTypeConfiguration());
            modelBuilder.Configurations.Add(new common_PensCareSettingConfiguration());
            modelBuilder.Configurations.Add(new common_PeriodConfiguration());
            modelBuilder.Configurations.Add(new common_PoolWorkFlowConfiguration());
            modelBuilder.Configurations.Add(new common_PreviousInsurerConfiguration());
            modelBuilder.Configurations.Add(new common_ReportViewedAuditConfiguration());
            modelBuilder.Configurations.Add(new common_RetirementReasonConfiguration());
            modelBuilder.Configurations.Add(new common_ServiceBusMessageConfiguration());
            modelBuilder.Configurations.Add(new common_SlaItemTypeConfigurationConfiguration());
            modelBuilder.Configurations.Add(new common_SlaMovementAuditConfiguration());
            modelBuilder.Configurations.Add(new common_SlaStatusChangeAuditConfiguration());
            modelBuilder.Configurations.Add(new common_TmpDebtorsDetailConfiguration());
            modelBuilder.Configurations.Add(new common_UnderAssessReasonConfiguration());
            modelBuilder.Configurations.Add(new common_UpfrontCommClawbackratioConfiguration());
            modelBuilder.Configurations.Add(new common_UserReminderConfiguration());
            modelBuilder.Configurations.Add(new common_VatConfiguration());
            modelBuilder.Configurations.Add(new common_WorkItemTypeConfiguration());
            modelBuilder.Configurations.Add(new cost_AuditLogConfiguration());
            modelBuilder.Configurations.Add(new cost_LastViewedConfiguration());
            modelBuilder.Configurations.Add(new cost_NoteConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void InitializePartial();
        partial void DisposePartial(bool disposing);
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
