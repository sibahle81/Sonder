


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//		
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// The following connection settings were used to generate this file:
//     Connection String:      "data source=azt-mcc-sql-01.rma.msft;initial catalog=AZD-MCC;user id=RMAAdmin;password=**zapped**;;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Developer Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 14.0.3471.2

using Autofac;
using RMA.Common.Database.Repository;
using RMA.Common.Database.Contracts.Repository;
using RMA.Service.ClaimCare.Database.Entities;
using RMA.Service.ClaimCare.Database.Context;

namespace RMA.Service.ClaimCare.Database
{
	public class EfDbContextServiceRegistry : Module
	{
		protected override void Load(ContainerBuilder builder)
		{ 
			builder.RegisterType<EfDbContext>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_AnnuityFactor, EfDbContext>>().As<IRepository<claim_AnnuityFactor>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_AnnuityFactorType, EfDbContext>>().As<IRepository<claim_AnnuityFactorType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_AssignedToUser, EfDbContext>>().As<IRepository<claim_AssignedToUser>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Assurer, EfDbContext>>().As<IRepository<claim_Assurer>>();
			builder.RegisterType<EfRepository<claim_AudioGramItem, EfDbContext>>().As<IRepository<claim_AudioGramItem>>();
			builder.RegisterType<EfRepository<claim_AuditLog, EfDbContext>>().As<IRepository<claim_AuditLog>>();
			builder.RegisterType<EfRepository<claim_CaaInvoice, EfDbContext>>().As<IRepository<claim_CaaInvoice>>();
			builder.RegisterType<EfRepository<claim_Catastrophe, EfDbContext>>().As<IRepository<claim_Catastrophe>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Claim, EfDbContext>>().As<IRepository<claim_Claim>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimAdditionalRequiredDocument, EfDbContext>>().As<IRepository<claim_ClaimAdditionalRequiredDocument>>();
			builder.RegisterType<EfRepository<claim_ClaimBankAccountVerification, EfDbContext>>().As<IRepository<claim_ClaimBankAccountVerification>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimBenefit, EfDbContext>>().As<IRepository<claim_ClaimBenefit>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimBenefitFormula, EfDbContext>>().As<IRepository<claim_ClaimBenefitFormula>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimBenefitsAmount, EfDbContext>>().As<IRepository<claim_ClaimBenefitsAmount>>();
			builder.RegisterType<EfRepository<claim_ClaimBenefitType, EfDbContext>>().As<IRepository<claim_ClaimBenefitType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimBroadcastSchedule, EfDbContext>>().As<IRepository<claim_ClaimBroadcastSchedule>>();
			builder.RegisterType<EfRepository<claim_ClaimBucketClass, EfDbContext>>().As<IRepository<claim_ClaimBucketClass>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimDisabilityAssessment, EfDbContext>>().As<IRepository<claim_ClaimDisabilityAssessment>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimDisabilityPension, EfDbContext>>().As<IRepository<claim_ClaimDisabilityPension>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimEstimate, EfDbContext>>().As<IRepository<claim_ClaimEstimate>>();
			builder.RegisterType<EfRepository<claim_ClaimEstimateGroup, EfDbContext>>().As<IRepository<claim_ClaimEstimateGroup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimInvoice, EfDbContext>>().As<IRepository<claim_ClaimInvoice>>();
			builder.RegisterType<EfRepository<claim_ClaimInvoiceStatu, EfDbContext>>().As<IRepository<claim_ClaimInvoiceStatu>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimLiabilityDecision, EfDbContext>>().As<IRepository<claim_ClaimLiabilityDecision>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimNote, EfDbContext>>().As<IRepository<claim_ClaimNote>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimReasonEstimateStatu, EfDbContext>>().As<IRepository<claim_ClaimReasonEstimateStatu>>();
			builder.RegisterType<EfRepository<claim_ClaimRequiredDocument, EfDbContext>>().As<IRepository<claim_ClaimRequiredDocument>>();
			builder.RegisterType<EfRepository<claim_ClaimRequirement, EfDbContext>>().As<IRepository<claim_ClaimRequirement>>();
			builder.RegisterType<EfRepository<claim_ClaimRequirementCategory, EfDbContext>>().As<IRepository<claim_ClaimRequirementCategory>>();
			builder.RegisterType<EfRepository<claim_ClaimRequirementCategoryMapping, EfDbContext>>().As<IRepository<claim_ClaimRequirementCategoryMapping>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimRuleAudit, EfDbContext>>().As<IRepository<claim_ClaimRuleAudit>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimsCalculatedAmount, EfDbContext>>().As<IRepository<claim_ClaimsCalculatedAmount>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimsRecovery, EfDbContext>>().As<IRepository<claim_ClaimsRecovery>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimsTracing, EfDbContext>>().As<IRepository<claim_ClaimsTracing>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ClaimWizard, EfDbContext>>().As<IRepository<claim_ClaimWizard>>();
			builder.RegisterType<EfRepository<claim_ClaimWorkflow, EfDbContext>>().As<IRepository<claim_ClaimWorkflow>>();
			builder.RegisterType<EfRepository<claim_CoverExcessType, EfDbContext>>().As<IRepository<claim_CoverExcessType>>();
			builder.RegisterType<EfRepository<claim_DaysOffCoverType, EfDbContext>>().As<IRepository<claim_DaysOffCoverType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_DaysOffInvoice, EfDbContext>>().As<IRepository<claim_DaysOffInvoice>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_DaysOffLookup, EfDbContext>>().As<IRepository<claim_DaysOffLookup>>();
			builder.RegisterType<EfRepository<claim_DaysOffType, EfDbContext>>().As<IRepository<claim_DaysOffType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_DiseaseType, EfDbContext>>().As<IRepository<claim_DiseaseType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_DocumentRule, EfDbContext>>().As<IRepository<claim_DocumentRule>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Earning, EfDbContext>>().As<IRepository<claim_Earning>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_EarningDetail, EfDbContext>>().As<IRepository<claim_EarningDetail>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_EarningType, EfDbContext>>().As<IRepository<claim_EarningType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_EstimateType, EfDbContext>>().As<IRepository<claim_EstimateType>>();
			builder.RegisterType<EfRepository<claim_EuropAssistNotification, EfDbContext>>().As<IRepository<claim_EuropAssistNotification>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Event, EfDbContext>>().As<IRepository<claim_Event>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_EventCause, EfDbContext>>().As<IRepository<claim_EventCause>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_EventNote, EfDbContext>>().As<IRepository<claim_EventNote>>();
			builder.RegisterType<EfRepository<claim_FamilyAllowanceAward, EfDbContext>>().As<IRepository<claim_FamilyAllowanceAward>>();
			builder.RegisterType<EfRepository<claim_FatalLumpSumInvoice, EfDbContext>>().As<IRepository<claim_FatalLumpSumInvoice>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_FatalPdLumpsumInvoice, EfDbContext>>().As<IRepository<claim_FatalPdLumpsumInvoice>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_FuneralExpenseInvoice, EfDbContext>>().As<IRepository<claim_FuneralExpenseInvoice>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_FuneralInvoice, EfDbContext>>().As<IRepository<claim_FuneralInvoice>>();
			builder.RegisterType<EfRepository<claim_HearingAssessment, EfDbContext>>().As<IRepository<claim_HearingAssessment>>();
			builder.RegisterType<EfRepository<claim_HearingAssessmentType, EfDbContext>>().As<IRepository<claim_HearingAssessmentType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Icd10CodeEstimateLookup, EfDbContext>>().As<IRepository<claim_Icd10CodeEstimateLookup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Injury, EfDbContext>>().As<IRepository<claim_Injury>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_InjuryEstimateBasisCostDaysPdExtension, EfDbContext>>().As<IRepository<claim_InjuryEstimateBasisCostDaysPdExtension>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_InvoiceAllocation, EfDbContext>>().As<IRepository<claim_InvoiceAllocation>>();
			builder.RegisterType<EfRepository<claim_LastViewed, EfDbContext>>().As<IRepository<claim_LastViewed>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_LiabilityDecisionType, EfDbContext>>().As<IRepository<claim_LiabilityDecisionType>>();
			builder.RegisterType<EfRepository<claim_LimitBenefitGroup, EfDbContext>>().As<IRepository<claim_LimitBenefitGroup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ManageUser, EfDbContext>>().As<IRepository<claim_ManageUser>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_MedicalCostLookup, EfDbContext>>().As<IRepository<claim_MedicalCostLookup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_MedicalReport, EfDbContext>>().As<IRepository<claim_MedicalReport>>();
			builder.RegisterType<EfRepository<claim_MedicalReportFormWizardDetail, EfDbContext>>().As<IRepository<claim_MedicalReportFormWizardDetail>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_NihlLookup, EfDbContext>>().As<IRepository<claim_NihlLookup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_Note, EfDbContext>>().As<IRepository<claim_Note>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_ParentInsuranceType, EfDbContext>>().As<IRepository<claim_ParentInsuranceType>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PatersonGrading, EfDbContext>>().As<IRepository<claim_PatersonGrading>>();
			builder.RegisterType<EfRepository<claim_PaymentReversal, EfDbContext>>().As<IRepository<claim_PaymentReversal>>();
			builder.RegisterType<EfRepository<claim_PaymentReversalTest, EfDbContext>>().As<IRepository<claim_PaymentReversalTest>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PdAward, EfDbContext>>().As<IRepository<claim_PdAward>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PdCombinationTable, EfDbContext>>().As<IRepository<claim_PdCombinationTable>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PdExtentLookup, EfDbContext>>().As<IRepository<claim_PdExtentLookup>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PdRecovery, EfDbContext>>().As<IRepository<claim_PdRecovery>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PdRecoveryStatu, EfDbContext>>().As<IRepository<claim_PdRecoveryStatu>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PersonEvent, EfDbContext>>().As<IRepository<claim_PersonEvent>>();
			builder.RegisterType<EfRepository<claim_PersonEventAccidentDetail, EfDbContext>>().As<IRepository<claim_PersonEventAccidentDetail>>();
			builder.RegisterType<EfRepository<claim_PersonEventAssaultDetail, EfDbContext>>().As<IRepository<claim_PersonEventAssaultDetail>>();
			builder.RegisterType<EfRepository<claim_PersonEventClaimRequirement, EfDbContext>>().As<IRepository<claim_PersonEventClaimRequirement>>();
			builder.RegisterType<EfRepository<claim_PersonEventDeathDetail, EfDbContext>>().As<IRepository<claim_PersonEventDeathDetail>>();
			builder.RegisterType<EfRepository<claim_PersonEventDiseaseDetail, EfDbContext>>().As<IRepository<claim_PersonEventDiseaseDetail>>();
			builder.RegisterType<EfRepository<claim_PersonEventNoiseDetail, EfDbContext>>().As<IRepository<claim_PersonEventNoiseDetail>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PersonEventNote, EfDbContext>>().As<IRepository<claim_PersonEventNote>>();
			builder.RegisterType<EfRepository<claim_PersonEventQuestionnaire, EfDbContext>>().As<IRepository<claim_PersonEventQuestionnaire>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PersonEventStpExitReason, EfDbContext>>().As<IRepository<claim_PersonEventStpExitReason>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PhysicalDamage, EfDbContext>>().As<IRepository<claim_PhysicalDamage>>();
			builder.RegisterType<EfRepositorySoftDeleteEntities<claim_PolBenEarningsRangeCalc, EfDbContext>>().As<IRepository<claim_PolBenEarningsRangeCalc>>();
			builder.RegisterType<EfRepository<claim_ReferralDetail, EfDbContext>>().As<IRepository<claim_ReferralDetail>>();
			builder.RegisterType<EfRepository<claim_ReferralQueryType, EfDbContext>>().As<IRepository<claim_ReferralQueryType>>();
			builder.RegisterType<EfRepository<claim_ReferralStatu, EfDbContext>>().As<IRepository<claim_ReferralStatu>>();
			builder.RegisterType<EfRepository<claim_ReferralTypeLimitConfiguration, EfDbContext>>().As<IRepository<claim_ReferralTypeLimitConfiguration>>();
			builder.RegisterType<EfRepository<claim_ReferralTypeLimitGroup, EfDbContext>>().As<IRepository<claim_ReferralTypeLimitGroup>>();
            builder.RegisterType<EfRepository<claim_ReOpenReason, EfDbContext>>().As<IRepository<claim_ReOpenReason>>();
            builder.RegisterType<EfRepository<claim_RuleDocumentType, EfDbContext>>().As<IRepository<claim_RuleDocumentType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_SecondaryInjury, EfDbContext>>().As<IRepository<claim_SecondaryInjury>>();
            builder.RegisterType<EfRepository<claim_StpExitReason, EfDbContext>>().As<IRepository<claim_StpExitReason>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_SundryInvoice, EfDbContext>>().As<IRepository<claim_SundryInvoice>>();
            builder.RegisterType<EfRepository<claim_SundryServiceProvider, EfDbContext>>().As<IRepository<claim_SundryServiceProvider>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_SundryServiceType, EfDbContext>>().As<IRepository<claim_SundryServiceType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_SympathyAwardInvoice, EfDbContext>>().As<IRepository<claim_SympathyAwardInvoice>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TracerInvoice, EfDbContext>>().As<IRepository<claim_TracerInvoice>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TravelAuthorisation, EfDbContext>>().As<IRepository<claim_TravelAuthorisation>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TravelAuthorisedParty, EfDbContext>>().As<IRepository<claim_TravelAuthorisedParty>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TravelInvoice, EfDbContext>>().As<IRepository<claim_TravelInvoice>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TravelRateType, EfDbContext>>().As<IRepository<claim_TravelRateType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_TtdInvoice, EfDbContext>>().As<IRepository<claim_TtdInvoice>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_UnclaimedBenefitHeader, EfDbContext>>().As<IRepository<claim_UnclaimedBenefitHeader>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_UnclaimedBenefitInterest, EfDbContext>>().As<IRepository<claim_UnclaimedBenefitInterest>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<claim_WidowLumpSumInvoice, EfDbContext>>().As<IRepository<claim_WidowLumpSumInvoice>>();
            builder.RegisterType<EfRepository<common_AccidentType, EfDbContext>>().As<IRepository<common_AccidentType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_Announcement, EfDbContext>>().As<IRepository<common_Announcement>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementRole, EfDbContext>>().As<IRepository<common_AnnouncementRole>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_AnnouncementUserAcceptance, EfDbContext>>().As<IRepository<common_AnnouncementUserAcceptance>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_ClaimTypeMapping, EfDbContext>>().As<IRepository<common_ClaimTypeMapping>>();
            builder.RegisterType<EfRepository<common_ColReceivedFrom, EfDbContext>>().As<IRepository<common_ColReceivedFrom>>();
            builder.RegisterType<EfRepository<common_ColReceiveMethod, EfDbContext>>().As<IRepository<common_ColReceiveMethod>>();
            builder.RegisterType<EfRepository<common_ColReceiveType, EfDbContext>>().As<IRepository<common_ColReceiveType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_CommissionBand, EfDbContext>>().As<IRepository<common_CommissionBand>>();
            builder.RegisterType<EfRepository<common_CvPaymentStatu, EfDbContext>>().As<IRepository<common_CvPaymentStatu>>();
            builder.RegisterType<EfRepository<common_DebtSmsStatu, EfDbContext>>().As<IRepository<common_DebtSmsStatu>>();
            builder.RegisterType<EfRepository<common_DepartmentLookup, EfDbContext>>().As<IRepository<common_DepartmentLookup>>();
            builder.RegisterType<EfRepository<common_DesignationType, EfDbContext>>().As<IRepository<common_DesignationType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_EuropAssistPremiumMatrix, EfDbContext>>().As<IRepository<common_EuropAssistPremiumMatrix>>();
            builder.RegisterType<EfRepository<common_EventAction, EfDbContext>>().As<IRepository<common_EventAction>>();
            builder.RegisterType<EfRepository<common_EventActivity, EfDbContext>>().As<IRepository<common_EventActivity>>();
            builder.RegisterType<EfRepository<common_EventAgent, EfDbContext>>().As<IRepository<common_EventAgent>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_FeatureFlagSetting, EfDbContext>>().As<IRepository<common_FeatureFlagSetting>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_LookupValue, EfDbContext>>().As<IRepository<common_LookupValue>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_MonthlyScheduledWorkPoolUser, EfDbContext>>().As<IRepository<common_MonthlyScheduledWorkPoolUser>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_OccupationType, EfDbContext>>().As<IRepository<common_OccupationType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_OneTimePin, EfDbContext>>().As<IRepository<common_OneTimePin>>();
            builder.RegisterType<EfRepository<common_PartnerCompany, EfDbContext>>().As<IRepository<common_PartnerCompany>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_PayeeType, EfDbContext>>().As<IRepository<common_PayeeType>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_PensCareSetting, EfDbContext>>().As<IRepository<common_PensCareSetting>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_Period, EfDbContext>>().As<IRepository<common_Period>>();
            builder.RegisterType<EfRepository<common_PoolWorkFlow, EfDbContext>>().As<IRepository<common_PoolWorkFlow>>();
            builder.RegisterType<EfRepository<common_PreviousInsurer, EfDbContext>>().As<IRepository<common_PreviousInsurer>>();
            builder.RegisterType<EfRepository<common_ReportViewedAudit, EfDbContext>>().As<IRepository<common_ReportViewedAudit>>();
            builder.RegisterType<EfRepository<common_RetirementReason, EfDbContext>>().As<IRepository<common_RetirementReason>>();
            builder.RegisterType<EfRepository<common_ServiceBusMessage, EfDbContext>>().As<IRepository<common_ServiceBusMessage>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_SlaItemTypeConfiguration, EfDbContext>>().As<IRepository<common_SlaItemTypeConfiguration>>();
            builder.RegisterType<EfRepository<common_SlaMovementAudit, EfDbContext>>().As<IRepository<common_SlaMovementAudit>>();
            builder.RegisterType<EfRepository<common_SlaStatusChangeAudit, EfDbContext>>().As<IRepository<common_SlaStatusChangeAudit>>();
            builder.RegisterType<EfRepository<common_TmpDebtorsDetail, EfDbContext>>().As<IRepository<common_TmpDebtorsDetail>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_UnderAssessReason, EfDbContext>>().As<IRepository<common_UnderAssessReason>>();
            builder.RegisterType<EfRepository<common_UpfrontCommClawbackratio, EfDbContext>>().As<IRepository<common_UpfrontCommClawbackratio>>();
            builder.RegisterType<EfRepository<common_UserReminder, EfDbContext>>().As<IRepository<common_UserReminder>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_Vat, EfDbContext>>().As<IRepository<common_Vat>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<common_WorkItemType, EfDbContext>>().As<IRepository<common_WorkItemType>>();
            builder.RegisterType<EfRepository<cost_AuditLog, EfDbContext>>().As<IRepository<cost_AuditLog>>();
            builder.RegisterType<EfRepository<cost_LastViewed, EfDbContext>>().As<IRepository<cost_LastViewed>>();
            builder.RegisterType<EfRepositorySoftDeleteEntities<cost_Note, EfDbContext>>().As<IRepository<cost_Note>>();

        }
	}
}
