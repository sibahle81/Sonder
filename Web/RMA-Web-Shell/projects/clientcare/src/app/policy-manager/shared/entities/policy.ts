import { RolePlayer } from 'projects/clientcare/src/app/policy-manager/shared/entities/roleplayer';
import { ProductOption } from '../../../product-manager/models/product-option';
import { PolicyStatusEnum } from '../enums/policy-status.enum';
import { ReinstateReasonEnum } from '../enums/reinstate-reason.enum';
import { PolicyInsuredLife } from './policy-insured-life';
import { PolicyLifeExtension } from './policy-life-extension';
import { PolicyStatusChangeAudit } from './policy-status-change-audit';
import { QuoteV2 } from '../../../quote-manager/models/quoteV2';
import { RolePlayerPolicyDeclaration } from './role-player-policy-declaration';
import { Cover } from './cover';
import { CategoryInsuredCover } from './category-insured-cover';
import { ProductCategoryTypeEnum } from '../enums/product-category-type.enum';
import { RolePlayerPolicyOnlineSubmission } from './role-player-policy-online-submission';

export class Policy {
  policyId: number;
  brokerageId: number;
  productOption: ProductOption;
  productOptionId: number;
  representativeId: number;
  juristicRepresentativeId: number;
  policyOwnerId: number;
  policyOwner: RolePlayer;
  policyPayeeId: number;
  paymentFrequencyId: number;
  paymentMethodId: number;
  policyStatusId: number;
  policyStatus: PolicyStatusEnum;
  policyCancelReasonId: number;
  policyMovementId: number;
  policyNumber: string;
  clientReference: string;
  clientName: string;
  brokerageName: string;
  representativeName: string;
  policyInceptionDate?: Date;
  expiryDate: Date;
  cancellationInitiatedDate: Date;
  cancellationInitiatedBy: string;
  cancellationDate: Date;
  firstInstallmentDate: Date;
  lastInstallmentDate: Date;
  lastLapsedDate: Date;
  lastReinstateDate: Date;
  lapsedCount: number;
  regularInstallmentDayOfMonth: number;
  decemberInstallmentDayOfMonth: number;
  annualPremium: number;
  installmentPremium: number;
  commissionPercentage = 0.0;
  adminPercentage = 0.0;
  binderFeePercentage = 0.0;
  premiumAdjustmentPercentage = 0.0;
  quoteId: number;
  quoteV2: QuoteV2;
  policyInsuredLives: PolicyInsuredLife[];
  isEuropAssist: boolean;
  europAssistEffectiveDate: Date;
  europAssistEndDate: Date;
  reinstateReason: ReinstateReasonEnum;
  policyLifeExtension: PolicyLifeExtension;
  policyStatusChangeAudits: PolicyStatusChangeAudit[];
  parentPolicyId: number;
  policyPauseDate: Date;
  premiumAdjustmentAmount: number;
  rolePlayerPolicyDeclarations: RolePlayerPolicyDeclaration[];
  rolePlayerPolicyOnlineSubmissions: RolePlayerPolicyOnlineSubmission[];
  targetedPolicyInceptionDate: Date;
  covers: Cover[];
  categoryInsuredCovers: CategoryInsuredCover[];
  productCategoryType: ProductCategoryTypeEnum;

  canEdit: boolean;
  canAdd: boolean;
  canRemove: boolean;
  isDeleted: boolean;
  createdBy: string;
  createdDate: Date;
  modifiedBy: string;
  modifiedDate: Date;
}
