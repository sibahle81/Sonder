import { Note } from 'projects/shared-components-lib/src/lib/notes/note';
import { BankAccountTypeEnum } from 'projects/shared-models-lib/src/lib/enums/bank-account-type-enum';
import { IndustryClassEnum } from 'projects/shared-models-lib/src/lib/enums/industry-class.enum';
import { PaymentMethodEnum } from 'projects/shared-models-lib/src/lib/enums/payment-method-enum';
import { TermArrangementStatusEnum } from 'projects/shared-models-lib/src/lib/enums/term-arrangement-status';
import { TermArrangementSchedule } from './term-arrangement-schedule';
import { TermArrangementSubsidiary } from './term-arrangement-subsidiary';
import { TermFlexibleSchedule } from './term-flexible-schedule';
import { TermArrangementProductOption } from './term-arrangement-productoption';
import { TermArrangementPaymentFrequencyEnum } from 'projects/shared-models-lib/src/lib/enums/term-arrangement-payment-frequency.enum';

export class TermArrangement {
    termArrangementId: number;
    invoiceId: number;
    totalAmount: number;
    termArrangementStatus: TermArrangementStatusEnum;
    paymentMethod: PaymentMethodEnum;
    startDate: Date;
    endDate: Date;
    isDeleted: boolean;
    createdBy: string;
    createdDate: Date;
    modifiedBy: string;
    modifiedDate: Date;
    notificationDate: Date;
    termMonths: number;
    balance: number;
    termArrangementSchedules: TermArrangementSchedule[];
    termsArrangementNotes: Note[];
    rolePlayerId: number;
    memberName: string;
    memberNumber: string;
    invoiceNumber: string;
    invoiceBalance: number;
    installmentDay: number;
    policyId: number;
    policyNumber: string;
    sendAgreementToClient: boolean;
    termArrangementPaymentFrequency: TermArrangementPaymentFrequencyEnum;
    rolePlayerBankingId: number = 0;
    noAutoApprovalReasons?: string[];
    termArrangementSubsidiaries: TermArrangementSubsidiary[];
    termFlexibleSchedules: TermFlexibleSchedule[];
    isActive: boolean;
    termArrangementProductOptions: TermArrangementProductOption[];
    balanceCarriedToNextCycle: number;
    bankaccountId: number;
    linkedTermArrangementId: number;
    numberOfPayments: number;
}
